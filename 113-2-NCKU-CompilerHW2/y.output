Terminals unused in grammar

    ADD_ASSIGN
    SUB_ASSIGN
    MUL_ASSIGN
    DIV_ASSIGN
    REM_ASSIGN
    IF
    ELSE
    FOR
    WHILE
    LOOP
    RETURN
    BREAK
    ARROW
    AS
    IN
    DOTDOT
    RSHIFT
    LSHIFT


Grammar

    0 $accept: Program $end

    1 $@1: ε

    2 Program: $@1 GlobalStatementList

    3 GlobalStatementList: GlobalStatementList GlobalStatement
    4                    | GlobalStatement

    5 GlobalStatement: FunctionDeclStmt
    6                | NEWLINE

    7 $@2: ε

    8 FunctionDeclStmt: FUNC ID '(' Type ')' $@2 Block

    9 StmtList: StmtList Stmt
   10         | ε

   11 Stmt: PrintStmt
   12     | DeclarationStmt
   13     | Block

   14 $@3: ε

   15 Block: '{' $@3 StmtList '}'

   16 Expr: ID
   17     | INT_LIT
   18     | FLOAT_LIT
   19     | STRING_LIT
   20     | TRUE
   21     | FALSE
   22     | '-' Expr
   23     | '!' Expr
   24     | '(' Expr ')'
   25     | Expr '*' Expr
   26     | Expr '/' Expr
   27     | Expr '%' Expr
   28     | Expr '+' Expr
   29     | Expr '-' Expr
   30     | Expr LAND Expr
   31     | Expr LOR Expr
   32     | Expr GEQ Expr
   33     | Expr LEQ Expr
   34     | Expr EQL Expr
   35     | Expr NEQ Expr
   36     | Expr '>' Expr
   37     | Expr '<' Expr

   38 PrintStmt: PrintType '(' '"' STRING_LIT '"' ')' ';'
   39          | PrintType '(' Expr ')' ';'

   40 DeclarationStmt: LET MutType ID ':' INT '=' INT_LIT ';'
   41                | LET MutType ID ':' FLOAT '=' FLOAT_LIT ';'
   42                | LET MutType ID ':' BOOL '=' TRUE ';'
   43                | LET MutType ID ':' BOOL '=' FALSE ';'
   44                | LET MutType ID ':' STR '=' '"' STRING_LIT '"' ';'
   45                | LET MutType ID ':' '&' STR '=' '"' STRING_LIT '"' ';'

   46 Type: INT
   47     | FLOAT
   48     | BOOL
   49     | STR
   50     | ε

   51 PrintType: PRINT
   52          | PRINTLN

   53 MutType: MUT
   54        | ε


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 23
    '"' (34) 38 44 45
    '%' (37) 27
    '&' (38) 45
    '(' (40) 8 24 38 39
    ')' (41) 8 24 38 39
    '*' (42) 25
    '+' (43) 28
    '-' (45) 22 29
    '/' (47) 26
    ':' (58) 40 41 42 43 44 45
    ';' (59) 38 39 40 41 42 43 44 45
    '<' (60) 37
    '=' (61) 40 41 42 43 44 45
    '>' (62) 36
    '{' (123) 15
    '}' (125) 15
    error (256)
    LET (258) 40 41 42 43 44 45
    MUT (259) 53
    NEWLINE (260) 6
    INT (261) 40 46
    FLOAT (262) 41 47
    BOOL (263) 42 43 48
    STR (264) 44 45 49
    TRUE (265) 20 42
    FALSE (266) 21 43
    GEQ (267) 32
    LEQ (268) 33
    EQL (269) 34
    NEQ (270) 35
    LOR (271) 31
    LAND (272) 30
    ADD_ASSIGN (273)
    SUB_ASSIGN (274)
    MUL_ASSIGN (275)
    DIV_ASSIGN (276)
    REM_ASSIGN (277)
    IF (278)
    ELSE (279)
    FOR (280)
    WHILE (281)
    LOOP (282)
    PRINT (283) 51
    PRINTLN (284) 52
    FUNC (285) 8
    RETURN (286)
    BREAK (287)
    ARROW (288)
    AS (289)
    IN (290)
    DOTDOT (291)
    RSHIFT (292)
    LSHIFT (293)
    INT_LIT <i_val> (294) 17 40
    FLOAT_LIT <f_val> (295) 18 41
    STRING_LIT <s_val> (296) 19 38 44 45
    ID <s_val> (297) 8 16 40 41 42 43 44 45
    UMINUS (298)


Nonterminals, with rules where they appear

    $accept (61)
        on left: 0
    Program (62)
        on left: 2
        on right: 0
    $@1 (63)
        on left: 1
        on right: 2
    GlobalStatementList (64)
        on left: 3 4
        on right: 2 3
    GlobalStatement (65)
        on left: 5 6
        on right: 3 4
    FunctionDeclStmt (66)
        on left: 8
        on right: 5
    $@2 (67)
        on left: 7
        on right: 8
    StmtList (68)
        on left: 9 10
        on right: 9 15
    Stmt (69)
        on left: 11 12 13
        on right: 9
    Block (70)
        on left: 15
        on right: 8 13
    $@3 (71)
        on left: 14
        on right: 15
    Expr <s_val> (72)
        on left: 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37
        on right: 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 39
    PrintStmt (73)
        on left: 38 39
        on right: 11
    DeclarationStmt (74)
        on left: 40 41 42 43 44 45
        on right: 12
    Type <s_val> (75)
        on left: 46 47 48 49 50
        on right: 8
    PrintType <s_val> (76)
        on left: 51 52
        on right: 38 39
    MutType <i_val> (77)
        on left: 53 54
        on right: 40 41 42 43 44 45


State 0

    0 $accept: • Program $end

    $default  reduce using rule 1 ($@1)

    Program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: Program • $end

    $end  shift, and go to state 3


State 2

    2 Program: $@1 • GlobalStatementList

    NEWLINE  shift, and go to state 4
    FUNC     shift, and go to state 5

    GlobalStatementList  go to state 6
    GlobalStatement      go to state 7
    FunctionDeclStmt     go to state 8


State 3

    0 $accept: Program $end •

    $default  accept


State 4

    6 GlobalStatement: NEWLINE •

    $default  reduce using rule 6 (GlobalStatement)


State 5

    8 FunctionDeclStmt: FUNC • ID '(' Type ')' $@2 Block

    ID  shift, and go to state 9


State 6

    2 Program: $@1 GlobalStatementList •
    3 GlobalStatementList: GlobalStatementList • GlobalStatement

    NEWLINE  shift, and go to state 4
    FUNC     shift, and go to state 5

    $default  reduce using rule 2 (Program)

    GlobalStatement   go to state 10
    FunctionDeclStmt  go to state 8


State 7

    4 GlobalStatementList: GlobalStatement •

    $default  reduce using rule 4 (GlobalStatementList)


State 8

    5 GlobalStatement: FunctionDeclStmt •

    $default  reduce using rule 5 (GlobalStatement)


State 9

    8 FunctionDeclStmt: FUNC ID • '(' Type ')' $@2 Block

    '('  shift, and go to state 11


State 10

    3 GlobalStatementList: GlobalStatementList GlobalStatement •

    $default  reduce using rule 3 (GlobalStatementList)


State 11

    8 FunctionDeclStmt: FUNC ID '(' • Type ')' $@2 Block

    INT    shift, and go to state 12
    FLOAT  shift, and go to state 13
    BOOL   shift, and go to state 14
    STR    shift, and go to state 15

    $default  reduce using rule 50 (Type)

    Type  go to state 16


State 12

   46 Type: INT •

    $default  reduce using rule 46 (Type)


State 13

   47 Type: FLOAT •

    $default  reduce using rule 47 (Type)


State 14

   48 Type: BOOL •

    $default  reduce using rule 48 (Type)


State 15

   49 Type: STR •

    $default  reduce using rule 49 (Type)


State 16

    8 FunctionDeclStmt: FUNC ID '(' Type • ')' $@2 Block

    ')'  shift, and go to state 17


State 17

    8 FunctionDeclStmt: FUNC ID '(' Type ')' • $@2 Block

    $default  reduce using rule 7 ($@2)

    $@2  go to state 18


State 18

    8 FunctionDeclStmt: FUNC ID '(' Type ')' $@2 • Block

    '{'  shift, and go to state 19

    Block  go to state 20


State 19

   15 Block: '{' • $@3 StmtList '}'

    $default  reduce using rule 14 ($@3)

    $@3  go to state 21


State 20

    8 FunctionDeclStmt: FUNC ID '(' Type ')' $@2 Block •

    $default  reduce using rule 8 (FunctionDeclStmt)


State 21

   15 Block: '{' $@3 • StmtList '}'

    $default  reduce using rule 10 (StmtList)

    StmtList  go to state 22


State 22

    9 StmtList: StmtList • Stmt
   15 Block: '{' $@3 StmtList • '}'

    LET      shift, and go to state 23
    PRINT    shift, and go to state 24
    PRINTLN  shift, and go to state 25
    '{'      shift, and go to state 19
    '}'      shift, and go to state 26

    Stmt             go to state 27
    Block            go to state 28
    PrintStmt        go to state 29
    DeclarationStmt  go to state 30
    PrintType        go to state 31


State 23

   40 DeclarationStmt: LET • MutType ID ':' INT '=' INT_LIT ';'
   41                | LET • MutType ID ':' FLOAT '=' FLOAT_LIT ';'
   42                | LET • MutType ID ':' BOOL '=' TRUE ';'
   43                | LET • MutType ID ':' BOOL '=' FALSE ';'
   44                | LET • MutType ID ':' STR '=' '"' STRING_LIT '"' ';'
   45                | LET • MutType ID ':' '&' STR '=' '"' STRING_LIT '"' ';'

    MUT  shift, and go to state 32

    $default  reduce using rule 54 (MutType)

    MutType  go to state 33


State 24

   51 PrintType: PRINT •

    $default  reduce using rule 51 (PrintType)


State 25

   52 PrintType: PRINTLN •

    $default  reduce using rule 52 (PrintType)


State 26

   15 Block: '{' $@3 StmtList '}' •

    $default  reduce using rule 15 (Block)


State 27

    9 StmtList: StmtList Stmt •

    $default  reduce using rule 9 (StmtList)


State 28

   13 Stmt: Block •

    $default  reduce using rule 13 (Stmt)


State 29

   11 Stmt: PrintStmt •

    $default  reduce using rule 11 (Stmt)


State 30

   12 Stmt: DeclarationStmt •

    $default  reduce using rule 12 (Stmt)


State 31

   38 PrintStmt: PrintType • '(' '"' STRING_LIT '"' ')' ';'
   39          | PrintType • '(' Expr ')' ';'

    '('  shift, and go to state 34


State 32

   53 MutType: MUT •

    $default  reduce using rule 53 (MutType)


State 33

   40 DeclarationStmt: LET MutType • ID ':' INT '=' INT_LIT ';'
   41                | LET MutType • ID ':' FLOAT '=' FLOAT_LIT ';'
   42                | LET MutType • ID ':' BOOL '=' TRUE ';'
   43                | LET MutType • ID ':' BOOL '=' FALSE ';'
   44                | LET MutType • ID ':' STR '=' '"' STRING_LIT '"' ';'
   45                | LET MutType • ID ':' '&' STR '=' '"' STRING_LIT '"' ';'

    ID  shift, and go to state 35


State 34

   38 PrintStmt: PrintType '(' • '"' STRING_LIT '"' ')' ';'
   39          | PrintType '(' • Expr ')' ';'

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    INT_LIT     shift, and go to state 38
    FLOAT_LIT   shift, and go to state 39
    STRING_LIT  shift, and go to state 40
    ID          shift, and go to state 41
    '!'         shift, and go to state 42
    '-'         shift, and go to state 43
    '('         shift, and go to state 44
    '"'         shift, and go to state 45

    Expr  go to state 46


State 35

   40 DeclarationStmt: LET MutType ID • ':' INT '=' INT_LIT ';'
   41                | LET MutType ID • ':' FLOAT '=' FLOAT_LIT ';'
   42                | LET MutType ID • ':' BOOL '=' TRUE ';'
   43                | LET MutType ID • ':' BOOL '=' FALSE ';'
   44                | LET MutType ID • ':' STR '=' '"' STRING_LIT '"' ';'
   45                | LET MutType ID • ':' '&' STR '=' '"' STRING_LIT '"' ';'

    ':'  shift, and go to state 47


State 36

   20 Expr: TRUE •

    $default  reduce using rule 20 (Expr)


State 37

   21 Expr: FALSE •

    $default  reduce using rule 21 (Expr)


State 38

   17 Expr: INT_LIT •

    $default  reduce using rule 17 (Expr)


State 39

   18 Expr: FLOAT_LIT •

    $default  reduce using rule 18 (Expr)


State 40

   19 Expr: STRING_LIT •

    $default  reduce using rule 19 (Expr)


State 41

   16 Expr: ID •

    $default  reduce using rule 16 (Expr)


State 42

   23 Expr: '!' • Expr

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    INT_LIT     shift, and go to state 38
    FLOAT_LIT   shift, and go to state 39
    STRING_LIT  shift, and go to state 40
    ID          shift, and go to state 41
    '!'         shift, and go to state 42
    '-'         shift, and go to state 43
    '('         shift, and go to state 44

    Expr  go to state 48


State 43

   22 Expr: '-' • Expr

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    INT_LIT     shift, and go to state 38
    FLOAT_LIT   shift, and go to state 39
    STRING_LIT  shift, and go to state 40
    ID          shift, and go to state 41
    '!'         shift, and go to state 42
    '-'         shift, and go to state 43
    '('         shift, and go to state 44

    Expr  go to state 49


State 44

   24 Expr: '(' • Expr ')'

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    INT_LIT     shift, and go to state 38
    FLOAT_LIT   shift, and go to state 39
    STRING_LIT  shift, and go to state 40
    ID          shift, and go to state 41
    '!'         shift, and go to state 42
    '-'         shift, and go to state 43
    '('         shift, and go to state 44

    Expr  go to state 50


State 45

   38 PrintStmt: PrintType '(' '"' • STRING_LIT '"' ')' ';'

    STRING_LIT  shift, and go to state 51


State 46

   25 Expr: Expr • '*' Expr
   26     | Expr • '/' Expr
   27     | Expr • '%' Expr
   28     | Expr • '+' Expr
   29     | Expr • '-' Expr
   30     | Expr • LAND Expr
   31     | Expr • LOR Expr
   32     | Expr • GEQ Expr
   33     | Expr • LEQ Expr
   34     | Expr • EQL Expr
   35     | Expr • NEQ Expr
   36     | Expr • '>' Expr
   37     | Expr • '<' Expr
   39 PrintStmt: PrintType '(' Expr • ')' ';'

    GEQ   shift, and go to state 52
    LEQ   shift, and go to state 53
    EQL   shift, and go to state 54
    NEQ   shift, and go to state 55
    LOR   shift, and go to state 56
    LAND  shift, and go to state 57
    '>'   shift, and go to state 58
    '<'   shift, and go to state 59
    '+'   shift, and go to state 60
    '-'   shift, and go to state 61
    '*'   shift, and go to state 62
    '/'   shift, and go to state 63
    '%'   shift, and go to state 64
    ')'   shift, and go to state 65


State 47

   40 DeclarationStmt: LET MutType ID ':' • INT '=' INT_LIT ';'
   41                | LET MutType ID ':' • FLOAT '=' FLOAT_LIT ';'
   42                | LET MutType ID ':' • BOOL '=' TRUE ';'
   43                | LET MutType ID ':' • BOOL '=' FALSE ';'
   44                | LET MutType ID ':' • STR '=' '"' STRING_LIT '"' ';'
   45                | LET MutType ID ':' • '&' STR '=' '"' STRING_LIT '"' ';'

    INT    shift, and go to state 66
    FLOAT  shift, and go to state 67
    BOOL   shift, and go to state 68
    STR    shift, and go to state 69
    '&'    shift, and go to state 70


State 48

   23 Expr: '!' Expr •
   25     | Expr • '*' Expr
   26     | Expr • '/' Expr
   27     | Expr • '%' Expr
   28     | Expr • '+' Expr
   29     | Expr • '-' Expr
   30     | Expr • LAND Expr
   31     | Expr • LOR Expr
   32     | Expr • GEQ Expr
   33     | Expr • LEQ Expr
   34     | Expr • EQL Expr
   35     | Expr • NEQ Expr
   36     | Expr • '>' Expr
   37     | Expr • '<' Expr

    GEQ  shift, and go to state 52
    LEQ  shift, and go to state 53
    EQL  shift, and go to state 54
    NEQ  shift, and go to state 55
    '>'  shift, and go to state 58
    '<'  shift, and go to state 59
    '+'  shift, and go to state 60
    '-'  shift, and go to state 61
    '*'  shift, and go to state 62
    '/'  shift, and go to state 63
    '%'  shift, and go to state 64

    $default  reduce using rule 23 (Expr)


State 49

   22 Expr: '-' Expr •
   25     | Expr • '*' Expr
   26     | Expr • '/' Expr
   27     | Expr • '%' Expr
   28     | Expr • '+' Expr
   29     | Expr • '-' Expr
   30     | Expr • LAND Expr
   31     | Expr • LOR Expr
   32     | Expr • GEQ Expr
   33     | Expr • LEQ Expr
   34     | Expr • EQL Expr
   35     | Expr • NEQ Expr
   36     | Expr • '>' Expr
   37     | Expr • '<' Expr

    $default  reduce using rule 22 (Expr)


State 50

   24 Expr: '(' Expr • ')'
   25     | Expr • '*' Expr
   26     | Expr • '/' Expr
   27     | Expr • '%' Expr
   28     | Expr • '+' Expr
   29     | Expr • '-' Expr
   30     | Expr • LAND Expr
   31     | Expr • LOR Expr
   32     | Expr • GEQ Expr
   33     | Expr • LEQ Expr
   34     | Expr • EQL Expr
   35     | Expr • NEQ Expr
   36     | Expr • '>' Expr
   37     | Expr • '<' Expr

    GEQ   shift, and go to state 52
    LEQ   shift, and go to state 53
    EQL   shift, and go to state 54
    NEQ   shift, and go to state 55
    LOR   shift, and go to state 56
    LAND  shift, and go to state 57
    '>'   shift, and go to state 58
    '<'   shift, and go to state 59
    '+'   shift, and go to state 60
    '-'   shift, and go to state 61
    '*'   shift, and go to state 62
    '/'   shift, and go to state 63
    '%'   shift, and go to state 64
    ')'   shift, and go to state 71


State 51

   38 PrintStmt: PrintType '(' '"' STRING_LIT • '"' ')' ';'

    '"'  shift, and go to state 72


State 52

   32 Expr: Expr GEQ • Expr

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    INT_LIT     shift, and go to state 38
    FLOAT_LIT   shift, and go to state 39
    STRING_LIT  shift, and go to state 40
    ID          shift, and go to state 41
    '!'         shift, and go to state 42
    '-'         shift, and go to state 43
    '('         shift, and go to state 44

    Expr  go to state 73


State 53

   33 Expr: Expr LEQ • Expr

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    INT_LIT     shift, and go to state 38
    FLOAT_LIT   shift, and go to state 39
    STRING_LIT  shift, and go to state 40
    ID          shift, and go to state 41
    '!'         shift, and go to state 42
    '-'         shift, and go to state 43
    '('         shift, and go to state 44

    Expr  go to state 74


State 54

   34 Expr: Expr EQL • Expr

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    INT_LIT     shift, and go to state 38
    FLOAT_LIT   shift, and go to state 39
    STRING_LIT  shift, and go to state 40
    ID          shift, and go to state 41
    '!'         shift, and go to state 42
    '-'         shift, and go to state 43
    '('         shift, and go to state 44

    Expr  go to state 75


State 55

   35 Expr: Expr NEQ • Expr

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    INT_LIT     shift, and go to state 38
    FLOAT_LIT   shift, and go to state 39
    STRING_LIT  shift, and go to state 40
    ID          shift, and go to state 41
    '!'         shift, and go to state 42
    '-'         shift, and go to state 43
    '('         shift, and go to state 44

    Expr  go to state 76


State 56

   31 Expr: Expr LOR • Expr

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    INT_LIT     shift, and go to state 38
    FLOAT_LIT   shift, and go to state 39
    STRING_LIT  shift, and go to state 40
    ID          shift, and go to state 41
    '!'         shift, and go to state 42
    '-'         shift, and go to state 43
    '('         shift, and go to state 44

    Expr  go to state 77


State 57

   30 Expr: Expr LAND • Expr

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    INT_LIT     shift, and go to state 38
    FLOAT_LIT   shift, and go to state 39
    STRING_LIT  shift, and go to state 40
    ID          shift, and go to state 41
    '!'         shift, and go to state 42
    '-'         shift, and go to state 43
    '('         shift, and go to state 44

    Expr  go to state 78


State 58

   36 Expr: Expr '>' • Expr

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    INT_LIT     shift, and go to state 38
    FLOAT_LIT   shift, and go to state 39
    STRING_LIT  shift, and go to state 40
    ID          shift, and go to state 41
    '!'         shift, and go to state 42
    '-'         shift, and go to state 43
    '('         shift, and go to state 44

    Expr  go to state 79


State 59

   37 Expr: Expr '<' • Expr

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    INT_LIT     shift, and go to state 38
    FLOAT_LIT   shift, and go to state 39
    STRING_LIT  shift, and go to state 40
    ID          shift, and go to state 41
    '!'         shift, and go to state 42
    '-'         shift, and go to state 43
    '('         shift, and go to state 44

    Expr  go to state 80


State 60

   28 Expr: Expr '+' • Expr

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    INT_LIT     shift, and go to state 38
    FLOAT_LIT   shift, and go to state 39
    STRING_LIT  shift, and go to state 40
    ID          shift, and go to state 41
    '!'         shift, and go to state 42
    '-'         shift, and go to state 43
    '('         shift, and go to state 44

    Expr  go to state 81


State 61

   29 Expr: Expr '-' • Expr

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    INT_LIT     shift, and go to state 38
    FLOAT_LIT   shift, and go to state 39
    STRING_LIT  shift, and go to state 40
    ID          shift, and go to state 41
    '!'         shift, and go to state 42
    '-'         shift, and go to state 43
    '('         shift, and go to state 44

    Expr  go to state 82


State 62

   25 Expr: Expr '*' • Expr

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    INT_LIT     shift, and go to state 38
    FLOAT_LIT   shift, and go to state 39
    STRING_LIT  shift, and go to state 40
    ID          shift, and go to state 41
    '!'         shift, and go to state 42
    '-'         shift, and go to state 43
    '('         shift, and go to state 44

    Expr  go to state 83


State 63

   26 Expr: Expr '/' • Expr

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    INT_LIT     shift, and go to state 38
    FLOAT_LIT   shift, and go to state 39
    STRING_LIT  shift, and go to state 40
    ID          shift, and go to state 41
    '!'         shift, and go to state 42
    '-'         shift, and go to state 43
    '('         shift, and go to state 44

    Expr  go to state 84


State 64

   27 Expr: Expr '%' • Expr

    TRUE        shift, and go to state 36
    FALSE       shift, and go to state 37
    INT_LIT     shift, and go to state 38
    FLOAT_LIT   shift, and go to state 39
    STRING_LIT  shift, and go to state 40
    ID          shift, and go to state 41
    '!'         shift, and go to state 42
    '-'         shift, and go to state 43
    '('         shift, and go to state 44

    Expr  go to state 85


State 65

   39 PrintStmt: PrintType '(' Expr ')' • ';'

    ';'  shift, and go to state 86


State 66

   40 DeclarationStmt: LET MutType ID ':' INT • '=' INT_LIT ';'

    '='  shift, and go to state 87


State 67

   41 DeclarationStmt: LET MutType ID ':' FLOAT • '=' FLOAT_LIT ';'

    '='  shift, and go to state 88


State 68

   42 DeclarationStmt: LET MutType ID ':' BOOL • '=' TRUE ';'
   43                | LET MutType ID ':' BOOL • '=' FALSE ';'

    '='  shift, and go to state 89


State 69

   44 DeclarationStmt: LET MutType ID ':' STR • '=' '"' STRING_LIT '"' ';'

    '='  shift, and go to state 90


State 70

   45 DeclarationStmt: LET MutType ID ':' '&' • STR '=' '"' STRING_LIT '"' ';'

    STR  shift, and go to state 91


State 71

   24 Expr: '(' Expr ')' •

    $default  reduce using rule 24 (Expr)


State 72

   38 PrintStmt: PrintType '(' '"' STRING_LIT '"' • ')' ';'

    ')'  shift, and go to state 92


State 73

   25 Expr: Expr • '*' Expr
   26     | Expr • '/' Expr
   27     | Expr • '%' Expr
   28     | Expr • '+' Expr
   29     | Expr • '-' Expr
   30     | Expr • LAND Expr
   31     | Expr • LOR Expr
   32     | Expr • GEQ Expr
   32     | Expr GEQ Expr •
   33     | Expr • LEQ Expr
   34     | Expr • EQL Expr
   35     | Expr • NEQ Expr
   36     | Expr • '>' Expr
   37     | Expr • '<' Expr

    '+'  shift, and go to state 60
    '-'  shift, and go to state 61
    '*'  shift, and go to state 62
    '/'  shift, and go to state 63
    '%'  shift, and go to state 64

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    EQL  error (nonassociative)
    NEQ  error (nonassociative)
    '>'  error (nonassociative)
    '<'  error (nonassociative)

    $default  reduce using rule 32 (Expr)


State 74

   25 Expr: Expr • '*' Expr
   26     | Expr • '/' Expr
   27     | Expr • '%' Expr
   28     | Expr • '+' Expr
   29     | Expr • '-' Expr
   30     | Expr • LAND Expr
   31     | Expr • LOR Expr
   32     | Expr • GEQ Expr
   33     | Expr • LEQ Expr
   33     | Expr LEQ Expr •
   34     | Expr • EQL Expr
   35     | Expr • NEQ Expr
   36     | Expr • '>' Expr
   37     | Expr • '<' Expr

    '+'  shift, and go to state 60
    '-'  shift, and go to state 61
    '*'  shift, and go to state 62
    '/'  shift, and go to state 63
    '%'  shift, and go to state 64

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    EQL  error (nonassociative)
    NEQ  error (nonassociative)
    '>'  error (nonassociative)
    '<'  error (nonassociative)

    $default  reduce using rule 33 (Expr)


State 75

   25 Expr: Expr • '*' Expr
   26     | Expr • '/' Expr
   27     | Expr • '%' Expr
   28     | Expr • '+' Expr
   29     | Expr • '-' Expr
   30     | Expr • LAND Expr
   31     | Expr • LOR Expr
   32     | Expr • GEQ Expr
   33     | Expr • LEQ Expr
   34     | Expr • EQL Expr
   34     | Expr EQL Expr •
   35     | Expr • NEQ Expr
   36     | Expr • '>' Expr
   37     | Expr • '<' Expr

    '+'  shift, and go to state 60
    '-'  shift, and go to state 61
    '*'  shift, and go to state 62
    '/'  shift, and go to state 63
    '%'  shift, and go to state 64

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    EQL  error (nonassociative)
    NEQ  error (nonassociative)
    '>'  error (nonassociative)
    '<'  error (nonassociative)

    $default  reduce using rule 34 (Expr)


State 76

   25 Expr: Expr • '*' Expr
   26     | Expr • '/' Expr
   27     | Expr • '%' Expr
   28     | Expr • '+' Expr
   29     | Expr • '-' Expr
   30     | Expr • LAND Expr
   31     | Expr • LOR Expr
   32     | Expr • GEQ Expr
   33     | Expr • LEQ Expr
   34     | Expr • EQL Expr
   35     | Expr • NEQ Expr
   35     | Expr NEQ Expr •
   36     | Expr • '>' Expr
   37     | Expr • '<' Expr

    '+'  shift, and go to state 60
    '-'  shift, and go to state 61
    '*'  shift, and go to state 62
    '/'  shift, and go to state 63
    '%'  shift, and go to state 64

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    EQL  error (nonassociative)
    NEQ  error (nonassociative)
    '>'  error (nonassociative)
    '<'  error (nonassociative)

    $default  reduce using rule 35 (Expr)


State 77

   25 Expr: Expr • '*' Expr
   26     | Expr • '/' Expr
   27     | Expr • '%' Expr
   28     | Expr • '+' Expr
   29     | Expr • '-' Expr
   30     | Expr • LAND Expr
   31     | Expr • LOR Expr
   31     | Expr LOR Expr •
   32     | Expr • GEQ Expr
   33     | Expr • LEQ Expr
   34     | Expr • EQL Expr
   35     | Expr • NEQ Expr
   36     | Expr • '>' Expr
   37     | Expr • '<' Expr

    GEQ   shift, and go to state 52
    LEQ   shift, and go to state 53
    EQL   shift, and go to state 54
    NEQ   shift, and go to state 55
    LAND  shift, and go to state 57
    '>'   shift, and go to state 58
    '<'   shift, and go to state 59
    '+'   shift, and go to state 60
    '-'   shift, and go to state 61
    '*'   shift, and go to state 62
    '/'   shift, and go to state 63
    '%'   shift, and go to state 64

    $default  reduce using rule 31 (Expr)


State 78

   25 Expr: Expr • '*' Expr
   26     | Expr • '/' Expr
   27     | Expr • '%' Expr
   28     | Expr • '+' Expr
   29     | Expr • '-' Expr
   30     | Expr • LAND Expr
   30     | Expr LAND Expr •
   31     | Expr • LOR Expr
   32     | Expr • GEQ Expr
   33     | Expr • LEQ Expr
   34     | Expr • EQL Expr
   35     | Expr • NEQ Expr
   36     | Expr • '>' Expr
   37     | Expr • '<' Expr

    GEQ  shift, and go to state 52
    LEQ  shift, and go to state 53
    EQL  shift, and go to state 54
    NEQ  shift, and go to state 55
    '>'  shift, and go to state 58
    '<'  shift, and go to state 59
    '+'  shift, and go to state 60
    '-'  shift, and go to state 61
    '*'  shift, and go to state 62
    '/'  shift, and go to state 63
    '%'  shift, and go to state 64

    $default  reduce using rule 30 (Expr)


State 79

   25 Expr: Expr • '*' Expr
   26     | Expr • '/' Expr
   27     | Expr • '%' Expr
   28     | Expr • '+' Expr
   29     | Expr • '-' Expr
   30     | Expr • LAND Expr
   31     | Expr • LOR Expr
   32     | Expr • GEQ Expr
   33     | Expr • LEQ Expr
   34     | Expr • EQL Expr
   35     | Expr • NEQ Expr
   36     | Expr • '>' Expr
   36     | Expr '>' Expr •
   37     | Expr • '<' Expr

    '+'  shift, and go to state 60
    '-'  shift, and go to state 61
    '*'  shift, and go to state 62
    '/'  shift, and go to state 63
    '%'  shift, and go to state 64

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    EQL  error (nonassociative)
    NEQ  error (nonassociative)
    '>'  error (nonassociative)
    '<'  error (nonassociative)

    $default  reduce using rule 36 (Expr)


State 80

   25 Expr: Expr • '*' Expr
   26     | Expr • '/' Expr
   27     | Expr • '%' Expr
   28     | Expr • '+' Expr
   29     | Expr • '-' Expr
   30     | Expr • LAND Expr
   31     | Expr • LOR Expr
   32     | Expr • GEQ Expr
   33     | Expr • LEQ Expr
   34     | Expr • EQL Expr
   35     | Expr • NEQ Expr
   36     | Expr • '>' Expr
   37     | Expr • '<' Expr
   37     | Expr '<' Expr •

    '+'  shift, and go to state 60
    '-'  shift, and go to state 61
    '*'  shift, and go to state 62
    '/'  shift, and go to state 63
    '%'  shift, and go to state 64

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    EQL  error (nonassociative)
    NEQ  error (nonassociative)
    '>'  error (nonassociative)
    '<'  error (nonassociative)

    $default  reduce using rule 37 (Expr)


State 81

   25 Expr: Expr • '*' Expr
   26     | Expr • '/' Expr
   27     | Expr • '%' Expr
   28     | Expr • '+' Expr
   28     | Expr '+' Expr •
   29     | Expr • '-' Expr
   30     | Expr • LAND Expr
   31     | Expr • LOR Expr
   32     | Expr • GEQ Expr
   33     | Expr • LEQ Expr
   34     | Expr • EQL Expr
   35     | Expr • NEQ Expr
   36     | Expr • '>' Expr
   37     | Expr • '<' Expr

    '*'  shift, and go to state 62
    '/'  shift, and go to state 63
    '%'  shift, and go to state 64

    $default  reduce using rule 28 (Expr)


State 82

   25 Expr: Expr • '*' Expr
   26     | Expr • '/' Expr
   27     | Expr • '%' Expr
   28     | Expr • '+' Expr
   29     | Expr • '-' Expr
   29     | Expr '-' Expr •
   30     | Expr • LAND Expr
   31     | Expr • LOR Expr
   32     | Expr • GEQ Expr
   33     | Expr • LEQ Expr
   34     | Expr • EQL Expr
   35     | Expr • NEQ Expr
   36     | Expr • '>' Expr
   37     | Expr • '<' Expr

    '*'  shift, and go to state 62
    '/'  shift, and go to state 63
    '%'  shift, and go to state 64

    $default  reduce using rule 29 (Expr)


State 83

   25 Expr: Expr • '*' Expr
   25     | Expr '*' Expr •
   26     | Expr • '/' Expr
   27     | Expr • '%' Expr
   28     | Expr • '+' Expr
   29     | Expr • '-' Expr
   30     | Expr • LAND Expr
   31     | Expr • LOR Expr
   32     | Expr • GEQ Expr
   33     | Expr • LEQ Expr
   34     | Expr • EQL Expr
   35     | Expr • NEQ Expr
   36     | Expr • '>' Expr
   37     | Expr • '<' Expr

    $default  reduce using rule 25 (Expr)


State 84

   25 Expr: Expr • '*' Expr
   26     | Expr • '/' Expr
   26     | Expr '/' Expr •
   27     | Expr • '%' Expr
   28     | Expr • '+' Expr
   29     | Expr • '-' Expr
   30     | Expr • LAND Expr
   31     | Expr • LOR Expr
   32     | Expr • GEQ Expr
   33     | Expr • LEQ Expr
   34     | Expr • EQL Expr
   35     | Expr • NEQ Expr
   36     | Expr • '>' Expr
   37     | Expr • '<' Expr

    $default  reduce using rule 26 (Expr)


State 85

   25 Expr: Expr • '*' Expr
   26     | Expr • '/' Expr
   27     | Expr • '%' Expr
   27     | Expr '%' Expr •
   28     | Expr • '+' Expr
   29     | Expr • '-' Expr
   30     | Expr • LAND Expr
   31     | Expr • LOR Expr
   32     | Expr • GEQ Expr
   33     | Expr • LEQ Expr
   34     | Expr • EQL Expr
   35     | Expr • NEQ Expr
   36     | Expr • '>' Expr
   37     | Expr • '<' Expr

    $default  reduce using rule 27 (Expr)


State 86

   39 PrintStmt: PrintType '(' Expr ')' ';' •

    $default  reduce using rule 39 (PrintStmt)


State 87

   40 DeclarationStmt: LET MutType ID ':' INT '=' • INT_LIT ';'

    INT_LIT  shift, and go to state 93


State 88

   41 DeclarationStmt: LET MutType ID ':' FLOAT '=' • FLOAT_LIT ';'

    FLOAT_LIT  shift, and go to state 94


State 89

   42 DeclarationStmt: LET MutType ID ':' BOOL '=' • TRUE ';'
   43                | LET MutType ID ':' BOOL '=' • FALSE ';'

    TRUE   shift, and go to state 95
    FALSE  shift, and go to state 96


State 90

   44 DeclarationStmt: LET MutType ID ':' STR '=' • '"' STRING_LIT '"' ';'

    '"'  shift, and go to state 97


State 91

   45 DeclarationStmt: LET MutType ID ':' '&' STR • '=' '"' STRING_LIT '"' ';'

    '='  shift, and go to state 98


State 92

   38 PrintStmt: PrintType '(' '"' STRING_LIT '"' ')' • ';'

    ';'  shift, and go to state 99


State 93

   40 DeclarationStmt: LET MutType ID ':' INT '=' INT_LIT • ';'

    ';'  shift, and go to state 100


State 94

   41 DeclarationStmt: LET MutType ID ':' FLOAT '=' FLOAT_LIT • ';'

    ';'  shift, and go to state 101


State 95

   42 DeclarationStmt: LET MutType ID ':' BOOL '=' TRUE • ';'

    ';'  shift, and go to state 102


State 96

   43 DeclarationStmt: LET MutType ID ':' BOOL '=' FALSE • ';'

    ';'  shift, and go to state 103


State 97

   44 DeclarationStmt: LET MutType ID ':' STR '=' '"' • STRING_LIT '"' ';'

    STRING_LIT  shift, and go to state 104


State 98

   45 DeclarationStmt: LET MutType ID ':' '&' STR '=' • '"' STRING_LIT '"' ';'

    '"'  shift, and go to state 105


State 99

   38 PrintStmt: PrintType '(' '"' STRING_LIT '"' ')' ';' •

    $default  reduce using rule 38 (PrintStmt)


State 100

   40 DeclarationStmt: LET MutType ID ':' INT '=' INT_LIT ';' •

    $default  reduce using rule 40 (DeclarationStmt)


State 101

   41 DeclarationStmt: LET MutType ID ':' FLOAT '=' FLOAT_LIT ';' •

    $default  reduce using rule 41 (DeclarationStmt)


State 102

   42 DeclarationStmt: LET MutType ID ':' BOOL '=' TRUE ';' •

    $default  reduce using rule 42 (DeclarationStmt)


State 103

   43 DeclarationStmt: LET MutType ID ':' BOOL '=' FALSE ';' •

    $default  reduce using rule 43 (DeclarationStmt)


State 104

   44 DeclarationStmt: LET MutType ID ':' STR '=' '"' STRING_LIT • '"' ';'

    '"'  shift, and go to state 106


State 105

   45 DeclarationStmt: LET MutType ID ':' '&' STR '=' '"' • STRING_LIT '"' ';'

    STRING_LIT  shift, and go to state 107


State 106

   44 DeclarationStmt: LET MutType ID ':' STR '=' '"' STRING_LIT '"' • ';'

    ';'  shift, and go to state 108


State 107

   45 DeclarationStmt: LET MutType ID ':' '&' STR '=' '"' STRING_LIT • '"' ';'

    '"'  shift, and go to state 109


State 108

   44 DeclarationStmt: LET MutType ID ':' STR '=' '"' STRING_LIT '"' ';' •

    $default  reduce using rule 44 (DeclarationStmt)


State 109

   45 DeclarationStmt: LET MutType ID ':' '&' STR '=' '"' STRING_LIT '"' • ';'

    ';'  shift, and go to state 110


State 110

   45 DeclarationStmt: LET MutType ID ':' '&' STR '=' '"' STRING_LIT '"' ';' •

    $default  reduce using rule 45 (DeclarationStmt)
