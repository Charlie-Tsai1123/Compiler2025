Terminals unused in grammar

    ADD_ASSIGN
    SUB_ASSIGN
    MUL_ASSIGN
    DIV_ASSIGN
    REM_ASSIGN
    IF
    ELSE
    FOR
    WHILE
    LOOP
    RETURN
    BREAK
    ARROW
    AS
    IN
    DOTDOT
    RSHIFT
    LSHIFT


Grammar

    0 $accept: Program $end

    1 $@1: ε

    2 Program: $@1 GlobalStatementList

    3 GlobalStatementList: GlobalStatementList GlobalStatement
    4                    | GlobalStatement

    5 GlobalStatement: FunctionDeclStmt
    6                | NEWLINE

    7 $@2: ε

    8 $@3: ε

    9 FunctionDeclStmt: FUNC ID '(' Type ')' $@2 '{' $@3 StmtList '}'

   10 StmtList: StmtList Stmt
   11         | ε

   12 Stmt: PrintStmt
   13     | DeclarationStmt

   14 Expr: ID
   15     | INT_LIT
   16     | FLOAT_LIT
   17     | STRING_LIT
   18     | TRUE
   19     | FALSE
   20     | '-' Expr
   21     | '!' Expr
   22     | '(' Expr ')'
   23     | Expr '*' Expr
   24     | Expr '/' Expr
   25     | Expr '%' Expr
   26     | Expr '+' Expr
   27     | Expr '-' Expr
   28     | Expr LAND Expr
   29     | Expr LOR Expr
   30     | Expr GEQ Expr
   31     | Expr LEQ Expr
   32     | Expr EQL Expr
   33     | Expr NEQ Expr
   34     | Expr '>' Expr
   35     | Expr '<' Expr

   36 PrintStmt: PrintType '(' '"' STRING_LIT '"' ')' ';'
   37          | PrintType '(' Expr ')' ';'

   38 DeclarationStmt: LET ID ':' INT '=' INT_LIT ';'
   39                | LET ID ':' FLOAT '=' FLOAT_LIT ';'
   40                | LET ID ':' STR '=' '"' STRING_LIT '"' ';'
   41                | LET MUT ID ':' INT '=' INT_LIT ';'
   42                | LET MUT ID ':' FLOAT '=' FLOAT_LIT ';'
   43                | LET MUT ID ':' STR '=' '"' STRING_LIT '"' ';'

   44 Type: INT
   45     | FLOAT
   46     | BOOL
   47     | STR
   48     | ε

   49 PrintType: PRINT
   50          | PRINTLN


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 21
    '"' (34) 36 40 43
    '%' (37) 25
    '(' (40) 9 22 36 37
    ')' (41) 9 22 36 37
    '*' (42) 23
    '+' (43) 26
    '-' (45) 20 27
    '/' (47) 24
    ':' (58) 38 39 40 41 42 43
    ';' (59) 36 37 38 39 40 41 42 43
    '<' (60) 35
    '=' (61) 38 39 40 41 42 43
    '>' (62) 34
    '{' (123) 9
    '}' (125) 9
    error (256)
    LET (258) 38 39 40 41 42 43
    MUT (259) 41 42 43
    NEWLINE (260) 6
    INT (261) 38 41 44
    FLOAT (262) 39 42 45
    BOOL (263) 46
    STR (264) 40 43 47
    TRUE (265) 18
    FALSE (266) 19
    GEQ (267) 30
    LEQ (268) 31
    EQL (269) 32
    NEQ (270) 33
    LOR (271) 29
    LAND (272) 28
    ADD_ASSIGN (273)
    SUB_ASSIGN (274)
    MUL_ASSIGN (275)
    DIV_ASSIGN (276)
    REM_ASSIGN (277)
    IF (278)
    ELSE (279)
    FOR (280)
    WHILE (281)
    LOOP (282)
    PRINT (283) 49
    PRINTLN (284) 50
    FUNC (285) 9
    RETURN (286)
    BREAK (287)
    ARROW (288)
    AS (289)
    IN (290)
    DOTDOT (291)
    RSHIFT (292)
    LSHIFT (293)
    INT_LIT <i_val> (294) 15 38 41
    FLOAT_LIT <f_val> (295) 16 39 42
    STRING_LIT <s_val> (296) 17 36 40 43
    ID <s_val> (297) 9 14 38 39 40 41 42 43
    UMINUS (298)


Nonterminals, with rules where they appear

    $accept (60)
        on left: 0
    Program (61)
        on left: 2
        on right: 0
    $@1 (62)
        on left: 1
        on right: 2
    GlobalStatementList (63)
        on left: 3 4
        on right: 2 3
    GlobalStatement (64)
        on left: 5 6
        on right: 3 4
    FunctionDeclStmt (65)
        on left: 9
        on right: 5
    $@2 (66)
        on left: 7
        on right: 9
    $@3 (67)
        on left: 8
        on right: 9
    StmtList (68)
        on left: 10 11
        on right: 9 10
    Stmt (69)
        on left: 12 13
        on right: 10
    Expr <s_val> (70)
        on left: 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35
        on right: 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 37
    PrintStmt (71)
        on left: 36 37
        on right: 12
    DeclarationStmt (72)
        on left: 38 39 40 41 42 43
        on right: 13
    Type <s_val> (73)
        on left: 44 45 46 47 48
        on right: 9
    PrintType <s_val> (74)
        on left: 49 50
        on right: 36 37


State 0

    0 $accept: • Program $end

    $default  reduce using rule 1 ($@1)

    Program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: Program • $end

    $end  shift, and go to state 3


State 2

    2 Program: $@1 • GlobalStatementList

    NEWLINE  shift, and go to state 4
    FUNC     shift, and go to state 5

    GlobalStatementList  go to state 6
    GlobalStatement      go to state 7
    FunctionDeclStmt     go to state 8


State 3

    0 $accept: Program $end •

    $default  accept


State 4

    6 GlobalStatement: NEWLINE •

    $default  reduce using rule 6 (GlobalStatement)


State 5

    9 FunctionDeclStmt: FUNC • ID '(' Type ')' $@2 '{' $@3 StmtList '}'

    ID  shift, and go to state 9


State 6

    2 Program: $@1 GlobalStatementList •
    3 GlobalStatementList: GlobalStatementList • GlobalStatement

    NEWLINE  shift, and go to state 4
    FUNC     shift, and go to state 5

    $default  reduce using rule 2 (Program)

    GlobalStatement   go to state 10
    FunctionDeclStmt  go to state 8


State 7

    4 GlobalStatementList: GlobalStatement •

    $default  reduce using rule 4 (GlobalStatementList)


State 8

    5 GlobalStatement: FunctionDeclStmt •

    $default  reduce using rule 5 (GlobalStatement)


State 9

    9 FunctionDeclStmt: FUNC ID • '(' Type ')' $@2 '{' $@3 StmtList '}'

    '('  shift, and go to state 11


State 10

    3 GlobalStatementList: GlobalStatementList GlobalStatement •

    $default  reduce using rule 3 (GlobalStatementList)


State 11

    9 FunctionDeclStmt: FUNC ID '(' • Type ')' $@2 '{' $@3 StmtList '}'

    INT    shift, and go to state 12
    FLOAT  shift, and go to state 13
    BOOL   shift, and go to state 14
    STR    shift, and go to state 15

    $default  reduce using rule 48 (Type)

    Type  go to state 16


State 12

   44 Type: INT •

    $default  reduce using rule 44 (Type)


State 13

   45 Type: FLOAT •

    $default  reduce using rule 45 (Type)


State 14

   46 Type: BOOL •

    $default  reduce using rule 46 (Type)


State 15

   47 Type: STR •

    $default  reduce using rule 47 (Type)


State 16

    9 FunctionDeclStmt: FUNC ID '(' Type • ')' $@2 '{' $@3 StmtList '}'

    ')'  shift, and go to state 17


State 17

    9 FunctionDeclStmt: FUNC ID '(' Type ')' • $@2 '{' $@3 StmtList '}'

    $default  reduce using rule 7 ($@2)

    $@2  go to state 18


State 18

    9 FunctionDeclStmt: FUNC ID '(' Type ')' $@2 • '{' $@3 StmtList '}'

    '{'  shift, and go to state 19


State 19

    9 FunctionDeclStmt: FUNC ID '(' Type ')' $@2 '{' • $@3 StmtList '}'

    $default  reduce using rule 8 ($@3)

    $@3  go to state 20


State 20

    9 FunctionDeclStmt: FUNC ID '(' Type ')' $@2 '{' $@3 • StmtList '}'

    $default  reduce using rule 11 (StmtList)

    StmtList  go to state 21


State 21

    9 FunctionDeclStmt: FUNC ID '(' Type ')' $@2 '{' $@3 StmtList • '}'
   10 StmtList: StmtList • Stmt

    LET      shift, and go to state 22
    PRINT    shift, and go to state 23
    PRINTLN  shift, and go to state 24
    '}'      shift, and go to state 25

    Stmt             go to state 26
    PrintStmt        go to state 27
    DeclarationStmt  go to state 28
    PrintType        go to state 29


State 22

   38 DeclarationStmt: LET • ID ':' INT '=' INT_LIT ';'
   39                | LET • ID ':' FLOAT '=' FLOAT_LIT ';'
   40                | LET • ID ':' STR '=' '"' STRING_LIT '"' ';'
   41                | LET • MUT ID ':' INT '=' INT_LIT ';'
   42                | LET • MUT ID ':' FLOAT '=' FLOAT_LIT ';'
   43                | LET • MUT ID ':' STR '=' '"' STRING_LIT '"' ';'

    MUT  shift, and go to state 30
    ID   shift, and go to state 31


State 23

   49 PrintType: PRINT •

    $default  reduce using rule 49 (PrintType)


State 24

   50 PrintType: PRINTLN •

    $default  reduce using rule 50 (PrintType)


State 25

    9 FunctionDeclStmt: FUNC ID '(' Type ')' $@2 '{' $@3 StmtList '}' •

    $default  reduce using rule 9 (FunctionDeclStmt)


State 26

   10 StmtList: StmtList Stmt •

    $default  reduce using rule 10 (StmtList)


State 27

   12 Stmt: PrintStmt •

    $default  reduce using rule 12 (Stmt)


State 28

   13 Stmt: DeclarationStmt •

    $default  reduce using rule 13 (Stmt)


State 29

   36 PrintStmt: PrintType • '(' '"' STRING_LIT '"' ')' ';'
   37          | PrintType • '(' Expr ')' ';'

    '('  shift, and go to state 32


State 30

   41 DeclarationStmt: LET MUT • ID ':' INT '=' INT_LIT ';'
   42                | LET MUT • ID ':' FLOAT '=' FLOAT_LIT ';'
   43                | LET MUT • ID ':' STR '=' '"' STRING_LIT '"' ';'

    ID  shift, and go to state 33


State 31

   38 DeclarationStmt: LET ID • ':' INT '=' INT_LIT ';'
   39                | LET ID • ':' FLOAT '=' FLOAT_LIT ';'
   40                | LET ID • ':' STR '=' '"' STRING_LIT '"' ';'

    ':'  shift, and go to state 34


State 32

   36 PrintStmt: PrintType '(' • '"' STRING_LIT '"' ')' ';'
   37          | PrintType '(' • Expr ')' ';'

    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    INT_LIT     shift, and go to state 37
    FLOAT_LIT   shift, and go to state 38
    STRING_LIT  shift, and go to state 39
    ID          shift, and go to state 40
    '!'         shift, and go to state 41
    '-'         shift, and go to state 42
    '('         shift, and go to state 43
    '"'         shift, and go to state 44

    Expr  go to state 45


State 33

   41 DeclarationStmt: LET MUT ID • ':' INT '=' INT_LIT ';'
   42                | LET MUT ID • ':' FLOAT '=' FLOAT_LIT ';'
   43                | LET MUT ID • ':' STR '=' '"' STRING_LIT '"' ';'

    ':'  shift, and go to state 46


State 34

   38 DeclarationStmt: LET ID ':' • INT '=' INT_LIT ';'
   39                | LET ID ':' • FLOAT '=' FLOAT_LIT ';'
   40                | LET ID ':' • STR '=' '"' STRING_LIT '"' ';'

    INT    shift, and go to state 47
    FLOAT  shift, and go to state 48
    STR    shift, and go to state 49


State 35

   18 Expr: TRUE •

    $default  reduce using rule 18 (Expr)


State 36

   19 Expr: FALSE •

    $default  reduce using rule 19 (Expr)


State 37

   15 Expr: INT_LIT •

    $default  reduce using rule 15 (Expr)


State 38

   16 Expr: FLOAT_LIT •

    $default  reduce using rule 16 (Expr)


State 39

   17 Expr: STRING_LIT •

    $default  reduce using rule 17 (Expr)


State 40

   14 Expr: ID •

    $default  reduce using rule 14 (Expr)


State 41

   21 Expr: '!' • Expr

    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    INT_LIT     shift, and go to state 37
    FLOAT_LIT   shift, and go to state 38
    STRING_LIT  shift, and go to state 39
    ID          shift, and go to state 40
    '!'         shift, and go to state 41
    '-'         shift, and go to state 42
    '('         shift, and go to state 43

    Expr  go to state 50


State 42

   20 Expr: '-' • Expr

    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    INT_LIT     shift, and go to state 37
    FLOAT_LIT   shift, and go to state 38
    STRING_LIT  shift, and go to state 39
    ID          shift, and go to state 40
    '!'         shift, and go to state 41
    '-'         shift, and go to state 42
    '('         shift, and go to state 43

    Expr  go to state 51


State 43

   22 Expr: '(' • Expr ')'

    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    INT_LIT     shift, and go to state 37
    FLOAT_LIT   shift, and go to state 38
    STRING_LIT  shift, and go to state 39
    ID          shift, and go to state 40
    '!'         shift, and go to state 41
    '-'         shift, and go to state 42
    '('         shift, and go to state 43

    Expr  go to state 52


State 44

   36 PrintStmt: PrintType '(' '"' • STRING_LIT '"' ')' ';'

    STRING_LIT  shift, and go to state 53


State 45

   23 Expr: Expr • '*' Expr
   24     | Expr • '/' Expr
   25     | Expr • '%' Expr
   26     | Expr • '+' Expr
   27     | Expr • '-' Expr
   28     | Expr • LAND Expr
   29     | Expr • LOR Expr
   30     | Expr • GEQ Expr
   31     | Expr • LEQ Expr
   32     | Expr • EQL Expr
   33     | Expr • NEQ Expr
   34     | Expr • '>' Expr
   35     | Expr • '<' Expr
   37 PrintStmt: PrintType '(' Expr • ')' ';'

    GEQ   shift, and go to state 54
    LEQ   shift, and go to state 55
    EQL   shift, and go to state 56
    NEQ   shift, and go to state 57
    LOR   shift, and go to state 58
    LAND  shift, and go to state 59
    '>'   shift, and go to state 60
    '<'   shift, and go to state 61
    '+'   shift, and go to state 62
    '-'   shift, and go to state 63
    '*'   shift, and go to state 64
    '/'   shift, and go to state 65
    '%'   shift, and go to state 66
    ')'   shift, and go to state 67


State 46

   41 DeclarationStmt: LET MUT ID ':' • INT '=' INT_LIT ';'
   42                | LET MUT ID ':' • FLOAT '=' FLOAT_LIT ';'
   43                | LET MUT ID ':' • STR '=' '"' STRING_LIT '"' ';'

    INT    shift, and go to state 68
    FLOAT  shift, and go to state 69
    STR    shift, and go to state 70


State 47

   38 DeclarationStmt: LET ID ':' INT • '=' INT_LIT ';'

    '='  shift, and go to state 71


State 48

   39 DeclarationStmt: LET ID ':' FLOAT • '=' FLOAT_LIT ';'

    '='  shift, and go to state 72


State 49

   40 DeclarationStmt: LET ID ':' STR • '=' '"' STRING_LIT '"' ';'

    '='  shift, and go to state 73


State 50

   21 Expr: '!' Expr •
   23     | Expr • '*' Expr
   24     | Expr • '/' Expr
   25     | Expr • '%' Expr
   26     | Expr • '+' Expr
   27     | Expr • '-' Expr
   28     | Expr • LAND Expr
   29     | Expr • LOR Expr
   30     | Expr • GEQ Expr
   31     | Expr • LEQ Expr
   32     | Expr • EQL Expr
   33     | Expr • NEQ Expr
   34     | Expr • '>' Expr
   35     | Expr • '<' Expr

    GEQ  shift, and go to state 54
    LEQ  shift, and go to state 55
    EQL  shift, and go to state 56
    NEQ  shift, and go to state 57
    '>'  shift, and go to state 60
    '<'  shift, and go to state 61
    '+'  shift, and go to state 62
    '-'  shift, and go to state 63
    '*'  shift, and go to state 64
    '/'  shift, and go to state 65
    '%'  shift, and go to state 66

    $default  reduce using rule 21 (Expr)


State 51

   20 Expr: '-' Expr •
   23     | Expr • '*' Expr
   24     | Expr • '/' Expr
   25     | Expr • '%' Expr
   26     | Expr • '+' Expr
   27     | Expr • '-' Expr
   28     | Expr • LAND Expr
   29     | Expr • LOR Expr
   30     | Expr • GEQ Expr
   31     | Expr • LEQ Expr
   32     | Expr • EQL Expr
   33     | Expr • NEQ Expr
   34     | Expr • '>' Expr
   35     | Expr • '<' Expr

    $default  reduce using rule 20 (Expr)


State 52

   22 Expr: '(' Expr • ')'
   23     | Expr • '*' Expr
   24     | Expr • '/' Expr
   25     | Expr • '%' Expr
   26     | Expr • '+' Expr
   27     | Expr • '-' Expr
   28     | Expr • LAND Expr
   29     | Expr • LOR Expr
   30     | Expr • GEQ Expr
   31     | Expr • LEQ Expr
   32     | Expr • EQL Expr
   33     | Expr • NEQ Expr
   34     | Expr • '>' Expr
   35     | Expr • '<' Expr

    GEQ   shift, and go to state 54
    LEQ   shift, and go to state 55
    EQL   shift, and go to state 56
    NEQ   shift, and go to state 57
    LOR   shift, and go to state 58
    LAND  shift, and go to state 59
    '>'   shift, and go to state 60
    '<'   shift, and go to state 61
    '+'   shift, and go to state 62
    '-'   shift, and go to state 63
    '*'   shift, and go to state 64
    '/'   shift, and go to state 65
    '%'   shift, and go to state 66
    ')'   shift, and go to state 74


State 53

   36 PrintStmt: PrintType '(' '"' STRING_LIT • '"' ')' ';'

    '"'  shift, and go to state 75


State 54

   30 Expr: Expr GEQ • Expr

    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    INT_LIT     shift, and go to state 37
    FLOAT_LIT   shift, and go to state 38
    STRING_LIT  shift, and go to state 39
    ID          shift, and go to state 40
    '!'         shift, and go to state 41
    '-'         shift, and go to state 42
    '('         shift, and go to state 43

    Expr  go to state 76


State 55

   31 Expr: Expr LEQ • Expr

    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    INT_LIT     shift, and go to state 37
    FLOAT_LIT   shift, and go to state 38
    STRING_LIT  shift, and go to state 39
    ID          shift, and go to state 40
    '!'         shift, and go to state 41
    '-'         shift, and go to state 42
    '('         shift, and go to state 43

    Expr  go to state 77


State 56

   32 Expr: Expr EQL • Expr

    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    INT_LIT     shift, and go to state 37
    FLOAT_LIT   shift, and go to state 38
    STRING_LIT  shift, and go to state 39
    ID          shift, and go to state 40
    '!'         shift, and go to state 41
    '-'         shift, and go to state 42
    '('         shift, and go to state 43

    Expr  go to state 78


State 57

   33 Expr: Expr NEQ • Expr

    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    INT_LIT     shift, and go to state 37
    FLOAT_LIT   shift, and go to state 38
    STRING_LIT  shift, and go to state 39
    ID          shift, and go to state 40
    '!'         shift, and go to state 41
    '-'         shift, and go to state 42
    '('         shift, and go to state 43

    Expr  go to state 79


State 58

   29 Expr: Expr LOR • Expr

    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    INT_LIT     shift, and go to state 37
    FLOAT_LIT   shift, and go to state 38
    STRING_LIT  shift, and go to state 39
    ID          shift, and go to state 40
    '!'         shift, and go to state 41
    '-'         shift, and go to state 42
    '('         shift, and go to state 43

    Expr  go to state 80


State 59

   28 Expr: Expr LAND • Expr

    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    INT_LIT     shift, and go to state 37
    FLOAT_LIT   shift, and go to state 38
    STRING_LIT  shift, and go to state 39
    ID          shift, and go to state 40
    '!'         shift, and go to state 41
    '-'         shift, and go to state 42
    '('         shift, and go to state 43

    Expr  go to state 81


State 60

   34 Expr: Expr '>' • Expr

    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    INT_LIT     shift, and go to state 37
    FLOAT_LIT   shift, and go to state 38
    STRING_LIT  shift, and go to state 39
    ID          shift, and go to state 40
    '!'         shift, and go to state 41
    '-'         shift, and go to state 42
    '('         shift, and go to state 43

    Expr  go to state 82


State 61

   35 Expr: Expr '<' • Expr

    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    INT_LIT     shift, and go to state 37
    FLOAT_LIT   shift, and go to state 38
    STRING_LIT  shift, and go to state 39
    ID          shift, and go to state 40
    '!'         shift, and go to state 41
    '-'         shift, and go to state 42
    '('         shift, and go to state 43

    Expr  go to state 83


State 62

   26 Expr: Expr '+' • Expr

    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    INT_LIT     shift, and go to state 37
    FLOAT_LIT   shift, and go to state 38
    STRING_LIT  shift, and go to state 39
    ID          shift, and go to state 40
    '!'         shift, and go to state 41
    '-'         shift, and go to state 42
    '('         shift, and go to state 43

    Expr  go to state 84


State 63

   27 Expr: Expr '-' • Expr

    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    INT_LIT     shift, and go to state 37
    FLOAT_LIT   shift, and go to state 38
    STRING_LIT  shift, and go to state 39
    ID          shift, and go to state 40
    '!'         shift, and go to state 41
    '-'         shift, and go to state 42
    '('         shift, and go to state 43

    Expr  go to state 85


State 64

   23 Expr: Expr '*' • Expr

    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    INT_LIT     shift, and go to state 37
    FLOAT_LIT   shift, and go to state 38
    STRING_LIT  shift, and go to state 39
    ID          shift, and go to state 40
    '!'         shift, and go to state 41
    '-'         shift, and go to state 42
    '('         shift, and go to state 43

    Expr  go to state 86


State 65

   24 Expr: Expr '/' • Expr

    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    INT_LIT     shift, and go to state 37
    FLOAT_LIT   shift, and go to state 38
    STRING_LIT  shift, and go to state 39
    ID          shift, and go to state 40
    '!'         shift, and go to state 41
    '-'         shift, and go to state 42
    '('         shift, and go to state 43

    Expr  go to state 87


State 66

   25 Expr: Expr '%' • Expr

    TRUE        shift, and go to state 35
    FALSE       shift, and go to state 36
    INT_LIT     shift, and go to state 37
    FLOAT_LIT   shift, and go to state 38
    STRING_LIT  shift, and go to state 39
    ID          shift, and go to state 40
    '!'         shift, and go to state 41
    '-'         shift, and go to state 42
    '('         shift, and go to state 43

    Expr  go to state 88


State 67

   37 PrintStmt: PrintType '(' Expr ')' • ';'

    ';'  shift, and go to state 89


State 68

   41 DeclarationStmt: LET MUT ID ':' INT • '=' INT_LIT ';'

    '='  shift, and go to state 90


State 69

   42 DeclarationStmt: LET MUT ID ':' FLOAT • '=' FLOAT_LIT ';'

    '='  shift, and go to state 91


State 70

   43 DeclarationStmt: LET MUT ID ':' STR • '=' '"' STRING_LIT '"' ';'

    '='  shift, and go to state 92


State 71

   38 DeclarationStmt: LET ID ':' INT '=' • INT_LIT ';'

    INT_LIT  shift, and go to state 93


State 72

   39 DeclarationStmt: LET ID ':' FLOAT '=' • FLOAT_LIT ';'

    FLOAT_LIT  shift, and go to state 94


State 73

   40 DeclarationStmt: LET ID ':' STR '=' • '"' STRING_LIT '"' ';'

    '"'  shift, and go to state 95


State 74

   22 Expr: '(' Expr ')' •

    $default  reduce using rule 22 (Expr)


State 75

   36 PrintStmt: PrintType '(' '"' STRING_LIT '"' • ')' ';'

    ')'  shift, and go to state 96


State 76

   23 Expr: Expr • '*' Expr
   24     | Expr • '/' Expr
   25     | Expr • '%' Expr
   26     | Expr • '+' Expr
   27     | Expr • '-' Expr
   28     | Expr • LAND Expr
   29     | Expr • LOR Expr
   30     | Expr • GEQ Expr
   30     | Expr GEQ Expr •
   31     | Expr • LEQ Expr
   32     | Expr • EQL Expr
   33     | Expr • NEQ Expr
   34     | Expr • '>' Expr
   35     | Expr • '<' Expr

    '+'  shift, and go to state 62
    '-'  shift, and go to state 63
    '*'  shift, and go to state 64
    '/'  shift, and go to state 65
    '%'  shift, and go to state 66

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    EQL  error (nonassociative)
    NEQ  error (nonassociative)
    '>'  error (nonassociative)
    '<'  error (nonassociative)

    $default  reduce using rule 30 (Expr)


State 77

   23 Expr: Expr • '*' Expr
   24     | Expr • '/' Expr
   25     | Expr • '%' Expr
   26     | Expr • '+' Expr
   27     | Expr • '-' Expr
   28     | Expr • LAND Expr
   29     | Expr • LOR Expr
   30     | Expr • GEQ Expr
   31     | Expr • LEQ Expr
   31     | Expr LEQ Expr •
   32     | Expr • EQL Expr
   33     | Expr • NEQ Expr
   34     | Expr • '>' Expr
   35     | Expr • '<' Expr

    '+'  shift, and go to state 62
    '-'  shift, and go to state 63
    '*'  shift, and go to state 64
    '/'  shift, and go to state 65
    '%'  shift, and go to state 66

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    EQL  error (nonassociative)
    NEQ  error (nonassociative)
    '>'  error (nonassociative)
    '<'  error (nonassociative)

    $default  reduce using rule 31 (Expr)


State 78

   23 Expr: Expr • '*' Expr
   24     | Expr • '/' Expr
   25     | Expr • '%' Expr
   26     | Expr • '+' Expr
   27     | Expr • '-' Expr
   28     | Expr • LAND Expr
   29     | Expr • LOR Expr
   30     | Expr • GEQ Expr
   31     | Expr • LEQ Expr
   32     | Expr • EQL Expr
   32     | Expr EQL Expr •
   33     | Expr • NEQ Expr
   34     | Expr • '>' Expr
   35     | Expr • '<' Expr

    '+'  shift, and go to state 62
    '-'  shift, and go to state 63
    '*'  shift, and go to state 64
    '/'  shift, and go to state 65
    '%'  shift, and go to state 66

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    EQL  error (nonassociative)
    NEQ  error (nonassociative)
    '>'  error (nonassociative)
    '<'  error (nonassociative)

    $default  reduce using rule 32 (Expr)


State 79

   23 Expr: Expr • '*' Expr
   24     | Expr • '/' Expr
   25     | Expr • '%' Expr
   26     | Expr • '+' Expr
   27     | Expr • '-' Expr
   28     | Expr • LAND Expr
   29     | Expr • LOR Expr
   30     | Expr • GEQ Expr
   31     | Expr • LEQ Expr
   32     | Expr • EQL Expr
   33     | Expr • NEQ Expr
   33     | Expr NEQ Expr •
   34     | Expr • '>' Expr
   35     | Expr • '<' Expr

    '+'  shift, and go to state 62
    '-'  shift, and go to state 63
    '*'  shift, and go to state 64
    '/'  shift, and go to state 65
    '%'  shift, and go to state 66

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    EQL  error (nonassociative)
    NEQ  error (nonassociative)
    '>'  error (nonassociative)
    '<'  error (nonassociative)

    $default  reduce using rule 33 (Expr)


State 80

   23 Expr: Expr • '*' Expr
   24     | Expr • '/' Expr
   25     | Expr • '%' Expr
   26     | Expr • '+' Expr
   27     | Expr • '-' Expr
   28     | Expr • LAND Expr
   29     | Expr • LOR Expr
   29     | Expr LOR Expr •
   30     | Expr • GEQ Expr
   31     | Expr • LEQ Expr
   32     | Expr • EQL Expr
   33     | Expr • NEQ Expr
   34     | Expr • '>' Expr
   35     | Expr • '<' Expr

    GEQ   shift, and go to state 54
    LEQ   shift, and go to state 55
    EQL   shift, and go to state 56
    NEQ   shift, and go to state 57
    LAND  shift, and go to state 59
    '>'   shift, and go to state 60
    '<'   shift, and go to state 61
    '+'   shift, and go to state 62
    '-'   shift, and go to state 63
    '*'   shift, and go to state 64
    '/'   shift, and go to state 65
    '%'   shift, and go to state 66

    $default  reduce using rule 29 (Expr)


State 81

   23 Expr: Expr • '*' Expr
   24     | Expr • '/' Expr
   25     | Expr • '%' Expr
   26     | Expr • '+' Expr
   27     | Expr • '-' Expr
   28     | Expr • LAND Expr
   28     | Expr LAND Expr •
   29     | Expr • LOR Expr
   30     | Expr • GEQ Expr
   31     | Expr • LEQ Expr
   32     | Expr • EQL Expr
   33     | Expr • NEQ Expr
   34     | Expr • '>' Expr
   35     | Expr • '<' Expr

    GEQ  shift, and go to state 54
    LEQ  shift, and go to state 55
    EQL  shift, and go to state 56
    NEQ  shift, and go to state 57
    '>'  shift, and go to state 60
    '<'  shift, and go to state 61
    '+'  shift, and go to state 62
    '-'  shift, and go to state 63
    '*'  shift, and go to state 64
    '/'  shift, and go to state 65
    '%'  shift, and go to state 66

    $default  reduce using rule 28 (Expr)


State 82

   23 Expr: Expr • '*' Expr
   24     | Expr • '/' Expr
   25     | Expr • '%' Expr
   26     | Expr • '+' Expr
   27     | Expr • '-' Expr
   28     | Expr • LAND Expr
   29     | Expr • LOR Expr
   30     | Expr • GEQ Expr
   31     | Expr • LEQ Expr
   32     | Expr • EQL Expr
   33     | Expr • NEQ Expr
   34     | Expr • '>' Expr
   34     | Expr '>' Expr •
   35     | Expr • '<' Expr

    '+'  shift, and go to state 62
    '-'  shift, and go to state 63
    '*'  shift, and go to state 64
    '/'  shift, and go to state 65
    '%'  shift, and go to state 66

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    EQL  error (nonassociative)
    NEQ  error (nonassociative)
    '>'  error (nonassociative)
    '<'  error (nonassociative)

    $default  reduce using rule 34 (Expr)


State 83

   23 Expr: Expr • '*' Expr
   24     | Expr • '/' Expr
   25     | Expr • '%' Expr
   26     | Expr • '+' Expr
   27     | Expr • '-' Expr
   28     | Expr • LAND Expr
   29     | Expr • LOR Expr
   30     | Expr • GEQ Expr
   31     | Expr • LEQ Expr
   32     | Expr • EQL Expr
   33     | Expr • NEQ Expr
   34     | Expr • '>' Expr
   35     | Expr • '<' Expr
   35     | Expr '<' Expr •

    '+'  shift, and go to state 62
    '-'  shift, and go to state 63
    '*'  shift, and go to state 64
    '/'  shift, and go to state 65
    '%'  shift, and go to state 66

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    EQL  error (nonassociative)
    NEQ  error (nonassociative)
    '>'  error (nonassociative)
    '<'  error (nonassociative)

    $default  reduce using rule 35 (Expr)


State 84

   23 Expr: Expr • '*' Expr
   24     | Expr • '/' Expr
   25     | Expr • '%' Expr
   26     | Expr • '+' Expr
   26     | Expr '+' Expr •
   27     | Expr • '-' Expr
   28     | Expr • LAND Expr
   29     | Expr • LOR Expr
   30     | Expr • GEQ Expr
   31     | Expr • LEQ Expr
   32     | Expr • EQL Expr
   33     | Expr • NEQ Expr
   34     | Expr • '>' Expr
   35     | Expr • '<' Expr

    '*'  shift, and go to state 64
    '/'  shift, and go to state 65
    '%'  shift, and go to state 66

    $default  reduce using rule 26 (Expr)


State 85

   23 Expr: Expr • '*' Expr
   24     | Expr • '/' Expr
   25     | Expr • '%' Expr
   26     | Expr • '+' Expr
   27     | Expr • '-' Expr
   27     | Expr '-' Expr •
   28     | Expr • LAND Expr
   29     | Expr • LOR Expr
   30     | Expr • GEQ Expr
   31     | Expr • LEQ Expr
   32     | Expr • EQL Expr
   33     | Expr • NEQ Expr
   34     | Expr • '>' Expr
   35     | Expr • '<' Expr

    '*'  shift, and go to state 64
    '/'  shift, and go to state 65
    '%'  shift, and go to state 66

    $default  reduce using rule 27 (Expr)


State 86

   23 Expr: Expr • '*' Expr
   23     | Expr '*' Expr •
   24     | Expr • '/' Expr
   25     | Expr • '%' Expr
   26     | Expr • '+' Expr
   27     | Expr • '-' Expr
   28     | Expr • LAND Expr
   29     | Expr • LOR Expr
   30     | Expr • GEQ Expr
   31     | Expr • LEQ Expr
   32     | Expr • EQL Expr
   33     | Expr • NEQ Expr
   34     | Expr • '>' Expr
   35     | Expr • '<' Expr

    $default  reduce using rule 23 (Expr)


State 87

   23 Expr: Expr • '*' Expr
   24     | Expr • '/' Expr
   24     | Expr '/' Expr •
   25     | Expr • '%' Expr
   26     | Expr • '+' Expr
   27     | Expr • '-' Expr
   28     | Expr • LAND Expr
   29     | Expr • LOR Expr
   30     | Expr • GEQ Expr
   31     | Expr • LEQ Expr
   32     | Expr • EQL Expr
   33     | Expr • NEQ Expr
   34     | Expr • '>' Expr
   35     | Expr • '<' Expr

    $default  reduce using rule 24 (Expr)


State 88

   23 Expr: Expr • '*' Expr
   24     | Expr • '/' Expr
   25     | Expr • '%' Expr
   25     | Expr '%' Expr •
   26     | Expr • '+' Expr
   27     | Expr • '-' Expr
   28     | Expr • LAND Expr
   29     | Expr • LOR Expr
   30     | Expr • GEQ Expr
   31     | Expr • LEQ Expr
   32     | Expr • EQL Expr
   33     | Expr • NEQ Expr
   34     | Expr • '>' Expr
   35     | Expr • '<' Expr

    $default  reduce using rule 25 (Expr)


State 89

   37 PrintStmt: PrintType '(' Expr ')' ';' •

    $default  reduce using rule 37 (PrintStmt)


State 90

   41 DeclarationStmt: LET MUT ID ':' INT '=' • INT_LIT ';'

    INT_LIT  shift, and go to state 97


State 91

   42 DeclarationStmt: LET MUT ID ':' FLOAT '=' • FLOAT_LIT ';'

    FLOAT_LIT  shift, and go to state 98


State 92

   43 DeclarationStmt: LET MUT ID ':' STR '=' • '"' STRING_LIT '"' ';'

    '"'  shift, and go to state 99


State 93

   38 DeclarationStmt: LET ID ':' INT '=' INT_LIT • ';'

    ';'  shift, and go to state 100


State 94

   39 DeclarationStmt: LET ID ':' FLOAT '=' FLOAT_LIT • ';'

    ';'  shift, and go to state 101


State 95

   40 DeclarationStmt: LET ID ':' STR '=' '"' • STRING_LIT '"' ';'

    STRING_LIT  shift, and go to state 102


State 96

   36 PrintStmt: PrintType '(' '"' STRING_LIT '"' ')' • ';'

    ';'  shift, and go to state 103


State 97

   41 DeclarationStmt: LET MUT ID ':' INT '=' INT_LIT • ';'

    ';'  shift, and go to state 104


State 98

   42 DeclarationStmt: LET MUT ID ':' FLOAT '=' FLOAT_LIT • ';'

    ';'  shift, and go to state 105


State 99

   43 DeclarationStmt: LET MUT ID ':' STR '=' '"' • STRING_LIT '"' ';'

    STRING_LIT  shift, and go to state 106


State 100

   38 DeclarationStmt: LET ID ':' INT '=' INT_LIT ';' •

    $default  reduce using rule 38 (DeclarationStmt)


State 101

   39 DeclarationStmt: LET ID ':' FLOAT '=' FLOAT_LIT ';' •

    $default  reduce using rule 39 (DeclarationStmt)


State 102

   40 DeclarationStmt: LET ID ':' STR '=' '"' STRING_LIT • '"' ';'

    '"'  shift, and go to state 107


State 103

   36 PrintStmt: PrintType '(' '"' STRING_LIT '"' ')' ';' •

    $default  reduce using rule 36 (PrintStmt)


State 104

   41 DeclarationStmt: LET MUT ID ':' INT '=' INT_LIT ';' •

    $default  reduce using rule 41 (DeclarationStmt)


State 105

   42 DeclarationStmt: LET MUT ID ':' FLOAT '=' FLOAT_LIT ';' •

    $default  reduce using rule 42 (DeclarationStmt)


State 106

   43 DeclarationStmt: LET MUT ID ':' STR '=' '"' STRING_LIT • '"' ';'

    '"'  shift, and go to state 108


State 107

   40 DeclarationStmt: LET ID ':' STR '=' '"' STRING_LIT '"' • ';'

    ';'  shift, and go to state 109


State 108

   43 DeclarationStmt: LET MUT ID ':' STR '=' '"' STRING_LIT '"' • ';'

    ';'  shift, and go to state 110


State 109

   40 DeclarationStmt: LET ID ':' STR '=' '"' STRING_LIT '"' ';' •

    $default  reduce using rule 40 (DeclarationStmt)


State 110

   43 DeclarationStmt: LET MUT ID ':' STR '=' '"' STRING_LIT '"' ';' •

    $default  reduce using rule 43 (DeclarationStmt)
