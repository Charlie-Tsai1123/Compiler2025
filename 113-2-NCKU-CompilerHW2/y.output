Terminals unused in grammar

    FOR
    LOOP
    RETURN
    BREAK
    ARROW
    IN
    DOTDOT
    RSHIFT
    LSHIFT


Grammar

    0 $accept: Program $end

    1 $@1: ε

    2 Program: $@1 GlobalStatementList

    3 GlobalStatementList: GlobalStatementList GlobalStatement
    4                    | GlobalStatement

    5 GlobalStatement: FunctionDeclStmt
    6                | NEWLINE

    7 $@2: ε

    8 FunctionDeclStmt: FUNC ID '(' Type ')' $@2 Block

    9 StmtList: StmtList Stmt
   10         | ε

   11 Stmt: PrintStmt
   12     | DeclarationStmt
   13     | AssignmentStmt
   14     | Block
   15     | IfStmt
   16     | WhileStmt

   17 $@3: ε

   18 Block: '{' $@3 StmtList '}'

   19 Expr: ID
   20     | INT_LIT
   21     | FLOAT_LIT
   22     | '"' STRING_LIT '"'
   23     | '"' '"'
   24     | TRUE
   25     | FALSE
   26     | '-' Expr
   27     | '!' Expr
   28     | '(' Expr ')'
   29     | Expr '*' Expr
   30     | Expr '/' Expr
   31     | Expr '%' Expr
   32     | Expr '+' Expr
   33     | Expr '-' Expr
   34     | Expr LAND Expr
   35     | Expr LOR Expr
   36     | Expr GEQ Expr
   37     | Expr LEQ Expr
   38     | Expr EQL Expr
   39     | Expr NEQ Expr
   40     | Expr '>' Expr
   41     | Expr '<' Expr
   42     | Expr AS Type

   43 PrintStmt: PrintType '(' Expr ')' ';'

   44 DeclarationStmt: LET MutType ID ':' Type '=' Expr ';'
   45                | LET MutType ID ':' Type ';'
   46                | LET MutType ID '=' Expr ';'

   47 AssignmentStmt: ID AssignmentOperatorType Expr ';'

   48 IfStmt: IF Expr Block
   49       | IF Expr Block ELSE Block

   50 WhileStmt: WHILE Expr Block

   51 Type: INT
   52     | FLOAT
   53     | BOOL
   54     | '&' STR
   55     | ε

   56 PrintType: PRINT
   57          | PRINTLN

   58 MutType: MUT
   59        | ε

   60 AssignmentOperatorType: '='
   61                       | ADD_ASSIGN
   62                       | SUB_ASSIGN
   63                       | MUL_ASSIGN
   64                       | DIV_ASSIGN
   65                       | REM_ASSIGN


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 27
    '"' (34) 22 23
    '%' (37) 31
    '&' (38) 54
    '(' (40) 8 28 43
    ')' (41) 8 28 43
    '*' (42) 29
    '+' (43) 32
    '-' (45) 26 33
    '/' (47) 30
    ':' (58) 44 45
    ';' (59) 43 44 45 46 47
    '<' (60) 41
    '=' (61) 44 46 60
    '>' (62) 40
    '{' (123) 18
    '}' (125) 18
    error (256)
    LET (258) 44 45 46
    MUT (259) 58
    NEWLINE (260) 6
    INT (261) 51
    FLOAT (262) 52
    BOOL (263) 53
    STR (264) 54
    TRUE (265) 24
    FALSE (266) 25
    GEQ (267) 36
    LEQ (268) 37
    EQL (269) 38
    NEQ (270) 39
    LOR (271) 35
    LAND (272) 34
    ADD_ASSIGN (273) 61
    SUB_ASSIGN (274) 62
    MUL_ASSIGN (275) 63
    DIV_ASSIGN (276) 64
    REM_ASSIGN (277) 65
    IF (278) 48 49
    ELSE (279) 49
    FOR (280)
    WHILE (281) 50
    LOOP (282)
    PRINT (283) 56
    PRINTLN (284) 57
    FUNC (285) 8
    RETURN (286)
    BREAK (287)
    ARROW (288)
    AS (289) 42
    IN (290)
    DOTDOT (291)
    RSHIFT (292)
    LSHIFT (293)
    INT_LIT <i_val> (294) 20
    FLOAT_LIT <f_val> (295) 21
    STRING_LIT <s_val> (296) 22
    ID <s_val> (297) 8 19 44 45 46 47
    IFX (298)
    UMINUS (299)


Nonterminals, with rules where they appear

    $accept (62)
        on left: 0
    Program (63)
        on left: 2
        on right: 0
    $@1 (64)
        on left: 1
        on right: 2
    GlobalStatementList (65)
        on left: 3 4
        on right: 2 3
    GlobalStatement (66)
        on left: 5 6
        on right: 3 4
    FunctionDeclStmt (67)
        on left: 8
        on right: 5
    $@2 (68)
        on left: 7
        on right: 8
    StmtList (69)
        on left: 9 10
        on right: 9 18
    Stmt (70)
        on left: 11 12 13 14 15 16
        on right: 9
    Block (71)
        on left: 18
        on right: 8 14 48 49 50
    $@3 (72)
        on left: 17
        on right: 18
    Expr <s_val> (73)
        on left: 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
        on right: 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 46 47 48 49 50
    PrintStmt (74)
        on left: 43
        on right: 11
    DeclarationStmt (75)
        on left: 44 45 46
        on right: 12
    AssignmentStmt (76)
        on left: 47
        on right: 13
    IfStmt (77)
        on left: 48 49
        on right: 15
    WhileStmt (78)
        on left: 50
        on right: 16
    Type <s_val> (79)
        on left: 51 52 53 54 55
        on right: 8 42 44 45
    PrintType <s_val> (80)
        on left: 56 57
        on right: 43
    MutType <i_val> (81)
        on left: 58 59
        on right: 44 45 46
    AssignmentOperatorType <s_val> (82)
        on left: 60 61 62 63 64 65
        on right: 47


State 0

    0 $accept: • Program $end

    $default  reduce using rule 1 ($@1)

    Program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: Program • $end

    $end  shift, and go to state 3


State 2

    2 Program: $@1 • GlobalStatementList

    NEWLINE  shift, and go to state 4
    FUNC     shift, and go to state 5

    GlobalStatementList  go to state 6
    GlobalStatement      go to state 7
    FunctionDeclStmt     go to state 8


State 3

    0 $accept: Program $end •

    $default  accept


State 4

    6 GlobalStatement: NEWLINE •

    $default  reduce using rule 6 (GlobalStatement)


State 5

    8 FunctionDeclStmt: FUNC • ID '(' Type ')' $@2 Block

    ID  shift, and go to state 9


State 6

    2 Program: $@1 GlobalStatementList •
    3 GlobalStatementList: GlobalStatementList • GlobalStatement

    NEWLINE  shift, and go to state 4
    FUNC     shift, and go to state 5

    $default  reduce using rule 2 (Program)

    GlobalStatement   go to state 10
    FunctionDeclStmt  go to state 8


State 7

    4 GlobalStatementList: GlobalStatement •

    $default  reduce using rule 4 (GlobalStatementList)


State 8

    5 GlobalStatement: FunctionDeclStmt •

    $default  reduce using rule 5 (GlobalStatement)


State 9

    8 FunctionDeclStmt: FUNC ID • '(' Type ')' $@2 Block

    '('  shift, and go to state 11


State 10

    3 GlobalStatementList: GlobalStatementList GlobalStatement •

    $default  reduce using rule 3 (GlobalStatementList)


State 11

    8 FunctionDeclStmt: FUNC ID '(' • Type ')' $@2 Block

    INT    shift, and go to state 12
    FLOAT  shift, and go to state 13
    BOOL   shift, and go to state 14
    '&'    shift, and go to state 15

    $default  reduce using rule 55 (Type)

    Type  go to state 16


State 12

   51 Type: INT •

    $default  reduce using rule 51 (Type)


State 13

   52 Type: FLOAT •

    $default  reduce using rule 52 (Type)


State 14

   53 Type: BOOL •

    $default  reduce using rule 53 (Type)


State 15

   54 Type: '&' • STR

    STR  shift, and go to state 17


State 16

    8 FunctionDeclStmt: FUNC ID '(' Type • ')' $@2 Block

    ')'  shift, and go to state 18


State 17

   54 Type: '&' STR •

    $default  reduce using rule 54 (Type)


State 18

    8 FunctionDeclStmt: FUNC ID '(' Type ')' • $@2 Block

    $default  reduce using rule 7 ($@2)

    $@2  go to state 19


State 19

    8 FunctionDeclStmt: FUNC ID '(' Type ')' $@2 • Block

    '{'  shift, and go to state 20

    Block  go to state 21


State 20

   18 Block: '{' • $@3 StmtList '}'

    $default  reduce using rule 17 ($@3)

    $@3  go to state 22


State 21

    8 FunctionDeclStmt: FUNC ID '(' Type ')' $@2 Block •

    $default  reduce using rule 8 (FunctionDeclStmt)


State 22

   18 Block: '{' $@3 • StmtList '}'

    $default  reduce using rule 10 (StmtList)

    StmtList  go to state 23


State 23

    9 StmtList: StmtList • Stmt
   18 Block: '{' $@3 StmtList • '}'

    LET      shift, and go to state 24
    IF       shift, and go to state 25
    WHILE    shift, and go to state 26
    PRINT    shift, and go to state 27
    PRINTLN  shift, and go to state 28
    ID       shift, and go to state 29
    '{'      shift, and go to state 20
    '}'      shift, and go to state 30

    Stmt             go to state 31
    Block            go to state 32
    PrintStmt        go to state 33
    DeclarationStmt  go to state 34
    AssignmentStmt   go to state 35
    IfStmt           go to state 36
    WhileStmt        go to state 37
    PrintType        go to state 38


State 24

   44 DeclarationStmt: LET • MutType ID ':' Type '=' Expr ';'
   45                | LET • MutType ID ':' Type ';'
   46                | LET • MutType ID '=' Expr ';'

    MUT  shift, and go to state 39

    $default  reduce using rule 59 (MutType)

    MutType  go to state 40


State 25

   48 IfStmt: IF • Expr Block
   49       | IF • Expr Block ELSE Block

    TRUE       shift, and go to state 41
    FALSE      shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    ID         shift, and go to state 45
    '!'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '"'        shift, and go to state 49

    Expr  go to state 50


State 26

   50 WhileStmt: WHILE • Expr Block

    TRUE       shift, and go to state 41
    FALSE      shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    ID         shift, and go to state 45
    '!'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '"'        shift, and go to state 49

    Expr  go to state 51


State 27

   56 PrintType: PRINT •

    $default  reduce using rule 56 (PrintType)


State 28

   57 PrintType: PRINTLN •

    $default  reduce using rule 57 (PrintType)


State 29

   47 AssignmentStmt: ID • AssignmentOperatorType Expr ';'

    ADD_ASSIGN  shift, and go to state 52
    SUB_ASSIGN  shift, and go to state 53
    MUL_ASSIGN  shift, and go to state 54
    DIV_ASSIGN  shift, and go to state 55
    REM_ASSIGN  shift, and go to state 56
    '='         shift, and go to state 57

    AssignmentOperatorType  go to state 58


State 30

   18 Block: '{' $@3 StmtList '}' •

    $default  reduce using rule 18 (Block)


State 31

    9 StmtList: StmtList Stmt •

    $default  reduce using rule 9 (StmtList)


State 32

   14 Stmt: Block •

    $default  reduce using rule 14 (Stmt)


State 33

   11 Stmt: PrintStmt •

    $default  reduce using rule 11 (Stmt)


State 34

   12 Stmt: DeclarationStmt •

    $default  reduce using rule 12 (Stmt)


State 35

   13 Stmt: AssignmentStmt •

    $default  reduce using rule 13 (Stmt)


State 36

   15 Stmt: IfStmt •

    $default  reduce using rule 15 (Stmt)


State 37

   16 Stmt: WhileStmt •

    $default  reduce using rule 16 (Stmt)


State 38

   43 PrintStmt: PrintType • '(' Expr ')' ';'

    '('  shift, and go to state 59


State 39

   58 MutType: MUT •

    $default  reduce using rule 58 (MutType)


State 40

   44 DeclarationStmt: LET MutType • ID ':' Type '=' Expr ';'
   45                | LET MutType • ID ':' Type ';'
   46                | LET MutType • ID '=' Expr ';'

    ID  shift, and go to state 60


State 41

   24 Expr: TRUE •

    $default  reduce using rule 24 (Expr)


State 42

   25 Expr: FALSE •

    $default  reduce using rule 25 (Expr)


State 43

   20 Expr: INT_LIT •

    $default  reduce using rule 20 (Expr)


State 44

   21 Expr: FLOAT_LIT •

    $default  reduce using rule 21 (Expr)


State 45

   19 Expr: ID •

    $default  reduce using rule 19 (Expr)


State 46

   27 Expr: '!' • Expr

    TRUE       shift, and go to state 41
    FALSE      shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    ID         shift, and go to state 45
    '!'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '"'        shift, and go to state 49

    Expr  go to state 61


State 47

   26 Expr: '-' • Expr

    TRUE       shift, and go to state 41
    FALSE      shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    ID         shift, and go to state 45
    '!'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '"'        shift, and go to state 49

    Expr  go to state 62


State 48

   28 Expr: '(' • Expr ')'

    TRUE       shift, and go to state 41
    FALSE      shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    ID         shift, and go to state 45
    '!'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '"'        shift, and go to state 49

    Expr  go to state 63


State 49

   22 Expr: '"' • STRING_LIT '"'
   23     | '"' • '"'

    STRING_LIT  shift, and go to state 64
    '"'         shift, and go to state 65


State 50

   29 Expr: Expr • '*' Expr
   30     | Expr • '/' Expr
   31     | Expr • '%' Expr
   32     | Expr • '+' Expr
   33     | Expr • '-' Expr
   34     | Expr • LAND Expr
   35     | Expr • LOR Expr
   36     | Expr • GEQ Expr
   37     | Expr • LEQ Expr
   38     | Expr • EQL Expr
   39     | Expr • NEQ Expr
   40     | Expr • '>' Expr
   41     | Expr • '<' Expr
   42     | Expr • AS Type
   48 IfStmt: IF Expr • Block
   49       | IF Expr • Block ELSE Block

    GEQ   shift, and go to state 66
    LEQ   shift, and go to state 67
    EQL   shift, and go to state 68
    NEQ   shift, and go to state 69
    LOR   shift, and go to state 70
    LAND  shift, and go to state 71
    AS    shift, and go to state 72
    '>'   shift, and go to state 73
    '<'   shift, and go to state 74
    '+'   shift, and go to state 75
    '-'   shift, and go to state 76
    '*'   shift, and go to state 77
    '/'   shift, and go to state 78
    '%'   shift, and go to state 79
    '{'   shift, and go to state 20

    Block  go to state 80


State 51

   29 Expr: Expr • '*' Expr
   30     | Expr • '/' Expr
   31     | Expr • '%' Expr
   32     | Expr • '+' Expr
   33     | Expr • '-' Expr
   34     | Expr • LAND Expr
   35     | Expr • LOR Expr
   36     | Expr • GEQ Expr
   37     | Expr • LEQ Expr
   38     | Expr • EQL Expr
   39     | Expr • NEQ Expr
   40     | Expr • '>' Expr
   41     | Expr • '<' Expr
   42     | Expr • AS Type
   50 WhileStmt: WHILE Expr • Block

    GEQ   shift, and go to state 66
    LEQ   shift, and go to state 67
    EQL   shift, and go to state 68
    NEQ   shift, and go to state 69
    LOR   shift, and go to state 70
    LAND  shift, and go to state 71
    AS    shift, and go to state 72
    '>'   shift, and go to state 73
    '<'   shift, and go to state 74
    '+'   shift, and go to state 75
    '-'   shift, and go to state 76
    '*'   shift, and go to state 77
    '/'   shift, and go to state 78
    '%'   shift, and go to state 79
    '{'   shift, and go to state 20

    Block  go to state 81


State 52

   61 AssignmentOperatorType: ADD_ASSIGN •

    $default  reduce using rule 61 (AssignmentOperatorType)


State 53

   62 AssignmentOperatorType: SUB_ASSIGN •

    $default  reduce using rule 62 (AssignmentOperatorType)


State 54

   63 AssignmentOperatorType: MUL_ASSIGN •

    $default  reduce using rule 63 (AssignmentOperatorType)


State 55

   64 AssignmentOperatorType: DIV_ASSIGN •

    $default  reduce using rule 64 (AssignmentOperatorType)


State 56

   65 AssignmentOperatorType: REM_ASSIGN •

    $default  reduce using rule 65 (AssignmentOperatorType)


State 57

   60 AssignmentOperatorType: '=' •

    $default  reduce using rule 60 (AssignmentOperatorType)


State 58

   47 AssignmentStmt: ID AssignmentOperatorType • Expr ';'

    TRUE       shift, and go to state 41
    FALSE      shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    ID         shift, and go to state 45
    '!'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '"'        shift, and go to state 49

    Expr  go to state 82


State 59

   43 PrintStmt: PrintType '(' • Expr ')' ';'

    TRUE       shift, and go to state 41
    FALSE      shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    ID         shift, and go to state 45
    '!'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '"'        shift, and go to state 49

    Expr  go to state 83


State 60

   44 DeclarationStmt: LET MutType ID • ':' Type '=' Expr ';'
   45                | LET MutType ID • ':' Type ';'
   46                | LET MutType ID • '=' Expr ';'

    ':'  shift, and go to state 84
    '='  shift, and go to state 85


State 61

   27 Expr: '!' Expr •
   29     | Expr • '*' Expr
   30     | Expr • '/' Expr
   31     | Expr • '%' Expr
   32     | Expr • '+' Expr
   33     | Expr • '-' Expr
   34     | Expr • LAND Expr
   35     | Expr • LOR Expr
   36     | Expr • GEQ Expr
   37     | Expr • LEQ Expr
   38     | Expr • EQL Expr
   39     | Expr • NEQ Expr
   40     | Expr • '>' Expr
   41     | Expr • '<' Expr
   42     | Expr • AS Type

    GEQ  shift, and go to state 66
    LEQ  shift, and go to state 67
    EQL  shift, and go to state 68
    NEQ  shift, and go to state 69
    AS   shift, and go to state 72
    '>'  shift, and go to state 73
    '<'  shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79

    $default  reduce using rule 27 (Expr)


State 62

   26 Expr: '-' Expr •
   29     | Expr • '*' Expr
   30     | Expr • '/' Expr
   31     | Expr • '%' Expr
   32     | Expr • '+' Expr
   33     | Expr • '-' Expr
   34     | Expr • LAND Expr
   35     | Expr • LOR Expr
   36     | Expr • GEQ Expr
   37     | Expr • LEQ Expr
   38     | Expr • EQL Expr
   39     | Expr • NEQ Expr
   40     | Expr • '>' Expr
   41     | Expr • '<' Expr
   42     | Expr • AS Type

    AS  shift, and go to state 72

    $default  reduce using rule 26 (Expr)


State 63

   28 Expr: '(' Expr • ')'
   29     | Expr • '*' Expr
   30     | Expr • '/' Expr
   31     | Expr • '%' Expr
   32     | Expr • '+' Expr
   33     | Expr • '-' Expr
   34     | Expr • LAND Expr
   35     | Expr • LOR Expr
   36     | Expr • GEQ Expr
   37     | Expr • LEQ Expr
   38     | Expr • EQL Expr
   39     | Expr • NEQ Expr
   40     | Expr • '>' Expr
   41     | Expr • '<' Expr
   42     | Expr • AS Type

    GEQ   shift, and go to state 66
    LEQ   shift, and go to state 67
    EQL   shift, and go to state 68
    NEQ   shift, and go to state 69
    LOR   shift, and go to state 70
    LAND  shift, and go to state 71
    AS    shift, and go to state 72
    '>'   shift, and go to state 73
    '<'   shift, and go to state 74
    '+'   shift, and go to state 75
    '-'   shift, and go to state 76
    '*'   shift, and go to state 77
    '/'   shift, and go to state 78
    '%'   shift, and go to state 79
    ')'   shift, and go to state 86


State 64

   22 Expr: '"' STRING_LIT • '"'

    '"'  shift, and go to state 87


State 65

   23 Expr: '"' '"' •

    $default  reduce using rule 23 (Expr)


State 66

   36 Expr: Expr GEQ • Expr

    TRUE       shift, and go to state 41
    FALSE      shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    ID         shift, and go to state 45
    '!'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '"'        shift, and go to state 49

    Expr  go to state 88


State 67

   37 Expr: Expr LEQ • Expr

    TRUE       shift, and go to state 41
    FALSE      shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    ID         shift, and go to state 45
    '!'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '"'        shift, and go to state 49

    Expr  go to state 89


State 68

   38 Expr: Expr EQL • Expr

    TRUE       shift, and go to state 41
    FALSE      shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    ID         shift, and go to state 45
    '!'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '"'        shift, and go to state 49

    Expr  go to state 90


State 69

   39 Expr: Expr NEQ • Expr

    TRUE       shift, and go to state 41
    FALSE      shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    ID         shift, and go to state 45
    '!'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '"'        shift, and go to state 49

    Expr  go to state 91


State 70

   35 Expr: Expr LOR • Expr

    TRUE       shift, and go to state 41
    FALSE      shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    ID         shift, and go to state 45
    '!'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '"'        shift, and go to state 49

    Expr  go to state 92


State 71

   34 Expr: Expr LAND • Expr

    TRUE       shift, and go to state 41
    FALSE      shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    ID         shift, and go to state 45
    '!'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '"'        shift, and go to state 49

    Expr  go to state 93


State 72

   42 Expr: Expr AS • Type

    INT    shift, and go to state 12
    FLOAT  shift, and go to state 13
    BOOL   shift, and go to state 14
    '&'    shift, and go to state 15

    $default  reduce using rule 55 (Type)

    Type  go to state 94


State 73

   40 Expr: Expr '>' • Expr

    TRUE       shift, and go to state 41
    FALSE      shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    ID         shift, and go to state 45
    '!'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '"'        shift, and go to state 49

    Expr  go to state 95


State 74

   41 Expr: Expr '<' • Expr

    TRUE       shift, and go to state 41
    FALSE      shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    ID         shift, and go to state 45
    '!'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '"'        shift, and go to state 49

    Expr  go to state 96


State 75

   32 Expr: Expr '+' • Expr

    TRUE       shift, and go to state 41
    FALSE      shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    ID         shift, and go to state 45
    '!'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '"'        shift, and go to state 49

    Expr  go to state 97


State 76

   33 Expr: Expr '-' • Expr

    TRUE       shift, and go to state 41
    FALSE      shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    ID         shift, and go to state 45
    '!'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '"'        shift, and go to state 49

    Expr  go to state 98


State 77

   29 Expr: Expr '*' • Expr

    TRUE       shift, and go to state 41
    FALSE      shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    ID         shift, and go to state 45
    '!'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '"'        shift, and go to state 49

    Expr  go to state 99


State 78

   30 Expr: Expr '/' • Expr

    TRUE       shift, and go to state 41
    FALSE      shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    ID         shift, and go to state 45
    '!'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '"'        shift, and go to state 49

    Expr  go to state 100


State 79

   31 Expr: Expr '%' • Expr

    TRUE       shift, and go to state 41
    FALSE      shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    ID         shift, and go to state 45
    '!'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '"'        shift, and go to state 49

    Expr  go to state 101


State 80

   48 IfStmt: IF Expr Block •
   49       | IF Expr Block • ELSE Block

    ELSE  shift, and go to state 102

    $default  reduce using rule 48 (IfStmt)


State 81

   50 WhileStmt: WHILE Expr Block •

    $default  reduce using rule 50 (WhileStmt)


State 82

   29 Expr: Expr • '*' Expr
   30     | Expr • '/' Expr
   31     | Expr • '%' Expr
   32     | Expr • '+' Expr
   33     | Expr • '-' Expr
   34     | Expr • LAND Expr
   35     | Expr • LOR Expr
   36     | Expr • GEQ Expr
   37     | Expr • LEQ Expr
   38     | Expr • EQL Expr
   39     | Expr • NEQ Expr
   40     | Expr • '>' Expr
   41     | Expr • '<' Expr
   42     | Expr • AS Type
   47 AssignmentStmt: ID AssignmentOperatorType Expr • ';'

    GEQ   shift, and go to state 66
    LEQ   shift, and go to state 67
    EQL   shift, and go to state 68
    NEQ   shift, and go to state 69
    LOR   shift, and go to state 70
    LAND  shift, and go to state 71
    AS    shift, and go to state 72
    '>'   shift, and go to state 73
    '<'   shift, and go to state 74
    '+'   shift, and go to state 75
    '-'   shift, and go to state 76
    '*'   shift, and go to state 77
    '/'   shift, and go to state 78
    '%'   shift, and go to state 79
    ';'   shift, and go to state 103


State 83

   29 Expr: Expr • '*' Expr
   30     | Expr • '/' Expr
   31     | Expr • '%' Expr
   32     | Expr • '+' Expr
   33     | Expr • '-' Expr
   34     | Expr • LAND Expr
   35     | Expr • LOR Expr
   36     | Expr • GEQ Expr
   37     | Expr • LEQ Expr
   38     | Expr • EQL Expr
   39     | Expr • NEQ Expr
   40     | Expr • '>' Expr
   41     | Expr • '<' Expr
   42     | Expr • AS Type
   43 PrintStmt: PrintType '(' Expr • ')' ';'

    GEQ   shift, and go to state 66
    LEQ   shift, and go to state 67
    EQL   shift, and go to state 68
    NEQ   shift, and go to state 69
    LOR   shift, and go to state 70
    LAND  shift, and go to state 71
    AS    shift, and go to state 72
    '>'   shift, and go to state 73
    '<'   shift, and go to state 74
    '+'   shift, and go to state 75
    '-'   shift, and go to state 76
    '*'   shift, and go to state 77
    '/'   shift, and go to state 78
    '%'   shift, and go to state 79
    ')'   shift, and go to state 104


State 84

   44 DeclarationStmt: LET MutType ID ':' • Type '=' Expr ';'
   45                | LET MutType ID ':' • Type ';'

    INT    shift, and go to state 12
    FLOAT  shift, and go to state 13
    BOOL   shift, and go to state 14
    '&'    shift, and go to state 15

    $default  reduce using rule 55 (Type)

    Type  go to state 105


State 85

   46 DeclarationStmt: LET MutType ID '=' • Expr ';'

    TRUE       shift, and go to state 41
    FALSE      shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    ID         shift, and go to state 45
    '!'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '"'        shift, and go to state 49

    Expr  go to state 106


State 86

   28 Expr: '(' Expr ')' •

    $default  reduce using rule 28 (Expr)


State 87

   22 Expr: '"' STRING_LIT '"' •

    $default  reduce using rule 22 (Expr)


State 88

   29 Expr: Expr • '*' Expr
   30     | Expr • '/' Expr
   31     | Expr • '%' Expr
   32     | Expr • '+' Expr
   33     | Expr • '-' Expr
   34     | Expr • LAND Expr
   35     | Expr • LOR Expr
   36     | Expr • GEQ Expr
   36     | Expr GEQ Expr •
   37     | Expr • LEQ Expr
   38     | Expr • EQL Expr
   39     | Expr • NEQ Expr
   40     | Expr • '>' Expr
   41     | Expr • '<' Expr
   42     | Expr • AS Type

    AS   shift, and go to state 72
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    EQL  error (nonassociative)
    NEQ  error (nonassociative)
    '>'  error (nonassociative)
    '<'  error (nonassociative)

    $default  reduce using rule 36 (Expr)


State 89

   29 Expr: Expr • '*' Expr
   30     | Expr • '/' Expr
   31     | Expr • '%' Expr
   32     | Expr • '+' Expr
   33     | Expr • '-' Expr
   34     | Expr • LAND Expr
   35     | Expr • LOR Expr
   36     | Expr • GEQ Expr
   37     | Expr • LEQ Expr
   37     | Expr LEQ Expr •
   38     | Expr • EQL Expr
   39     | Expr • NEQ Expr
   40     | Expr • '>' Expr
   41     | Expr • '<' Expr
   42     | Expr • AS Type

    AS   shift, and go to state 72
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    EQL  error (nonassociative)
    NEQ  error (nonassociative)
    '>'  error (nonassociative)
    '<'  error (nonassociative)

    $default  reduce using rule 37 (Expr)


State 90

   29 Expr: Expr • '*' Expr
   30     | Expr • '/' Expr
   31     | Expr • '%' Expr
   32     | Expr • '+' Expr
   33     | Expr • '-' Expr
   34     | Expr • LAND Expr
   35     | Expr • LOR Expr
   36     | Expr • GEQ Expr
   37     | Expr • LEQ Expr
   38     | Expr • EQL Expr
   38     | Expr EQL Expr •
   39     | Expr • NEQ Expr
   40     | Expr • '>' Expr
   41     | Expr • '<' Expr
   42     | Expr • AS Type

    AS   shift, and go to state 72
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    EQL  error (nonassociative)
    NEQ  error (nonassociative)
    '>'  error (nonassociative)
    '<'  error (nonassociative)

    $default  reduce using rule 38 (Expr)


State 91

   29 Expr: Expr • '*' Expr
   30     | Expr • '/' Expr
   31     | Expr • '%' Expr
   32     | Expr • '+' Expr
   33     | Expr • '-' Expr
   34     | Expr • LAND Expr
   35     | Expr • LOR Expr
   36     | Expr • GEQ Expr
   37     | Expr • LEQ Expr
   38     | Expr • EQL Expr
   39     | Expr • NEQ Expr
   39     | Expr NEQ Expr •
   40     | Expr • '>' Expr
   41     | Expr • '<' Expr
   42     | Expr • AS Type

    AS   shift, and go to state 72
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    EQL  error (nonassociative)
    NEQ  error (nonassociative)
    '>'  error (nonassociative)
    '<'  error (nonassociative)

    $default  reduce using rule 39 (Expr)


State 92

   29 Expr: Expr • '*' Expr
   30     | Expr • '/' Expr
   31     | Expr • '%' Expr
   32     | Expr • '+' Expr
   33     | Expr • '-' Expr
   34     | Expr • LAND Expr
   35     | Expr • LOR Expr
   35     | Expr LOR Expr •
   36     | Expr • GEQ Expr
   37     | Expr • LEQ Expr
   38     | Expr • EQL Expr
   39     | Expr • NEQ Expr
   40     | Expr • '>' Expr
   41     | Expr • '<' Expr
   42     | Expr • AS Type

    GEQ   shift, and go to state 66
    LEQ   shift, and go to state 67
    EQL   shift, and go to state 68
    NEQ   shift, and go to state 69
    LAND  shift, and go to state 71
    AS    shift, and go to state 72
    '>'   shift, and go to state 73
    '<'   shift, and go to state 74
    '+'   shift, and go to state 75
    '-'   shift, and go to state 76
    '*'   shift, and go to state 77
    '/'   shift, and go to state 78
    '%'   shift, and go to state 79

    $default  reduce using rule 35 (Expr)


State 93

   29 Expr: Expr • '*' Expr
   30     | Expr • '/' Expr
   31     | Expr • '%' Expr
   32     | Expr • '+' Expr
   33     | Expr • '-' Expr
   34     | Expr • LAND Expr
   34     | Expr LAND Expr •
   35     | Expr • LOR Expr
   36     | Expr • GEQ Expr
   37     | Expr • LEQ Expr
   38     | Expr • EQL Expr
   39     | Expr • NEQ Expr
   40     | Expr • '>' Expr
   41     | Expr • '<' Expr
   42     | Expr • AS Type

    GEQ  shift, and go to state 66
    LEQ  shift, and go to state 67
    EQL  shift, and go to state 68
    NEQ  shift, and go to state 69
    AS   shift, and go to state 72
    '>'  shift, and go to state 73
    '<'  shift, and go to state 74
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79

    $default  reduce using rule 34 (Expr)


State 94

   42 Expr: Expr AS Type •

    $default  reduce using rule 42 (Expr)


State 95

   29 Expr: Expr • '*' Expr
   30     | Expr • '/' Expr
   31     | Expr • '%' Expr
   32     | Expr • '+' Expr
   33     | Expr • '-' Expr
   34     | Expr • LAND Expr
   35     | Expr • LOR Expr
   36     | Expr • GEQ Expr
   37     | Expr • LEQ Expr
   38     | Expr • EQL Expr
   39     | Expr • NEQ Expr
   40     | Expr • '>' Expr
   40     | Expr '>' Expr •
   41     | Expr • '<' Expr
   42     | Expr • AS Type

    AS   shift, and go to state 72
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    EQL  error (nonassociative)
    NEQ  error (nonassociative)
    '>'  error (nonassociative)
    '<'  error (nonassociative)

    $default  reduce using rule 40 (Expr)


State 96

   29 Expr: Expr • '*' Expr
   30     | Expr • '/' Expr
   31     | Expr • '%' Expr
   32     | Expr • '+' Expr
   33     | Expr • '-' Expr
   34     | Expr • LAND Expr
   35     | Expr • LOR Expr
   36     | Expr • GEQ Expr
   37     | Expr • LEQ Expr
   38     | Expr • EQL Expr
   39     | Expr • NEQ Expr
   40     | Expr • '>' Expr
   41     | Expr • '<' Expr
   41     | Expr '<' Expr •
   42     | Expr • AS Type

    AS   shift, and go to state 72
    '+'  shift, and go to state 75
    '-'  shift, and go to state 76
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    EQL  error (nonassociative)
    NEQ  error (nonassociative)
    '>'  error (nonassociative)
    '<'  error (nonassociative)

    $default  reduce using rule 41 (Expr)


State 97

   29 Expr: Expr • '*' Expr
   30     | Expr • '/' Expr
   31     | Expr • '%' Expr
   32     | Expr • '+' Expr
   32     | Expr '+' Expr •
   33     | Expr • '-' Expr
   34     | Expr • LAND Expr
   35     | Expr • LOR Expr
   36     | Expr • GEQ Expr
   37     | Expr • LEQ Expr
   38     | Expr • EQL Expr
   39     | Expr • NEQ Expr
   40     | Expr • '>' Expr
   41     | Expr • '<' Expr
   42     | Expr • AS Type

    AS   shift, and go to state 72
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79

    $default  reduce using rule 32 (Expr)


State 98

   29 Expr: Expr • '*' Expr
   30     | Expr • '/' Expr
   31     | Expr • '%' Expr
   32     | Expr • '+' Expr
   33     | Expr • '-' Expr
   33     | Expr '-' Expr •
   34     | Expr • LAND Expr
   35     | Expr • LOR Expr
   36     | Expr • GEQ Expr
   37     | Expr • LEQ Expr
   38     | Expr • EQL Expr
   39     | Expr • NEQ Expr
   40     | Expr • '>' Expr
   41     | Expr • '<' Expr
   42     | Expr • AS Type

    AS   shift, and go to state 72
    '*'  shift, and go to state 77
    '/'  shift, and go to state 78
    '%'  shift, and go to state 79

    $default  reduce using rule 33 (Expr)


State 99

   29 Expr: Expr • '*' Expr
   29     | Expr '*' Expr •
   30     | Expr • '/' Expr
   31     | Expr • '%' Expr
   32     | Expr • '+' Expr
   33     | Expr • '-' Expr
   34     | Expr • LAND Expr
   35     | Expr • LOR Expr
   36     | Expr • GEQ Expr
   37     | Expr • LEQ Expr
   38     | Expr • EQL Expr
   39     | Expr • NEQ Expr
   40     | Expr • '>' Expr
   41     | Expr • '<' Expr
   42     | Expr • AS Type

    AS  shift, and go to state 72

    $default  reduce using rule 29 (Expr)


State 100

   29 Expr: Expr • '*' Expr
   30     | Expr • '/' Expr
   30     | Expr '/' Expr •
   31     | Expr • '%' Expr
   32     | Expr • '+' Expr
   33     | Expr • '-' Expr
   34     | Expr • LAND Expr
   35     | Expr • LOR Expr
   36     | Expr • GEQ Expr
   37     | Expr • LEQ Expr
   38     | Expr • EQL Expr
   39     | Expr • NEQ Expr
   40     | Expr • '>' Expr
   41     | Expr • '<' Expr
   42     | Expr • AS Type

    AS  shift, and go to state 72

    $default  reduce using rule 30 (Expr)


State 101

   29 Expr: Expr • '*' Expr
   30     | Expr • '/' Expr
   31     | Expr • '%' Expr
   31     | Expr '%' Expr •
   32     | Expr • '+' Expr
   33     | Expr • '-' Expr
   34     | Expr • LAND Expr
   35     | Expr • LOR Expr
   36     | Expr • GEQ Expr
   37     | Expr • LEQ Expr
   38     | Expr • EQL Expr
   39     | Expr • NEQ Expr
   40     | Expr • '>' Expr
   41     | Expr • '<' Expr
   42     | Expr • AS Type

    AS  shift, and go to state 72

    $default  reduce using rule 31 (Expr)


State 102

   49 IfStmt: IF Expr Block ELSE • Block

    '{'  shift, and go to state 20

    Block  go to state 107


State 103

   47 AssignmentStmt: ID AssignmentOperatorType Expr ';' •

    $default  reduce using rule 47 (AssignmentStmt)


State 104

   43 PrintStmt: PrintType '(' Expr ')' • ';'

    ';'  shift, and go to state 108


State 105

   44 DeclarationStmt: LET MutType ID ':' Type • '=' Expr ';'
   45                | LET MutType ID ':' Type • ';'

    ';'  shift, and go to state 109
    '='  shift, and go to state 110


State 106

   29 Expr: Expr • '*' Expr
   30     | Expr • '/' Expr
   31     | Expr • '%' Expr
   32     | Expr • '+' Expr
   33     | Expr • '-' Expr
   34     | Expr • LAND Expr
   35     | Expr • LOR Expr
   36     | Expr • GEQ Expr
   37     | Expr • LEQ Expr
   38     | Expr • EQL Expr
   39     | Expr • NEQ Expr
   40     | Expr • '>' Expr
   41     | Expr • '<' Expr
   42     | Expr • AS Type
   46 DeclarationStmt: LET MutType ID '=' Expr • ';'

    GEQ   shift, and go to state 66
    LEQ   shift, and go to state 67
    EQL   shift, and go to state 68
    NEQ   shift, and go to state 69
    LOR   shift, and go to state 70
    LAND  shift, and go to state 71
    AS    shift, and go to state 72
    '>'   shift, and go to state 73
    '<'   shift, and go to state 74
    '+'   shift, and go to state 75
    '-'   shift, and go to state 76
    '*'   shift, and go to state 77
    '/'   shift, and go to state 78
    '%'   shift, and go to state 79
    ';'   shift, and go to state 111


State 107

   49 IfStmt: IF Expr Block ELSE Block •

    $default  reduce using rule 49 (IfStmt)


State 108

   43 PrintStmt: PrintType '(' Expr ')' ';' •

    $default  reduce using rule 43 (PrintStmt)


State 109

   45 DeclarationStmt: LET MutType ID ':' Type ';' •

    $default  reduce using rule 45 (DeclarationStmt)


State 110

   44 DeclarationStmt: LET MutType ID ':' Type '=' • Expr ';'

    TRUE       shift, and go to state 41
    FALSE      shift, and go to state 42
    INT_LIT    shift, and go to state 43
    FLOAT_LIT  shift, and go to state 44
    ID         shift, and go to state 45
    '!'        shift, and go to state 46
    '-'        shift, and go to state 47
    '('        shift, and go to state 48
    '"'        shift, and go to state 49

    Expr  go to state 112


State 111

   46 DeclarationStmt: LET MutType ID '=' Expr ';' •

    $default  reduce using rule 46 (DeclarationStmt)


State 112

   29 Expr: Expr • '*' Expr
   30     | Expr • '/' Expr
   31     | Expr • '%' Expr
   32     | Expr • '+' Expr
   33     | Expr • '-' Expr
   34     | Expr • LAND Expr
   35     | Expr • LOR Expr
   36     | Expr • GEQ Expr
   37     | Expr • LEQ Expr
   38     | Expr • EQL Expr
   39     | Expr • NEQ Expr
   40     | Expr • '>' Expr
   41     | Expr • '<' Expr
   42     | Expr • AS Type
   44 DeclarationStmt: LET MutType ID ':' Type '=' Expr • ';'

    GEQ   shift, and go to state 66
    LEQ   shift, and go to state 67
    EQL   shift, and go to state 68
    NEQ   shift, and go to state 69
    LOR   shift, and go to state 70
    LAND  shift, and go to state 71
    AS    shift, and go to state 72
    '>'   shift, and go to state 73
    '<'   shift, and go to state 74
    '+'   shift, and go to state 75
    '-'   shift, and go to state 76
    '*'   shift, and go to state 77
    '/'   shift, and go to state 78
    '%'   shift, and go to state 79
    ';'   shift, and go to state 113


State 113

   44 DeclarationStmt: LET MutType ID ':' Type '=' Expr ';' •

    $default  reduce using rule 44 (DeclarationStmt)
