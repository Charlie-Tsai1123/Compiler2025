Terminals unused in grammar

    IF
    ELSE
    FOR
    WHILE
    LOOP
    RETURN
    BREAK
    ARROW
    IN
    DOTDOT
    RSHIFT
    LSHIFT


Grammar

    0 $accept: Program $end

    1 $@1: ε

    2 Program: $@1 GlobalStatementList

    3 GlobalStatementList: GlobalStatementList GlobalStatement
    4                    | GlobalStatement

    5 GlobalStatement: FunctionDeclStmt
    6                | NEWLINE

    7 $@2: ε

    8 FunctionDeclStmt: FUNC ID '(' Type ')' $@2 Block

    9 StmtList: StmtList Stmt
   10         | ε

   11 Stmt: PrintStmt
   12     | DeclarationStmt
   13     | AssignmentStmt
   14     | Block

   15 $@3: ε

   16 Block: '{' $@3 StmtList '}'

   17 Expr: ID
   18     | INT_LIT
   19     | FLOAT_LIT
   20     | '"' STRING_LIT '"'
   21     | '"' '"'
   22     | TRUE
   23     | FALSE
   24     | '-' Expr
   25     | '!' Expr
   26     | '(' Expr ')'
   27     | Expr '*' Expr
   28     | Expr '/' Expr
   29     | Expr '%' Expr
   30     | Expr '+' Expr
   31     | Expr '-' Expr
   32     | Expr LAND Expr
   33     | Expr LOR Expr
   34     | Expr GEQ Expr
   35     | Expr LEQ Expr
   36     | Expr EQL Expr
   37     | Expr NEQ Expr
   38     | Expr '>' Expr
   39     | Expr '<' Expr
   40     | Expr AS Type

   41 PrintStmt: PrintType '(' Expr ')' ';'

   42 DeclarationStmt: LET MutType ID ':' Type '=' Expr ';'
   43                | LET MutType ID ':' Type ';'

   44 AssignmentStmt: ID AssignmentOperatorType Expr ';'

   45 Type: INT
   46     | FLOAT
   47     | BOOL
   48     | '&' STR
   49     | ε

   50 PrintType: PRINT
   51          | PRINTLN

   52 MutType: MUT
   53        | ε

   54 AssignmentOperatorType: '='
   55                       | ADD_ASSIGN
   56                       | SUB_ASSIGN
   57                       | MUL_ASSIGN
   58                       | DIV_ASSIGN
   59                       | REM_ASSIGN


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 25
    '"' (34) 20 21
    '%' (37) 29
    '&' (38) 48
    '(' (40) 8 26 41
    ')' (41) 8 26 41
    '*' (42) 27
    '+' (43) 30
    '-' (45) 24 31
    '/' (47) 28
    ':' (58) 42 43
    ';' (59) 41 42 43 44
    '<' (60) 39
    '=' (61) 42 54
    '>' (62) 38
    '{' (123) 16
    '}' (125) 16
    error (256)
    LET (258) 42 43
    MUT (259) 52
    NEWLINE (260) 6
    INT (261) 45
    FLOAT (262) 46
    BOOL (263) 47
    STR (264) 48
    TRUE (265) 22
    FALSE (266) 23
    GEQ (267) 34
    LEQ (268) 35
    EQL (269) 36
    NEQ (270) 37
    LOR (271) 33
    LAND (272) 32
    ADD_ASSIGN (273) 55
    SUB_ASSIGN (274) 56
    MUL_ASSIGN (275) 57
    DIV_ASSIGN (276) 58
    REM_ASSIGN (277) 59
    IF (278)
    ELSE (279)
    FOR (280)
    WHILE (281)
    LOOP (282)
    PRINT (283) 50
    PRINTLN (284) 51
    FUNC (285) 8
    RETURN (286)
    BREAK (287)
    ARROW (288)
    AS (289) 40
    IN (290)
    DOTDOT (291)
    RSHIFT (292)
    LSHIFT (293)
    INT_LIT <i_val> (294) 18
    FLOAT_LIT <f_val> (295) 19
    STRING_LIT <s_val> (296) 20
    ID <s_val> (297) 8 17 42 43 44
    UMINUS (298)


Nonterminals, with rules where they appear

    $accept (61)
        on left: 0
    Program (62)
        on left: 2
        on right: 0
    $@1 (63)
        on left: 1
        on right: 2
    GlobalStatementList (64)
        on left: 3 4
        on right: 2 3
    GlobalStatement (65)
        on left: 5 6
        on right: 3 4
    FunctionDeclStmt (66)
        on left: 8
        on right: 5
    $@2 (67)
        on left: 7
        on right: 8
    StmtList (68)
        on left: 9 10
        on right: 9 16
    Stmt (69)
        on left: 11 12 13 14
        on right: 9
    Block (70)
        on left: 16
        on right: 8 14
    $@3 (71)
        on left: 15
        on right: 16
    Expr <s_val> (72)
        on left: 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40
        on right: 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 44
    PrintStmt (73)
        on left: 41
        on right: 11
    DeclarationStmt (74)
        on left: 42 43
        on right: 12
    AssignmentStmt (75)
        on left: 44
        on right: 13
    Type <s_val> (76)
        on left: 45 46 47 48 49
        on right: 8 40 42 43
    PrintType <s_val> (77)
        on left: 50 51
        on right: 41
    MutType <i_val> (78)
        on left: 52 53
        on right: 42 43
    AssignmentOperatorType <s_val> (79)
        on left: 54 55 56 57 58 59
        on right: 44


State 0

    0 $accept: • Program $end

    $default  reduce using rule 1 ($@1)

    Program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: Program • $end

    $end  shift, and go to state 3


State 2

    2 Program: $@1 • GlobalStatementList

    NEWLINE  shift, and go to state 4
    FUNC     shift, and go to state 5

    GlobalStatementList  go to state 6
    GlobalStatement      go to state 7
    FunctionDeclStmt     go to state 8


State 3

    0 $accept: Program $end •

    $default  accept


State 4

    6 GlobalStatement: NEWLINE •

    $default  reduce using rule 6 (GlobalStatement)


State 5

    8 FunctionDeclStmt: FUNC • ID '(' Type ')' $@2 Block

    ID  shift, and go to state 9


State 6

    2 Program: $@1 GlobalStatementList •
    3 GlobalStatementList: GlobalStatementList • GlobalStatement

    NEWLINE  shift, and go to state 4
    FUNC     shift, and go to state 5

    $default  reduce using rule 2 (Program)

    GlobalStatement   go to state 10
    FunctionDeclStmt  go to state 8


State 7

    4 GlobalStatementList: GlobalStatement •

    $default  reduce using rule 4 (GlobalStatementList)


State 8

    5 GlobalStatement: FunctionDeclStmt •

    $default  reduce using rule 5 (GlobalStatement)


State 9

    8 FunctionDeclStmt: FUNC ID • '(' Type ')' $@2 Block

    '('  shift, and go to state 11


State 10

    3 GlobalStatementList: GlobalStatementList GlobalStatement •

    $default  reduce using rule 3 (GlobalStatementList)


State 11

    8 FunctionDeclStmt: FUNC ID '(' • Type ')' $@2 Block

    INT    shift, and go to state 12
    FLOAT  shift, and go to state 13
    BOOL   shift, and go to state 14
    '&'    shift, and go to state 15

    $default  reduce using rule 49 (Type)

    Type  go to state 16


State 12

   45 Type: INT •

    $default  reduce using rule 45 (Type)


State 13

   46 Type: FLOAT •

    $default  reduce using rule 46 (Type)


State 14

   47 Type: BOOL •

    $default  reduce using rule 47 (Type)


State 15

   48 Type: '&' • STR

    STR  shift, and go to state 17


State 16

    8 FunctionDeclStmt: FUNC ID '(' Type • ')' $@2 Block

    ')'  shift, and go to state 18


State 17

   48 Type: '&' STR •

    $default  reduce using rule 48 (Type)


State 18

    8 FunctionDeclStmt: FUNC ID '(' Type ')' • $@2 Block

    $default  reduce using rule 7 ($@2)

    $@2  go to state 19


State 19

    8 FunctionDeclStmt: FUNC ID '(' Type ')' $@2 • Block

    '{'  shift, and go to state 20

    Block  go to state 21


State 20

   16 Block: '{' • $@3 StmtList '}'

    $default  reduce using rule 15 ($@3)

    $@3  go to state 22


State 21

    8 FunctionDeclStmt: FUNC ID '(' Type ')' $@2 Block •

    $default  reduce using rule 8 (FunctionDeclStmt)


State 22

   16 Block: '{' $@3 • StmtList '}'

    $default  reduce using rule 10 (StmtList)

    StmtList  go to state 23


State 23

    9 StmtList: StmtList • Stmt
   16 Block: '{' $@3 StmtList • '}'

    LET      shift, and go to state 24
    PRINT    shift, and go to state 25
    PRINTLN  shift, and go to state 26
    ID       shift, and go to state 27
    '{'      shift, and go to state 20
    '}'      shift, and go to state 28

    Stmt             go to state 29
    Block            go to state 30
    PrintStmt        go to state 31
    DeclarationStmt  go to state 32
    AssignmentStmt   go to state 33
    PrintType        go to state 34


State 24

   42 DeclarationStmt: LET • MutType ID ':' Type '=' Expr ';'
   43                | LET • MutType ID ':' Type ';'

    MUT  shift, and go to state 35

    $default  reduce using rule 53 (MutType)

    MutType  go to state 36


State 25

   50 PrintType: PRINT •

    $default  reduce using rule 50 (PrintType)


State 26

   51 PrintType: PRINTLN •

    $default  reduce using rule 51 (PrintType)


State 27

   44 AssignmentStmt: ID • AssignmentOperatorType Expr ';'

    ADD_ASSIGN  shift, and go to state 37
    SUB_ASSIGN  shift, and go to state 38
    MUL_ASSIGN  shift, and go to state 39
    DIV_ASSIGN  shift, and go to state 40
    REM_ASSIGN  shift, and go to state 41
    '='         shift, and go to state 42

    AssignmentOperatorType  go to state 43


State 28

   16 Block: '{' $@3 StmtList '}' •

    $default  reduce using rule 16 (Block)


State 29

    9 StmtList: StmtList Stmt •

    $default  reduce using rule 9 (StmtList)


State 30

   14 Stmt: Block •

    $default  reduce using rule 14 (Stmt)


State 31

   11 Stmt: PrintStmt •

    $default  reduce using rule 11 (Stmt)


State 32

   12 Stmt: DeclarationStmt •

    $default  reduce using rule 12 (Stmt)


State 33

   13 Stmt: AssignmentStmt •

    $default  reduce using rule 13 (Stmt)


State 34

   41 PrintStmt: PrintType • '(' Expr ')' ';'

    '('  shift, and go to state 44


State 35

   52 MutType: MUT •

    $default  reduce using rule 52 (MutType)


State 36

   42 DeclarationStmt: LET MutType • ID ':' Type '=' Expr ';'
   43                | LET MutType • ID ':' Type ';'

    ID  shift, and go to state 45


State 37

   55 AssignmentOperatorType: ADD_ASSIGN •

    $default  reduce using rule 55 (AssignmentOperatorType)


State 38

   56 AssignmentOperatorType: SUB_ASSIGN •

    $default  reduce using rule 56 (AssignmentOperatorType)


State 39

   57 AssignmentOperatorType: MUL_ASSIGN •

    $default  reduce using rule 57 (AssignmentOperatorType)


State 40

   58 AssignmentOperatorType: DIV_ASSIGN •

    $default  reduce using rule 58 (AssignmentOperatorType)


State 41

   59 AssignmentOperatorType: REM_ASSIGN •

    $default  reduce using rule 59 (AssignmentOperatorType)


State 42

   54 AssignmentOperatorType: '=' •

    $default  reduce using rule 54 (AssignmentOperatorType)


State 43

   44 AssignmentStmt: ID AssignmentOperatorType • Expr ';'

    TRUE       shift, and go to state 46
    FALSE      shift, and go to state 47
    INT_LIT    shift, and go to state 48
    FLOAT_LIT  shift, and go to state 49
    ID         shift, and go to state 50
    '!'        shift, and go to state 51
    '-'        shift, and go to state 52
    '('        shift, and go to state 53
    '"'        shift, and go to state 54

    Expr  go to state 55


State 44

   41 PrintStmt: PrintType '(' • Expr ')' ';'

    TRUE       shift, and go to state 46
    FALSE      shift, and go to state 47
    INT_LIT    shift, and go to state 48
    FLOAT_LIT  shift, and go to state 49
    ID         shift, and go to state 50
    '!'        shift, and go to state 51
    '-'        shift, and go to state 52
    '('        shift, and go to state 53
    '"'        shift, and go to state 54

    Expr  go to state 56


State 45

   42 DeclarationStmt: LET MutType ID • ':' Type '=' Expr ';'
   43                | LET MutType ID • ':' Type ';'

    ':'  shift, and go to state 57


State 46

   22 Expr: TRUE •

    $default  reduce using rule 22 (Expr)


State 47

   23 Expr: FALSE •

    $default  reduce using rule 23 (Expr)


State 48

   18 Expr: INT_LIT •

    $default  reduce using rule 18 (Expr)


State 49

   19 Expr: FLOAT_LIT •

    $default  reduce using rule 19 (Expr)


State 50

   17 Expr: ID •

    $default  reduce using rule 17 (Expr)


State 51

   25 Expr: '!' • Expr

    TRUE       shift, and go to state 46
    FALSE      shift, and go to state 47
    INT_LIT    shift, and go to state 48
    FLOAT_LIT  shift, and go to state 49
    ID         shift, and go to state 50
    '!'        shift, and go to state 51
    '-'        shift, and go to state 52
    '('        shift, and go to state 53
    '"'        shift, and go to state 54

    Expr  go to state 58


State 52

   24 Expr: '-' • Expr

    TRUE       shift, and go to state 46
    FALSE      shift, and go to state 47
    INT_LIT    shift, and go to state 48
    FLOAT_LIT  shift, and go to state 49
    ID         shift, and go to state 50
    '!'        shift, and go to state 51
    '-'        shift, and go to state 52
    '('        shift, and go to state 53
    '"'        shift, and go to state 54

    Expr  go to state 59


State 53

   26 Expr: '(' • Expr ')'

    TRUE       shift, and go to state 46
    FALSE      shift, and go to state 47
    INT_LIT    shift, and go to state 48
    FLOAT_LIT  shift, and go to state 49
    ID         shift, and go to state 50
    '!'        shift, and go to state 51
    '-'        shift, and go to state 52
    '('        shift, and go to state 53
    '"'        shift, and go to state 54

    Expr  go to state 60


State 54

   20 Expr: '"' • STRING_LIT '"'
   21     | '"' • '"'

    STRING_LIT  shift, and go to state 61
    '"'         shift, and go to state 62


State 55

   27 Expr: Expr • '*' Expr
   28     | Expr • '/' Expr
   29     | Expr • '%' Expr
   30     | Expr • '+' Expr
   31     | Expr • '-' Expr
   32     | Expr • LAND Expr
   33     | Expr • LOR Expr
   34     | Expr • GEQ Expr
   35     | Expr • LEQ Expr
   36     | Expr • EQL Expr
   37     | Expr • NEQ Expr
   38     | Expr • '>' Expr
   39     | Expr • '<' Expr
   40     | Expr • AS Type
   44 AssignmentStmt: ID AssignmentOperatorType Expr • ';'

    GEQ   shift, and go to state 63
    LEQ   shift, and go to state 64
    EQL   shift, and go to state 65
    NEQ   shift, and go to state 66
    LOR   shift, and go to state 67
    LAND  shift, and go to state 68
    AS    shift, and go to state 69
    '>'   shift, and go to state 70
    '<'   shift, and go to state 71
    '+'   shift, and go to state 72
    '-'   shift, and go to state 73
    '*'   shift, and go to state 74
    '/'   shift, and go to state 75
    '%'   shift, and go to state 76
    ';'   shift, and go to state 77


State 56

   27 Expr: Expr • '*' Expr
   28     | Expr • '/' Expr
   29     | Expr • '%' Expr
   30     | Expr • '+' Expr
   31     | Expr • '-' Expr
   32     | Expr • LAND Expr
   33     | Expr • LOR Expr
   34     | Expr • GEQ Expr
   35     | Expr • LEQ Expr
   36     | Expr • EQL Expr
   37     | Expr • NEQ Expr
   38     | Expr • '>' Expr
   39     | Expr • '<' Expr
   40     | Expr • AS Type
   41 PrintStmt: PrintType '(' Expr • ')' ';'

    GEQ   shift, and go to state 63
    LEQ   shift, and go to state 64
    EQL   shift, and go to state 65
    NEQ   shift, and go to state 66
    LOR   shift, and go to state 67
    LAND  shift, and go to state 68
    AS    shift, and go to state 69
    '>'   shift, and go to state 70
    '<'   shift, and go to state 71
    '+'   shift, and go to state 72
    '-'   shift, and go to state 73
    '*'   shift, and go to state 74
    '/'   shift, and go to state 75
    '%'   shift, and go to state 76
    ')'   shift, and go to state 78


State 57

   42 DeclarationStmt: LET MutType ID ':' • Type '=' Expr ';'
   43                | LET MutType ID ':' • Type ';'

    INT    shift, and go to state 12
    FLOAT  shift, and go to state 13
    BOOL   shift, and go to state 14
    '&'    shift, and go to state 15

    $default  reduce using rule 49 (Type)

    Type  go to state 79


State 58

   25 Expr: '!' Expr •
   27     | Expr • '*' Expr
   28     | Expr • '/' Expr
   29     | Expr • '%' Expr
   30     | Expr • '+' Expr
   31     | Expr • '-' Expr
   32     | Expr • LAND Expr
   33     | Expr • LOR Expr
   34     | Expr • GEQ Expr
   35     | Expr • LEQ Expr
   36     | Expr • EQL Expr
   37     | Expr • NEQ Expr
   38     | Expr • '>' Expr
   39     | Expr • '<' Expr
   40     | Expr • AS Type

    GEQ  shift, and go to state 63
    LEQ  shift, and go to state 64
    EQL  shift, and go to state 65
    NEQ  shift, and go to state 66
    AS   shift, and go to state 69
    '>'  shift, and go to state 70
    '<'  shift, and go to state 71
    '+'  shift, and go to state 72
    '-'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '%'  shift, and go to state 76

    $default  reduce using rule 25 (Expr)


State 59

   24 Expr: '-' Expr •
   27     | Expr • '*' Expr
   28     | Expr • '/' Expr
   29     | Expr • '%' Expr
   30     | Expr • '+' Expr
   31     | Expr • '-' Expr
   32     | Expr • LAND Expr
   33     | Expr • LOR Expr
   34     | Expr • GEQ Expr
   35     | Expr • LEQ Expr
   36     | Expr • EQL Expr
   37     | Expr • NEQ Expr
   38     | Expr • '>' Expr
   39     | Expr • '<' Expr
   40     | Expr • AS Type

    AS  shift, and go to state 69

    $default  reduce using rule 24 (Expr)


State 60

   26 Expr: '(' Expr • ')'
   27     | Expr • '*' Expr
   28     | Expr • '/' Expr
   29     | Expr • '%' Expr
   30     | Expr • '+' Expr
   31     | Expr • '-' Expr
   32     | Expr • LAND Expr
   33     | Expr • LOR Expr
   34     | Expr • GEQ Expr
   35     | Expr • LEQ Expr
   36     | Expr • EQL Expr
   37     | Expr • NEQ Expr
   38     | Expr • '>' Expr
   39     | Expr • '<' Expr
   40     | Expr • AS Type

    GEQ   shift, and go to state 63
    LEQ   shift, and go to state 64
    EQL   shift, and go to state 65
    NEQ   shift, and go to state 66
    LOR   shift, and go to state 67
    LAND  shift, and go to state 68
    AS    shift, and go to state 69
    '>'   shift, and go to state 70
    '<'   shift, and go to state 71
    '+'   shift, and go to state 72
    '-'   shift, and go to state 73
    '*'   shift, and go to state 74
    '/'   shift, and go to state 75
    '%'   shift, and go to state 76
    ')'   shift, and go to state 80


State 61

   20 Expr: '"' STRING_LIT • '"'

    '"'  shift, and go to state 81


State 62

   21 Expr: '"' '"' •

    $default  reduce using rule 21 (Expr)


State 63

   34 Expr: Expr GEQ • Expr

    TRUE       shift, and go to state 46
    FALSE      shift, and go to state 47
    INT_LIT    shift, and go to state 48
    FLOAT_LIT  shift, and go to state 49
    ID         shift, and go to state 50
    '!'        shift, and go to state 51
    '-'        shift, and go to state 52
    '('        shift, and go to state 53
    '"'        shift, and go to state 54

    Expr  go to state 82


State 64

   35 Expr: Expr LEQ • Expr

    TRUE       shift, and go to state 46
    FALSE      shift, and go to state 47
    INT_LIT    shift, and go to state 48
    FLOAT_LIT  shift, and go to state 49
    ID         shift, and go to state 50
    '!'        shift, and go to state 51
    '-'        shift, and go to state 52
    '('        shift, and go to state 53
    '"'        shift, and go to state 54

    Expr  go to state 83


State 65

   36 Expr: Expr EQL • Expr

    TRUE       shift, and go to state 46
    FALSE      shift, and go to state 47
    INT_LIT    shift, and go to state 48
    FLOAT_LIT  shift, and go to state 49
    ID         shift, and go to state 50
    '!'        shift, and go to state 51
    '-'        shift, and go to state 52
    '('        shift, and go to state 53
    '"'        shift, and go to state 54

    Expr  go to state 84


State 66

   37 Expr: Expr NEQ • Expr

    TRUE       shift, and go to state 46
    FALSE      shift, and go to state 47
    INT_LIT    shift, and go to state 48
    FLOAT_LIT  shift, and go to state 49
    ID         shift, and go to state 50
    '!'        shift, and go to state 51
    '-'        shift, and go to state 52
    '('        shift, and go to state 53
    '"'        shift, and go to state 54

    Expr  go to state 85


State 67

   33 Expr: Expr LOR • Expr

    TRUE       shift, and go to state 46
    FALSE      shift, and go to state 47
    INT_LIT    shift, and go to state 48
    FLOAT_LIT  shift, and go to state 49
    ID         shift, and go to state 50
    '!'        shift, and go to state 51
    '-'        shift, and go to state 52
    '('        shift, and go to state 53
    '"'        shift, and go to state 54

    Expr  go to state 86


State 68

   32 Expr: Expr LAND • Expr

    TRUE       shift, and go to state 46
    FALSE      shift, and go to state 47
    INT_LIT    shift, and go to state 48
    FLOAT_LIT  shift, and go to state 49
    ID         shift, and go to state 50
    '!'        shift, and go to state 51
    '-'        shift, and go to state 52
    '('        shift, and go to state 53
    '"'        shift, and go to state 54

    Expr  go to state 87


State 69

   40 Expr: Expr AS • Type

    INT    shift, and go to state 12
    FLOAT  shift, and go to state 13
    BOOL   shift, and go to state 14
    '&'    shift, and go to state 15

    $default  reduce using rule 49 (Type)

    Type  go to state 88


State 70

   38 Expr: Expr '>' • Expr

    TRUE       shift, and go to state 46
    FALSE      shift, and go to state 47
    INT_LIT    shift, and go to state 48
    FLOAT_LIT  shift, and go to state 49
    ID         shift, and go to state 50
    '!'        shift, and go to state 51
    '-'        shift, and go to state 52
    '('        shift, and go to state 53
    '"'        shift, and go to state 54

    Expr  go to state 89


State 71

   39 Expr: Expr '<' • Expr

    TRUE       shift, and go to state 46
    FALSE      shift, and go to state 47
    INT_LIT    shift, and go to state 48
    FLOAT_LIT  shift, and go to state 49
    ID         shift, and go to state 50
    '!'        shift, and go to state 51
    '-'        shift, and go to state 52
    '('        shift, and go to state 53
    '"'        shift, and go to state 54

    Expr  go to state 90


State 72

   30 Expr: Expr '+' • Expr

    TRUE       shift, and go to state 46
    FALSE      shift, and go to state 47
    INT_LIT    shift, and go to state 48
    FLOAT_LIT  shift, and go to state 49
    ID         shift, and go to state 50
    '!'        shift, and go to state 51
    '-'        shift, and go to state 52
    '('        shift, and go to state 53
    '"'        shift, and go to state 54

    Expr  go to state 91


State 73

   31 Expr: Expr '-' • Expr

    TRUE       shift, and go to state 46
    FALSE      shift, and go to state 47
    INT_LIT    shift, and go to state 48
    FLOAT_LIT  shift, and go to state 49
    ID         shift, and go to state 50
    '!'        shift, and go to state 51
    '-'        shift, and go to state 52
    '('        shift, and go to state 53
    '"'        shift, and go to state 54

    Expr  go to state 92


State 74

   27 Expr: Expr '*' • Expr

    TRUE       shift, and go to state 46
    FALSE      shift, and go to state 47
    INT_LIT    shift, and go to state 48
    FLOAT_LIT  shift, and go to state 49
    ID         shift, and go to state 50
    '!'        shift, and go to state 51
    '-'        shift, and go to state 52
    '('        shift, and go to state 53
    '"'        shift, and go to state 54

    Expr  go to state 93


State 75

   28 Expr: Expr '/' • Expr

    TRUE       shift, and go to state 46
    FALSE      shift, and go to state 47
    INT_LIT    shift, and go to state 48
    FLOAT_LIT  shift, and go to state 49
    ID         shift, and go to state 50
    '!'        shift, and go to state 51
    '-'        shift, and go to state 52
    '('        shift, and go to state 53
    '"'        shift, and go to state 54

    Expr  go to state 94


State 76

   29 Expr: Expr '%' • Expr

    TRUE       shift, and go to state 46
    FALSE      shift, and go to state 47
    INT_LIT    shift, and go to state 48
    FLOAT_LIT  shift, and go to state 49
    ID         shift, and go to state 50
    '!'        shift, and go to state 51
    '-'        shift, and go to state 52
    '('        shift, and go to state 53
    '"'        shift, and go to state 54

    Expr  go to state 95


State 77

   44 AssignmentStmt: ID AssignmentOperatorType Expr ';' •

    $default  reduce using rule 44 (AssignmentStmt)


State 78

   41 PrintStmt: PrintType '(' Expr ')' • ';'

    ';'  shift, and go to state 96


State 79

   42 DeclarationStmt: LET MutType ID ':' Type • '=' Expr ';'
   43                | LET MutType ID ':' Type • ';'

    ';'  shift, and go to state 97
    '='  shift, and go to state 98


State 80

   26 Expr: '(' Expr ')' •

    $default  reduce using rule 26 (Expr)


State 81

   20 Expr: '"' STRING_LIT '"' •

    $default  reduce using rule 20 (Expr)


State 82

   27 Expr: Expr • '*' Expr
   28     | Expr • '/' Expr
   29     | Expr • '%' Expr
   30     | Expr • '+' Expr
   31     | Expr • '-' Expr
   32     | Expr • LAND Expr
   33     | Expr • LOR Expr
   34     | Expr • GEQ Expr
   34     | Expr GEQ Expr •
   35     | Expr • LEQ Expr
   36     | Expr • EQL Expr
   37     | Expr • NEQ Expr
   38     | Expr • '>' Expr
   39     | Expr • '<' Expr
   40     | Expr • AS Type

    AS   shift, and go to state 69
    '+'  shift, and go to state 72
    '-'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '%'  shift, and go to state 76

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    EQL  error (nonassociative)
    NEQ  error (nonassociative)
    '>'  error (nonassociative)
    '<'  error (nonassociative)

    $default  reduce using rule 34 (Expr)


State 83

   27 Expr: Expr • '*' Expr
   28     | Expr • '/' Expr
   29     | Expr • '%' Expr
   30     | Expr • '+' Expr
   31     | Expr • '-' Expr
   32     | Expr • LAND Expr
   33     | Expr • LOR Expr
   34     | Expr • GEQ Expr
   35     | Expr • LEQ Expr
   35     | Expr LEQ Expr •
   36     | Expr • EQL Expr
   37     | Expr • NEQ Expr
   38     | Expr • '>' Expr
   39     | Expr • '<' Expr
   40     | Expr • AS Type

    AS   shift, and go to state 69
    '+'  shift, and go to state 72
    '-'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '%'  shift, and go to state 76

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    EQL  error (nonassociative)
    NEQ  error (nonassociative)
    '>'  error (nonassociative)
    '<'  error (nonassociative)

    $default  reduce using rule 35 (Expr)


State 84

   27 Expr: Expr • '*' Expr
   28     | Expr • '/' Expr
   29     | Expr • '%' Expr
   30     | Expr • '+' Expr
   31     | Expr • '-' Expr
   32     | Expr • LAND Expr
   33     | Expr • LOR Expr
   34     | Expr • GEQ Expr
   35     | Expr • LEQ Expr
   36     | Expr • EQL Expr
   36     | Expr EQL Expr •
   37     | Expr • NEQ Expr
   38     | Expr • '>' Expr
   39     | Expr • '<' Expr
   40     | Expr • AS Type

    AS   shift, and go to state 69
    '+'  shift, and go to state 72
    '-'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '%'  shift, and go to state 76

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    EQL  error (nonassociative)
    NEQ  error (nonassociative)
    '>'  error (nonassociative)
    '<'  error (nonassociative)

    $default  reduce using rule 36 (Expr)


State 85

   27 Expr: Expr • '*' Expr
   28     | Expr • '/' Expr
   29     | Expr • '%' Expr
   30     | Expr • '+' Expr
   31     | Expr • '-' Expr
   32     | Expr • LAND Expr
   33     | Expr • LOR Expr
   34     | Expr • GEQ Expr
   35     | Expr • LEQ Expr
   36     | Expr • EQL Expr
   37     | Expr • NEQ Expr
   37     | Expr NEQ Expr •
   38     | Expr • '>' Expr
   39     | Expr • '<' Expr
   40     | Expr • AS Type

    AS   shift, and go to state 69
    '+'  shift, and go to state 72
    '-'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '%'  shift, and go to state 76

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    EQL  error (nonassociative)
    NEQ  error (nonassociative)
    '>'  error (nonassociative)
    '<'  error (nonassociative)

    $default  reduce using rule 37 (Expr)


State 86

   27 Expr: Expr • '*' Expr
   28     | Expr • '/' Expr
   29     | Expr • '%' Expr
   30     | Expr • '+' Expr
   31     | Expr • '-' Expr
   32     | Expr • LAND Expr
   33     | Expr • LOR Expr
   33     | Expr LOR Expr •
   34     | Expr • GEQ Expr
   35     | Expr • LEQ Expr
   36     | Expr • EQL Expr
   37     | Expr • NEQ Expr
   38     | Expr • '>' Expr
   39     | Expr • '<' Expr
   40     | Expr • AS Type

    GEQ   shift, and go to state 63
    LEQ   shift, and go to state 64
    EQL   shift, and go to state 65
    NEQ   shift, and go to state 66
    LAND  shift, and go to state 68
    AS    shift, and go to state 69
    '>'   shift, and go to state 70
    '<'   shift, and go to state 71
    '+'   shift, and go to state 72
    '-'   shift, and go to state 73
    '*'   shift, and go to state 74
    '/'   shift, and go to state 75
    '%'   shift, and go to state 76

    $default  reduce using rule 33 (Expr)


State 87

   27 Expr: Expr • '*' Expr
   28     | Expr • '/' Expr
   29     | Expr • '%' Expr
   30     | Expr • '+' Expr
   31     | Expr • '-' Expr
   32     | Expr • LAND Expr
   32     | Expr LAND Expr •
   33     | Expr • LOR Expr
   34     | Expr • GEQ Expr
   35     | Expr • LEQ Expr
   36     | Expr • EQL Expr
   37     | Expr • NEQ Expr
   38     | Expr • '>' Expr
   39     | Expr • '<' Expr
   40     | Expr • AS Type

    GEQ  shift, and go to state 63
    LEQ  shift, and go to state 64
    EQL  shift, and go to state 65
    NEQ  shift, and go to state 66
    AS   shift, and go to state 69
    '>'  shift, and go to state 70
    '<'  shift, and go to state 71
    '+'  shift, and go to state 72
    '-'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '%'  shift, and go to state 76

    $default  reduce using rule 32 (Expr)


State 88

   40 Expr: Expr AS Type •

    $default  reduce using rule 40 (Expr)


State 89

   27 Expr: Expr • '*' Expr
   28     | Expr • '/' Expr
   29     | Expr • '%' Expr
   30     | Expr • '+' Expr
   31     | Expr • '-' Expr
   32     | Expr • LAND Expr
   33     | Expr • LOR Expr
   34     | Expr • GEQ Expr
   35     | Expr • LEQ Expr
   36     | Expr • EQL Expr
   37     | Expr • NEQ Expr
   38     | Expr • '>' Expr
   38     | Expr '>' Expr •
   39     | Expr • '<' Expr
   40     | Expr • AS Type

    AS   shift, and go to state 69
    '+'  shift, and go to state 72
    '-'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '%'  shift, and go to state 76

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    EQL  error (nonassociative)
    NEQ  error (nonassociative)
    '>'  error (nonassociative)
    '<'  error (nonassociative)

    $default  reduce using rule 38 (Expr)


State 90

   27 Expr: Expr • '*' Expr
   28     | Expr • '/' Expr
   29     | Expr • '%' Expr
   30     | Expr • '+' Expr
   31     | Expr • '-' Expr
   32     | Expr • LAND Expr
   33     | Expr • LOR Expr
   34     | Expr • GEQ Expr
   35     | Expr • LEQ Expr
   36     | Expr • EQL Expr
   37     | Expr • NEQ Expr
   38     | Expr • '>' Expr
   39     | Expr • '<' Expr
   39     | Expr '<' Expr •
   40     | Expr • AS Type

    AS   shift, and go to state 69
    '+'  shift, and go to state 72
    '-'  shift, and go to state 73
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '%'  shift, and go to state 76

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    EQL  error (nonassociative)
    NEQ  error (nonassociative)
    '>'  error (nonassociative)
    '<'  error (nonassociative)

    $default  reduce using rule 39 (Expr)


State 91

   27 Expr: Expr • '*' Expr
   28     | Expr • '/' Expr
   29     | Expr • '%' Expr
   30     | Expr • '+' Expr
   30     | Expr '+' Expr •
   31     | Expr • '-' Expr
   32     | Expr • LAND Expr
   33     | Expr • LOR Expr
   34     | Expr • GEQ Expr
   35     | Expr • LEQ Expr
   36     | Expr • EQL Expr
   37     | Expr • NEQ Expr
   38     | Expr • '>' Expr
   39     | Expr • '<' Expr
   40     | Expr • AS Type

    AS   shift, and go to state 69
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '%'  shift, and go to state 76

    $default  reduce using rule 30 (Expr)


State 92

   27 Expr: Expr • '*' Expr
   28     | Expr • '/' Expr
   29     | Expr • '%' Expr
   30     | Expr • '+' Expr
   31     | Expr • '-' Expr
   31     | Expr '-' Expr •
   32     | Expr • LAND Expr
   33     | Expr • LOR Expr
   34     | Expr • GEQ Expr
   35     | Expr • LEQ Expr
   36     | Expr • EQL Expr
   37     | Expr • NEQ Expr
   38     | Expr • '>' Expr
   39     | Expr • '<' Expr
   40     | Expr • AS Type

    AS   shift, and go to state 69
    '*'  shift, and go to state 74
    '/'  shift, and go to state 75
    '%'  shift, and go to state 76

    $default  reduce using rule 31 (Expr)


State 93

   27 Expr: Expr • '*' Expr
   27     | Expr '*' Expr •
   28     | Expr • '/' Expr
   29     | Expr • '%' Expr
   30     | Expr • '+' Expr
   31     | Expr • '-' Expr
   32     | Expr • LAND Expr
   33     | Expr • LOR Expr
   34     | Expr • GEQ Expr
   35     | Expr • LEQ Expr
   36     | Expr • EQL Expr
   37     | Expr • NEQ Expr
   38     | Expr • '>' Expr
   39     | Expr • '<' Expr
   40     | Expr • AS Type

    AS  shift, and go to state 69

    $default  reduce using rule 27 (Expr)


State 94

   27 Expr: Expr • '*' Expr
   28     | Expr • '/' Expr
   28     | Expr '/' Expr •
   29     | Expr • '%' Expr
   30     | Expr • '+' Expr
   31     | Expr • '-' Expr
   32     | Expr • LAND Expr
   33     | Expr • LOR Expr
   34     | Expr • GEQ Expr
   35     | Expr • LEQ Expr
   36     | Expr • EQL Expr
   37     | Expr • NEQ Expr
   38     | Expr • '>' Expr
   39     | Expr • '<' Expr
   40     | Expr • AS Type

    AS  shift, and go to state 69

    $default  reduce using rule 28 (Expr)


State 95

   27 Expr: Expr • '*' Expr
   28     | Expr • '/' Expr
   29     | Expr • '%' Expr
   29     | Expr '%' Expr •
   30     | Expr • '+' Expr
   31     | Expr • '-' Expr
   32     | Expr • LAND Expr
   33     | Expr • LOR Expr
   34     | Expr • GEQ Expr
   35     | Expr • LEQ Expr
   36     | Expr • EQL Expr
   37     | Expr • NEQ Expr
   38     | Expr • '>' Expr
   39     | Expr • '<' Expr
   40     | Expr • AS Type

    AS  shift, and go to state 69

    $default  reduce using rule 29 (Expr)


State 96

   41 PrintStmt: PrintType '(' Expr ')' ';' •

    $default  reduce using rule 41 (PrintStmt)


State 97

   43 DeclarationStmt: LET MutType ID ':' Type ';' •

    $default  reduce using rule 43 (DeclarationStmt)


State 98

   42 DeclarationStmt: LET MutType ID ':' Type '=' • Expr ';'

    TRUE       shift, and go to state 46
    FALSE      shift, and go to state 47
    INT_LIT    shift, and go to state 48
    FLOAT_LIT  shift, and go to state 49
    ID         shift, and go to state 50
    '!'        shift, and go to state 51
    '-'        shift, and go to state 52
    '('        shift, and go to state 53
    '"'        shift, and go to state 54

    Expr  go to state 99


State 99

   27 Expr: Expr • '*' Expr
   28     | Expr • '/' Expr
   29     | Expr • '%' Expr
   30     | Expr • '+' Expr
   31     | Expr • '-' Expr
   32     | Expr • LAND Expr
   33     | Expr • LOR Expr
   34     | Expr • GEQ Expr
   35     | Expr • LEQ Expr
   36     | Expr • EQL Expr
   37     | Expr • NEQ Expr
   38     | Expr • '>' Expr
   39     | Expr • '<' Expr
   40     | Expr • AS Type
   42 DeclarationStmt: LET MutType ID ':' Type '=' Expr • ';'

    GEQ   shift, and go to state 63
    LEQ   shift, and go to state 64
    EQL   shift, and go to state 65
    NEQ   shift, and go to state 66
    LOR   shift, and go to state 67
    LAND  shift, and go to state 68
    AS    shift, and go to state 69
    '>'   shift, and go to state 70
    '<'   shift, and go to state 71
    '+'   shift, and go to state 72
    '-'   shift, and go to state 73
    '*'   shift, and go to state 74
    '/'   shift, and go to state 75
    '%'   shift, and go to state 76
    ';'   shift, and go to state 100


State 100

   42 DeclarationStmt: LET MutType ID ':' Type '=' Expr ';' •

    $default  reduce using rule 42 (DeclarationStmt)
