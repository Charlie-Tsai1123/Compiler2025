Terminals unused in grammar

    FOR
    LOOP
    RETURN
    BREAK
    ARROW
    IN
    DOTDOT


Grammar

    0 $accept: Program $end

    1 $@1: ε

    2 Program: $@1 GlobalStatementList

    3 GlobalStatementList: GlobalStatementList GlobalStatement
    4                    | GlobalStatement

    5 GlobalStatement: FunctionDeclStmt
    6                | NEWLINE

    7 $@2: ε

    8 FunctionDeclStmt: FUNC ID '(' Type ')' $@2 Block

    9 StmtList: StmtList Stmt
   10         | ε

   11 Stmt: PrintStmt
   12     | DeclarationStmt
   13     | AssignmentStmt
   14     | Block
   15     | IfStmt
   16     | WhileStmt

   17 $@3: ε

   18 Block: '{' $@3 StmtList '}'

   19 Expr: ID
   20     | INT_LIT
   21     | FLOAT_LIT
   22     | '"' STRING_LIT '"'
   23     | '"' '"'
   24     | TRUE
   25     | FALSE
   26     | '[' ArrayElements ']'
   27     | ID '[' INT_LIT ']'
   28     | '-' Expr
   29     | '!' Expr
   30     | '(' Expr ')'
   31     | Expr '*' Expr
   32     | Expr '/' Expr
   33     | Expr '%' Expr
   34     | Expr '+' Expr
   35     | Expr '-' Expr
   36     | Expr LSHIFT Expr
   37     | Expr RSHIFT Expr
   38     | Expr LAND Expr
   39     | Expr LOR Expr
   40     | Expr GEQ Expr
   41     | Expr LEQ Expr
   42     | Expr EQL Expr
   43     | Expr NEQ Expr
   44     | Expr '>' Expr
   45     | Expr '<' Expr
   46     | Expr AS Type

   47 ArrayElements: ArrayElements ',' Expr
   48              | Expr

   49 PrintStmt: PrintType '(' Expr ')' ';'

   50 DeclarationStmt: LET MutType ID ':' Type '=' Expr ';'
   51                | LET MutType ID ':' Type ';'
   52                | LET MutType ID '=' Expr ';'

   53 AssignmentStmt: ID AssignmentOperatorType Expr ';'

   54 IfStmt: IF Expr Block
   55       | IF Expr Block ELSE Block

   56 WhileStmt: WHILE Expr Block

   57 Type: INT
   58     | FLOAT
   59     | BOOL
   60     | '&' STR
   61     | '[' Type ';' Expr ']'
   62     | ε

   63 PrintType: PRINT
   64          | PRINTLN

   65 MutType: MUT
   66        | ε

   67 AssignmentOperatorType: '='
   68                       | ADD_ASSIGN
   69                       | SUB_ASSIGN
   70                       | MUL_ASSIGN
   71                       | DIV_ASSIGN
   72                       | REM_ASSIGN


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 29
    '"' (34) 22 23
    '%' (37) 33
    '&' (38) 60
    '(' (40) 8 30 49
    ')' (41) 8 30 49
    '*' (42) 31
    '+' (43) 34
    ',' (44) 47
    '-' (45) 28 35
    '/' (47) 32
    ':' (58) 50 51
    ';' (59) 49 50 51 52 53 61
    '<' (60) 45
    '=' (61) 50 52 67
    '>' (62) 44
    '[' (91) 26 27 61
    ']' (93) 26 27 61
    '{' (123) 18
    '}' (125) 18
    error (256)
    LET (258) 50 51 52
    MUT (259) 65
    NEWLINE (260) 6
    INT (261) 57
    FLOAT (262) 58
    BOOL (263) 59
    STR (264) 60
    TRUE (265) 24
    FALSE (266) 25
    GEQ (267) 40
    LEQ (268) 41
    EQL (269) 42
    NEQ (270) 43
    LOR (271) 39
    LAND (272) 38
    ADD_ASSIGN (273) 68
    SUB_ASSIGN (274) 69
    MUL_ASSIGN (275) 70
    DIV_ASSIGN (276) 71
    REM_ASSIGN (277) 72
    IF (278) 54 55
    ELSE (279) 55
    FOR (280)
    WHILE (281) 56
    LOOP (282)
    PRINT (283) 63
    PRINTLN (284) 64
    FUNC (285) 8
    RETURN (286)
    BREAK (287)
    ARROW (288)
    AS (289) 46
    IN (290)
    DOTDOT (291)
    RSHIFT (292) 37
    LSHIFT (293) 36
    INT_LIT <i_val> (294) 20 27
    FLOAT_LIT <f_val> (295) 21
    STRING_LIT <s_val> (296) 22
    ID <s_val> (297) 8 19 27 50 51 52 53
    IFX (298)
    UMINUS (299)


Nonterminals, with rules where they appear

    $accept (65)
        on left: 0
    Program (66)
        on left: 2
        on right: 0
    $@1 (67)
        on left: 1
        on right: 2
    GlobalStatementList (68)
        on left: 3 4
        on right: 2 3
    GlobalStatement (69)
        on left: 5 6
        on right: 3 4
    FunctionDeclStmt (70)
        on left: 8
        on right: 5
    $@2 (71)
        on left: 7
        on right: 8
    StmtList (72)
        on left: 9 10
        on right: 9 18
    Stmt (73)
        on left: 11 12 13 14 15 16
        on right: 9
    Block (74)
        on left: 18
        on right: 8 14 54 55 56
    $@3 (75)
        on left: 17
        on right: 18
    Expr <s_val> (76)
        on left: 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46
        on right: 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 52 53 54 55 56 61
    ArrayElements <s_val> (77)
        on left: 47 48
        on right: 26 47
    PrintStmt (78)
        on left: 49
        on right: 11
    DeclarationStmt (79)
        on left: 50 51 52
        on right: 12
    AssignmentStmt (80)
        on left: 53
        on right: 13
    IfStmt (81)
        on left: 54 55
        on right: 15
    WhileStmt (82)
        on left: 56
        on right: 16
    Type <s_val> (83)
        on left: 57 58 59 60 61 62
        on right: 8 46 50 51 61
    PrintType <s_val> (84)
        on left: 63 64
        on right: 49
    MutType <i_val> (85)
        on left: 65 66
        on right: 50 51 52
    AssignmentOperatorType <s_val> (86)
        on left: 67 68 69 70 71 72
        on right: 53


State 0

    0 $accept: • Program $end

    $default  reduce using rule 1 ($@1)

    Program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: Program • $end

    $end  shift, and go to state 3


State 2

    2 Program: $@1 • GlobalStatementList

    NEWLINE  shift, and go to state 4
    FUNC     shift, and go to state 5

    GlobalStatementList  go to state 6
    GlobalStatement      go to state 7
    FunctionDeclStmt     go to state 8


State 3

    0 $accept: Program $end •

    $default  accept


State 4

    6 GlobalStatement: NEWLINE •

    $default  reduce using rule 6 (GlobalStatement)


State 5

    8 FunctionDeclStmt: FUNC • ID '(' Type ')' $@2 Block

    ID  shift, and go to state 9


State 6

    2 Program: $@1 GlobalStatementList •
    3 GlobalStatementList: GlobalStatementList • GlobalStatement

    NEWLINE  shift, and go to state 4
    FUNC     shift, and go to state 5

    $default  reduce using rule 2 (Program)

    GlobalStatement   go to state 10
    FunctionDeclStmt  go to state 8


State 7

    4 GlobalStatementList: GlobalStatement •

    $default  reduce using rule 4 (GlobalStatementList)


State 8

    5 GlobalStatement: FunctionDeclStmt •

    $default  reduce using rule 5 (GlobalStatement)


State 9

    8 FunctionDeclStmt: FUNC ID • '(' Type ')' $@2 Block

    '('  shift, and go to state 11


State 10

    3 GlobalStatementList: GlobalStatementList GlobalStatement •

    $default  reduce using rule 3 (GlobalStatementList)


State 11

    8 FunctionDeclStmt: FUNC ID '(' • Type ')' $@2 Block

    INT    shift, and go to state 12
    FLOAT  shift, and go to state 13
    BOOL   shift, and go to state 14
    '['    shift, and go to state 15
    '&'    shift, and go to state 16

    $default  reduce using rule 62 (Type)

    Type  go to state 17


State 12

   57 Type: INT •

    $default  reduce using rule 57 (Type)


State 13

   58 Type: FLOAT •

    $default  reduce using rule 58 (Type)


State 14

   59 Type: BOOL •

    $default  reduce using rule 59 (Type)


State 15

   61 Type: '[' • Type ';' Expr ']'

    INT    shift, and go to state 12
    FLOAT  shift, and go to state 13
    BOOL   shift, and go to state 14
    '['    shift, and go to state 15
    '&'    shift, and go to state 16

    $default  reduce using rule 62 (Type)

    Type  go to state 18


State 16

   60 Type: '&' • STR

    STR  shift, and go to state 19


State 17

    8 FunctionDeclStmt: FUNC ID '(' Type • ')' $@2 Block

    ')'  shift, and go to state 20


State 18

   61 Type: '[' Type • ';' Expr ']'

    ';'  shift, and go to state 21


State 19

   60 Type: '&' STR •

    $default  reduce using rule 60 (Type)


State 20

    8 FunctionDeclStmt: FUNC ID '(' Type ')' • $@2 Block

    $default  reduce using rule 7 ($@2)

    $@2  go to state 22


State 21

   61 Type: '[' Type ';' • Expr ']'

    TRUE       shift, and go to state 23
    FALSE      shift, and go to state 24
    INT_LIT    shift, and go to state 25
    FLOAT_LIT  shift, and go to state 26
    ID         shift, and go to state 27
    '!'        shift, and go to state 28
    '-'        shift, and go to state 29
    '('        shift, and go to state 30
    '"'        shift, and go to state 31
    '['        shift, and go to state 32

    Expr  go to state 33


State 22

    8 FunctionDeclStmt: FUNC ID '(' Type ')' $@2 • Block

    '{'  shift, and go to state 34

    Block  go to state 35


State 23

   24 Expr: TRUE •

    $default  reduce using rule 24 (Expr)


State 24

   25 Expr: FALSE •

    $default  reduce using rule 25 (Expr)


State 25

   20 Expr: INT_LIT •

    $default  reduce using rule 20 (Expr)


State 26

   21 Expr: FLOAT_LIT •

    $default  reduce using rule 21 (Expr)


State 27

   19 Expr: ID •
   27     | ID • '[' INT_LIT ']'

    '['  shift, and go to state 36

    $default  reduce using rule 19 (Expr)


State 28

   29 Expr: '!' • Expr

    TRUE       shift, and go to state 23
    FALSE      shift, and go to state 24
    INT_LIT    shift, and go to state 25
    FLOAT_LIT  shift, and go to state 26
    ID         shift, and go to state 27
    '!'        shift, and go to state 28
    '-'        shift, and go to state 29
    '('        shift, and go to state 30
    '"'        shift, and go to state 31
    '['        shift, and go to state 32

    Expr  go to state 37


State 29

   28 Expr: '-' • Expr

    TRUE       shift, and go to state 23
    FALSE      shift, and go to state 24
    INT_LIT    shift, and go to state 25
    FLOAT_LIT  shift, and go to state 26
    ID         shift, and go to state 27
    '!'        shift, and go to state 28
    '-'        shift, and go to state 29
    '('        shift, and go to state 30
    '"'        shift, and go to state 31
    '['        shift, and go to state 32

    Expr  go to state 38


State 30

   30 Expr: '(' • Expr ')'

    TRUE       shift, and go to state 23
    FALSE      shift, and go to state 24
    INT_LIT    shift, and go to state 25
    FLOAT_LIT  shift, and go to state 26
    ID         shift, and go to state 27
    '!'        shift, and go to state 28
    '-'        shift, and go to state 29
    '('        shift, and go to state 30
    '"'        shift, and go to state 31
    '['        shift, and go to state 32

    Expr  go to state 39


State 31

   22 Expr: '"' • STRING_LIT '"'
   23     | '"' • '"'

    STRING_LIT  shift, and go to state 40
    '"'         shift, and go to state 41


State 32

   26 Expr: '[' • ArrayElements ']'

    TRUE       shift, and go to state 23
    FALSE      shift, and go to state 24
    INT_LIT    shift, and go to state 25
    FLOAT_LIT  shift, and go to state 26
    ID         shift, and go to state 27
    '!'        shift, and go to state 28
    '-'        shift, and go to state 29
    '('        shift, and go to state 30
    '"'        shift, and go to state 31
    '['        shift, and go to state 32

    Expr           go to state 42
    ArrayElements  go to state 43


State 33

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type
   61 Type: '[' Type ';' Expr • ']'

    GEQ     shift, and go to state 44
    LEQ     shift, and go to state 45
    EQL     shift, and go to state 46
    NEQ     shift, and go to state 47
    LOR     shift, and go to state 48
    LAND    shift, and go to state 49
    AS      shift, and go to state 50
    RSHIFT  shift, and go to state 51
    LSHIFT  shift, and go to state 52
    '>'     shift, and go to state 53
    '<'     shift, and go to state 54
    '+'     shift, and go to state 55
    '-'     shift, and go to state 56
    '*'     shift, and go to state 57
    '/'     shift, and go to state 58
    '%'     shift, and go to state 59
    ']'     shift, and go to state 60


State 34

   18 Block: '{' • $@3 StmtList '}'

    $default  reduce using rule 17 ($@3)

    $@3  go to state 61


State 35

    8 FunctionDeclStmt: FUNC ID '(' Type ')' $@2 Block •

    $default  reduce using rule 8 (FunctionDeclStmt)


State 36

   27 Expr: ID '[' • INT_LIT ']'

    INT_LIT  shift, and go to state 62


State 37

   29 Expr: '!' Expr •
   31     | Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type

    GEQ     shift, and go to state 44
    LEQ     shift, and go to state 45
    EQL     shift, and go to state 46
    NEQ     shift, and go to state 47
    AS      shift, and go to state 50
    RSHIFT  shift, and go to state 51
    LSHIFT  shift, and go to state 52
    '>'     shift, and go to state 53
    '<'     shift, and go to state 54
    '+'     shift, and go to state 55
    '-'     shift, and go to state 56
    '*'     shift, and go to state 57
    '/'     shift, and go to state 58
    '%'     shift, and go to state 59

    $default  reduce using rule 29 (Expr)


State 38

   28 Expr: '-' Expr •
   31     | Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type

    AS  shift, and go to state 50

    $default  reduce using rule 28 (Expr)


State 39

   30 Expr: '(' Expr • ')'
   31     | Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type

    GEQ     shift, and go to state 44
    LEQ     shift, and go to state 45
    EQL     shift, and go to state 46
    NEQ     shift, and go to state 47
    LOR     shift, and go to state 48
    LAND    shift, and go to state 49
    AS      shift, and go to state 50
    RSHIFT  shift, and go to state 51
    LSHIFT  shift, and go to state 52
    '>'     shift, and go to state 53
    '<'     shift, and go to state 54
    '+'     shift, and go to state 55
    '-'     shift, and go to state 56
    '*'     shift, and go to state 57
    '/'     shift, and go to state 58
    '%'     shift, and go to state 59
    ')'     shift, and go to state 63


State 40

   22 Expr: '"' STRING_LIT • '"'

    '"'  shift, and go to state 64


State 41

   23 Expr: '"' '"' •

    $default  reduce using rule 23 (Expr)


State 42

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type
   48 ArrayElements: Expr •

    GEQ     shift, and go to state 44
    LEQ     shift, and go to state 45
    EQL     shift, and go to state 46
    NEQ     shift, and go to state 47
    LOR     shift, and go to state 48
    LAND    shift, and go to state 49
    AS      shift, and go to state 50
    RSHIFT  shift, and go to state 51
    LSHIFT  shift, and go to state 52
    '>'     shift, and go to state 53
    '<'     shift, and go to state 54
    '+'     shift, and go to state 55
    '-'     shift, and go to state 56
    '*'     shift, and go to state 57
    '/'     shift, and go to state 58
    '%'     shift, and go to state 59

    $default  reduce using rule 48 (ArrayElements)


State 43

   26 Expr: '[' ArrayElements • ']'
   47 ArrayElements: ArrayElements • ',' Expr

    ']'  shift, and go to state 65
    ','  shift, and go to state 66


State 44

   40 Expr: Expr GEQ • Expr

    TRUE       shift, and go to state 23
    FALSE      shift, and go to state 24
    INT_LIT    shift, and go to state 25
    FLOAT_LIT  shift, and go to state 26
    ID         shift, and go to state 27
    '!'        shift, and go to state 28
    '-'        shift, and go to state 29
    '('        shift, and go to state 30
    '"'        shift, and go to state 31
    '['        shift, and go to state 32

    Expr  go to state 67


State 45

   41 Expr: Expr LEQ • Expr

    TRUE       shift, and go to state 23
    FALSE      shift, and go to state 24
    INT_LIT    shift, and go to state 25
    FLOAT_LIT  shift, and go to state 26
    ID         shift, and go to state 27
    '!'        shift, and go to state 28
    '-'        shift, and go to state 29
    '('        shift, and go to state 30
    '"'        shift, and go to state 31
    '['        shift, and go to state 32

    Expr  go to state 68


State 46

   42 Expr: Expr EQL • Expr

    TRUE       shift, and go to state 23
    FALSE      shift, and go to state 24
    INT_LIT    shift, and go to state 25
    FLOAT_LIT  shift, and go to state 26
    ID         shift, and go to state 27
    '!'        shift, and go to state 28
    '-'        shift, and go to state 29
    '('        shift, and go to state 30
    '"'        shift, and go to state 31
    '['        shift, and go to state 32

    Expr  go to state 69


State 47

   43 Expr: Expr NEQ • Expr

    TRUE       shift, and go to state 23
    FALSE      shift, and go to state 24
    INT_LIT    shift, and go to state 25
    FLOAT_LIT  shift, and go to state 26
    ID         shift, and go to state 27
    '!'        shift, and go to state 28
    '-'        shift, and go to state 29
    '('        shift, and go to state 30
    '"'        shift, and go to state 31
    '['        shift, and go to state 32

    Expr  go to state 70


State 48

   39 Expr: Expr LOR • Expr

    TRUE       shift, and go to state 23
    FALSE      shift, and go to state 24
    INT_LIT    shift, and go to state 25
    FLOAT_LIT  shift, and go to state 26
    ID         shift, and go to state 27
    '!'        shift, and go to state 28
    '-'        shift, and go to state 29
    '('        shift, and go to state 30
    '"'        shift, and go to state 31
    '['        shift, and go to state 32

    Expr  go to state 71


State 49

   38 Expr: Expr LAND • Expr

    TRUE       shift, and go to state 23
    FALSE      shift, and go to state 24
    INT_LIT    shift, and go to state 25
    FLOAT_LIT  shift, and go to state 26
    ID         shift, and go to state 27
    '!'        shift, and go to state 28
    '-'        shift, and go to state 29
    '('        shift, and go to state 30
    '"'        shift, and go to state 31
    '['        shift, and go to state 32

    Expr  go to state 72


State 50

   46 Expr: Expr AS • Type

    INT    shift, and go to state 12
    FLOAT  shift, and go to state 13
    BOOL   shift, and go to state 14
    '['    shift, and go to state 15
    '&'    shift, and go to state 16

    $default  reduce using rule 62 (Type)

    Type  go to state 73


State 51

   37 Expr: Expr RSHIFT • Expr

    TRUE       shift, and go to state 23
    FALSE      shift, and go to state 24
    INT_LIT    shift, and go to state 25
    FLOAT_LIT  shift, and go to state 26
    ID         shift, and go to state 27
    '!'        shift, and go to state 28
    '-'        shift, and go to state 29
    '('        shift, and go to state 30
    '"'        shift, and go to state 31
    '['        shift, and go to state 32

    Expr  go to state 74


State 52

   36 Expr: Expr LSHIFT • Expr

    TRUE       shift, and go to state 23
    FALSE      shift, and go to state 24
    INT_LIT    shift, and go to state 25
    FLOAT_LIT  shift, and go to state 26
    ID         shift, and go to state 27
    '!'        shift, and go to state 28
    '-'        shift, and go to state 29
    '('        shift, and go to state 30
    '"'        shift, and go to state 31
    '['        shift, and go to state 32

    Expr  go to state 75


State 53

   44 Expr: Expr '>' • Expr

    TRUE       shift, and go to state 23
    FALSE      shift, and go to state 24
    INT_LIT    shift, and go to state 25
    FLOAT_LIT  shift, and go to state 26
    ID         shift, and go to state 27
    '!'        shift, and go to state 28
    '-'        shift, and go to state 29
    '('        shift, and go to state 30
    '"'        shift, and go to state 31
    '['        shift, and go to state 32

    Expr  go to state 76


State 54

   45 Expr: Expr '<' • Expr

    TRUE       shift, and go to state 23
    FALSE      shift, and go to state 24
    INT_LIT    shift, and go to state 25
    FLOAT_LIT  shift, and go to state 26
    ID         shift, and go to state 27
    '!'        shift, and go to state 28
    '-'        shift, and go to state 29
    '('        shift, and go to state 30
    '"'        shift, and go to state 31
    '['        shift, and go to state 32

    Expr  go to state 77


State 55

   34 Expr: Expr '+' • Expr

    TRUE       shift, and go to state 23
    FALSE      shift, and go to state 24
    INT_LIT    shift, and go to state 25
    FLOAT_LIT  shift, and go to state 26
    ID         shift, and go to state 27
    '!'        shift, and go to state 28
    '-'        shift, and go to state 29
    '('        shift, and go to state 30
    '"'        shift, and go to state 31
    '['        shift, and go to state 32

    Expr  go to state 78


State 56

   35 Expr: Expr '-' • Expr

    TRUE       shift, and go to state 23
    FALSE      shift, and go to state 24
    INT_LIT    shift, and go to state 25
    FLOAT_LIT  shift, and go to state 26
    ID         shift, and go to state 27
    '!'        shift, and go to state 28
    '-'        shift, and go to state 29
    '('        shift, and go to state 30
    '"'        shift, and go to state 31
    '['        shift, and go to state 32

    Expr  go to state 79


State 57

   31 Expr: Expr '*' • Expr

    TRUE       shift, and go to state 23
    FALSE      shift, and go to state 24
    INT_LIT    shift, and go to state 25
    FLOAT_LIT  shift, and go to state 26
    ID         shift, and go to state 27
    '!'        shift, and go to state 28
    '-'        shift, and go to state 29
    '('        shift, and go to state 30
    '"'        shift, and go to state 31
    '['        shift, and go to state 32

    Expr  go to state 80


State 58

   32 Expr: Expr '/' • Expr

    TRUE       shift, and go to state 23
    FALSE      shift, and go to state 24
    INT_LIT    shift, and go to state 25
    FLOAT_LIT  shift, and go to state 26
    ID         shift, and go to state 27
    '!'        shift, and go to state 28
    '-'        shift, and go to state 29
    '('        shift, and go to state 30
    '"'        shift, and go to state 31
    '['        shift, and go to state 32

    Expr  go to state 81


State 59

   33 Expr: Expr '%' • Expr

    TRUE       shift, and go to state 23
    FALSE      shift, and go to state 24
    INT_LIT    shift, and go to state 25
    FLOAT_LIT  shift, and go to state 26
    ID         shift, and go to state 27
    '!'        shift, and go to state 28
    '-'        shift, and go to state 29
    '('        shift, and go to state 30
    '"'        shift, and go to state 31
    '['        shift, and go to state 32

    Expr  go to state 82


State 60

   61 Type: '[' Type ';' Expr ']' •

    $default  reduce using rule 61 (Type)


State 61

   18 Block: '{' $@3 • StmtList '}'

    $default  reduce using rule 10 (StmtList)

    StmtList  go to state 83


State 62

   27 Expr: ID '[' INT_LIT • ']'

    ']'  shift, and go to state 84


State 63

   30 Expr: '(' Expr ')' •

    $default  reduce using rule 30 (Expr)


State 64

   22 Expr: '"' STRING_LIT '"' •

    $default  reduce using rule 22 (Expr)


State 65

   26 Expr: '[' ArrayElements ']' •

    $default  reduce using rule 26 (Expr)


State 66

   47 ArrayElements: ArrayElements ',' • Expr

    TRUE       shift, and go to state 23
    FALSE      shift, and go to state 24
    INT_LIT    shift, and go to state 25
    FLOAT_LIT  shift, and go to state 26
    ID         shift, and go to state 27
    '!'        shift, and go to state 28
    '-'        shift, and go to state 29
    '('        shift, and go to state 30
    '"'        shift, and go to state 31
    '['        shift, and go to state 32

    Expr  go to state 85


State 67

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   40     | Expr GEQ Expr •
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type

    AS      shift, and go to state 50
    RSHIFT  shift, and go to state 51
    LSHIFT  shift, and go to state 52
    '+'     shift, and go to state 55
    '-'     shift, and go to state 56
    '*'     shift, and go to state 57
    '/'     shift, and go to state 58
    '%'     shift, and go to state 59

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    EQL  error (nonassociative)
    NEQ  error (nonassociative)
    '>'  error (nonassociative)
    '<'  error (nonassociative)

    $default  reduce using rule 40 (Expr)


State 68

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   41     | Expr LEQ Expr •
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type

    AS      shift, and go to state 50
    RSHIFT  shift, and go to state 51
    LSHIFT  shift, and go to state 52
    '+'     shift, and go to state 55
    '-'     shift, and go to state 56
    '*'     shift, and go to state 57
    '/'     shift, and go to state 58
    '%'     shift, and go to state 59

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    EQL  error (nonassociative)
    NEQ  error (nonassociative)
    '>'  error (nonassociative)
    '<'  error (nonassociative)

    $default  reduce using rule 41 (Expr)


State 69

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   42     | Expr EQL Expr •
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type

    AS      shift, and go to state 50
    RSHIFT  shift, and go to state 51
    LSHIFT  shift, and go to state 52
    '+'     shift, and go to state 55
    '-'     shift, and go to state 56
    '*'     shift, and go to state 57
    '/'     shift, and go to state 58
    '%'     shift, and go to state 59

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    EQL  error (nonassociative)
    NEQ  error (nonassociative)
    '>'  error (nonassociative)
    '<'  error (nonassociative)

    $default  reduce using rule 42 (Expr)


State 70

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   43     | Expr NEQ Expr •
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type

    AS      shift, and go to state 50
    RSHIFT  shift, and go to state 51
    LSHIFT  shift, and go to state 52
    '+'     shift, and go to state 55
    '-'     shift, and go to state 56
    '*'     shift, and go to state 57
    '/'     shift, and go to state 58
    '%'     shift, and go to state 59

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    EQL  error (nonassociative)
    NEQ  error (nonassociative)
    '>'  error (nonassociative)
    '<'  error (nonassociative)

    $default  reduce using rule 43 (Expr)


State 71

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   39     | Expr LOR Expr •
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type

    GEQ     shift, and go to state 44
    LEQ     shift, and go to state 45
    EQL     shift, and go to state 46
    NEQ     shift, and go to state 47
    LAND    shift, and go to state 49
    AS      shift, and go to state 50
    RSHIFT  shift, and go to state 51
    LSHIFT  shift, and go to state 52
    '>'     shift, and go to state 53
    '<'     shift, and go to state 54
    '+'     shift, and go to state 55
    '-'     shift, and go to state 56
    '*'     shift, and go to state 57
    '/'     shift, and go to state 58
    '%'     shift, and go to state 59

    $default  reduce using rule 39 (Expr)


State 72

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   38     | Expr LAND Expr •
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type

    GEQ     shift, and go to state 44
    LEQ     shift, and go to state 45
    EQL     shift, and go to state 46
    NEQ     shift, and go to state 47
    AS      shift, and go to state 50
    RSHIFT  shift, and go to state 51
    LSHIFT  shift, and go to state 52
    '>'     shift, and go to state 53
    '<'     shift, and go to state 54
    '+'     shift, and go to state 55
    '-'     shift, and go to state 56
    '*'     shift, and go to state 57
    '/'     shift, and go to state 58
    '%'     shift, and go to state 59

    $default  reduce using rule 38 (Expr)


State 73

   46 Expr: Expr AS Type •

    $default  reduce using rule 46 (Expr)


State 74

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   37     | Expr RSHIFT Expr •
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type

    AS   shift, and go to state 50
    '+'  shift, and go to state 55
    '-'  shift, and go to state 56
    '*'  shift, and go to state 57
    '/'  shift, and go to state 58
    '%'  shift, and go to state 59

    $default  reduce using rule 37 (Expr)


State 75

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   36     | Expr LSHIFT Expr •
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type

    AS   shift, and go to state 50
    '+'  shift, and go to state 55
    '-'  shift, and go to state 56
    '*'  shift, and go to state 57
    '/'  shift, and go to state 58
    '%'  shift, and go to state 59

    $default  reduce using rule 36 (Expr)


State 76

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   44     | Expr '>' Expr •
   45     | Expr • '<' Expr
   46     | Expr • AS Type

    AS      shift, and go to state 50
    RSHIFT  shift, and go to state 51
    LSHIFT  shift, and go to state 52
    '+'     shift, and go to state 55
    '-'     shift, and go to state 56
    '*'     shift, and go to state 57
    '/'     shift, and go to state 58
    '%'     shift, and go to state 59

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    EQL  error (nonassociative)
    NEQ  error (nonassociative)
    '>'  error (nonassociative)
    '<'  error (nonassociative)

    $default  reduce using rule 44 (Expr)


State 77

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   45     | Expr '<' Expr •
   46     | Expr • AS Type

    AS      shift, and go to state 50
    RSHIFT  shift, and go to state 51
    LSHIFT  shift, and go to state 52
    '+'     shift, and go to state 55
    '-'     shift, and go to state 56
    '*'     shift, and go to state 57
    '/'     shift, and go to state 58
    '%'     shift, and go to state 59

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    EQL  error (nonassociative)
    NEQ  error (nonassociative)
    '>'  error (nonassociative)
    '<'  error (nonassociative)

    $default  reduce using rule 45 (Expr)


State 78

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   34     | Expr '+' Expr •
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type

    AS   shift, and go to state 50
    '*'  shift, and go to state 57
    '/'  shift, and go to state 58
    '%'  shift, and go to state 59

    $default  reduce using rule 34 (Expr)


State 79

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   35     | Expr '-' Expr •
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type

    AS   shift, and go to state 50
    '*'  shift, and go to state 57
    '/'  shift, and go to state 58
    '%'  shift, and go to state 59

    $default  reduce using rule 35 (Expr)


State 80

   31 Expr: Expr • '*' Expr
   31     | Expr '*' Expr •
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type

    AS  shift, and go to state 50

    $default  reduce using rule 31 (Expr)


State 81

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   32     | Expr '/' Expr •
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type

    AS  shift, and go to state 50

    $default  reduce using rule 32 (Expr)


State 82

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   33     | Expr '%' Expr •
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type

    AS  shift, and go to state 50

    $default  reduce using rule 33 (Expr)


State 83

    9 StmtList: StmtList • Stmt
   18 Block: '{' $@3 StmtList • '}'

    LET      shift, and go to state 86
    IF       shift, and go to state 87
    WHILE    shift, and go to state 88
    PRINT    shift, and go to state 89
    PRINTLN  shift, and go to state 90
    ID       shift, and go to state 91
    '{'      shift, and go to state 34
    '}'      shift, and go to state 92

    Stmt             go to state 93
    Block            go to state 94
    PrintStmt        go to state 95
    DeclarationStmt  go to state 96
    AssignmentStmt   go to state 97
    IfStmt           go to state 98
    WhileStmt        go to state 99
    PrintType        go to state 100


State 84

   27 Expr: ID '[' INT_LIT ']' •

    $default  reduce using rule 27 (Expr)


State 85

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type
   47 ArrayElements: ArrayElements ',' Expr •

    GEQ     shift, and go to state 44
    LEQ     shift, and go to state 45
    EQL     shift, and go to state 46
    NEQ     shift, and go to state 47
    LOR     shift, and go to state 48
    LAND    shift, and go to state 49
    AS      shift, and go to state 50
    RSHIFT  shift, and go to state 51
    LSHIFT  shift, and go to state 52
    '>'     shift, and go to state 53
    '<'     shift, and go to state 54
    '+'     shift, and go to state 55
    '-'     shift, and go to state 56
    '*'     shift, and go to state 57
    '/'     shift, and go to state 58
    '%'     shift, and go to state 59

    $default  reduce using rule 47 (ArrayElements)


State 86

   50 DeclarationStmt: LET • MutType ID ':' Type '=' Expr ';'
   51                | LET • MutType ID ':' Type ';'
   52                | LET • MutType ID '=' Expr ';'

    MUT  shift, and go to state 101

    $default  reduce using rule 66 (MutType)

    MutType  go to state 102


State 87

   54 IfStmt: IF • Expr Block
   55       | IF • Expr Block ELSE Block

    TRUE       shift, and go to state 23
    FALSE      shift, and go to state 24
    INT_LIT    shift, and go to state 25
    FLOAT_LIT  shift, and go to state 26
    ID         shift, and go to state 27
    '!'        shift, and go to state 28
    '-'        shift, and go to state 29
    '('        shift, and go to state 30
    '"'        shift, and go to state 31
    '['        shift, and go to state 32

    Expr  go to state 103


State 88

   56 WhileStmt: WHILE • Expr Block

    TRUE       shift, and go to state 23
    FALSE      shift, and go to state 24
    INT_LIT    shift, and go to state 25
    FLOAT_LIT  shift, and go to state 26
    ID         shift, and go to state 27
    '!'        shift, and go to state 28
    '-'        shift, and go to state 29
    '('        shift, and go to state 30
    '"'        shift, and go to state 31
    '['        shift, and go to state 32

    Expr  go to state 104


State 89

   63 PrintType: PRINT •

    $default  reduce using rule 63 (PrintType)


State 90

   64 PrintType: PRINTLN •

    $default  reduce using rule 64 (PrintType)


State 91

   53 AssignmentStmt: ID • AssignmentOperatorType Expr ';'

    ADD_ASSIGN  shift, and go to state 105
    SUB_ASSIGN  shift, and go to state 106
    MUL_ASSIGN  shift, and go to state 107
    DIV_ASSIGN  shift, and go to state 108
    REM_ASSIGN  shift, and go to state 109
    '='         shift, and go to state 110

    AssignmentOperatorType  go to state 111


State 92

   18 Block: '{' $@3 StmtList '}' •

    $default  reduce using rule 18 (Block)


State 93

    9 StmtList: StmtList Stmt •

    $default  reduce using rule 9 (StmtList)


State 94

   14 Stmt: Block •

    $default  reduce using rule 14 (Stmt)


State 95

   11 Stmt: PrintStmt •

    $default  reduce using rule 11 (Stmt)


State 96

   12 Stmt: DeclarationStmt •

    $default  reduce using rule 12 (Stmt)


State 97

   13 Stmt: AssignmentStmt •

    $default  reduce using rule 13 (Stmt)


State 98

   15 Stmt: IfStmt •

    $default  reduce using rule 15 (Stmt)


State 99

   16 Stmt: WhileStmt •

    $default  reduce using rule 16 (Stmt)


State 100

   49 PrintStmt: PrintType • '(' Expr ')' ';'

    '('  shift, and go to state 112


State 101

   65 MutType: MUT •

    $default  reduce using rule 65 (MutType)


State 102

   50 DeclarationStmt: LET MutType • ID ':' Type '=' Expr ';'
   51                | LET MutType • ID ':' Type ';'
   52                | LET MutType • ID '=' Expr ';'

    ID  shift, and go to state 113


State 103

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type
   54 IfStmt: IF Expr • Block
   55       | IF Expr • Block ELSE Block

    GEQ     shift, and go to state 44
    LEQ     shift, and go to state 45
    EQL     shift, and go to state 46
    NEQ     shift, and go to state 47
    LOR     shift, and go to state 48
    LAND    shift, and go to state 49
    AS      shift, and go to state 50
    RSHIFT  shift, and go to state 51
    LSHIFT  shift, and go to state 52
    '>'     shift, and go to state 53
    '<'     shift, and go to state 54
    '+'     shift, and go to state 55
    '-'     shift, and go to state 56
    '*'     shift, and go to state 57
    '/'     shift, and go to state 58
    '%'     shift, and go to state 59
    '{'     shift, and go to state 34

    Block  go to state 114


State 104

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type
   56 WhileStmt: WHILE Expr • Block

    GEQ     shift, and go to state 44
    LEQ     shift, and go to state 45
    EQL     shift, and go to state 46
    NEQ     shift, and go to state 47
    LOR     shift, and go to state 48
    LAND    shift, and go to state 49
    AS      shift, and go to state 50
    RSHIFT  shift, and go to state 51
    LSHIFT  shift, and go to state 52
    '>'     shift, and go to state 53
    '<'     shift, and go to state 54
    '+'     shift, and go to state 55
    '-'     shift, and go to state 56
    '*'     shift, and go to state 57
    '/'     shift, and go to state 58
    '%'     shift, and go to state 59
    '{'     shift, and go to state 34

    Block  go to state 115


State 105

   68 AssignmentOperatorType: ADD_ASSIGN •

    $default  reduce using rule 68 (AssignmentOperatorType)


State 106

   69 AssignmentOperatorType: SUB_ASSIGN •

    $default  reduce using rule 69 (AssignmentOperatorType)


State 107

   70 AssignmentOperatorType: MUL_ASSIGN •

    $default  reduce using rule 70 (AssignmentOperatorType)


State 108

   71 AssignmentOperatorType: DIV_ASSIGN •

    $default  reduce using rule 71 (AssignmentOperatorType)


State 109

   72 AssignmentOperatorType: REM_ASSIGN •

    $default  reduce using rule 72 (AssignmentOperatorType)


State 110

   67 AssignmentOperatorType: '=' •

    $default  reduce using rule 67 (AssignmentOperatorType)


State 111

   53 AssignmentStmt: ID AssignmentOperatorType • Expr ';'

    TRUE       shift, and go to state 23
    FALSE      shift, and go to state 24
    INT_LIT    shift, and go to state 25
    FLOAT_LIT  shift, and go to state 26
    ID         shift, and go to state 27
    '!'        shift, and go to state 28
    '-'        shift, and go to state 29
    '('        shift, and go to state 30
    '"'        shift, and go to state 31
    '['        shift, and go to state 32

    Expr  go to state 116


State 112

   49 PrintStmt: PrintType '(' • Expr ')' ';'

    TRUE       shift, and go to state 23
    FALSE      shift, and go to state 24
    INT_LIT    shift, and go to state 25
    FLOAT_LIT  shift, and go to state 26
    ID         shift, and go to state 27
    '!'        shift, and go to state 28
    '-'        shift, and go to state 29
    '('        shift, and go to state 30
    '"'        shift, and go to state 31
    '['        shift, and go to state 32

    Expr  go to state 117


State 113

   50 DeclarationStmt: LET MutType ID • ':' Type '=' Expr ';'
   51                | LET MutType ID • ':' Type ';'
   52                | LET MutType ID • '=' Expr ';'

    ':'  shift, and go to state 118
    '='  shift, and go to state 119


State 114

   54 IfStmt: IF Expr Block •
   55       | IF Expr Block • ELSE Block

    ELSE  shift, and go to state 120

    $default  reduce using rule 54 (IfStmt)


State 115

   56 WhileStmt: WHILE Expr Block •

    $default  reduce using rule 56 (WhileStmt)


State 116

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type
   53 AssignmentStmt: ID AssignmentOperatorType Expr • ';'

    GEQ     shift, and go to state 44
    LEQ     shift, and go to state 45
    EQL     shift, and go to state 46
    NEQ     shift, and go to state 47
    LOR     shift, and go to state 48
    LAND    shift, and go to state 49
    AS      shift, and go to state 50
    RSHIFT  shift, and go to state 51
    LSHIFT  shift, and go to state 52
    '>'     shift, and go to state 53
    '<'     shift, and go to state 54
    '+'     shift, and go to state 55
    '-'     shift, and go to state 56
    '*'     shift, and go to state 57
    '/'     shift, and go to state 58
    '%'     shift, and go to state 59
    ';'     shift, and go to state 121


State 117

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type
   49 PrintStmt: PrintType '(' Expr • ')' ';'

    GEQ     shift, and go to state 44
    LEQ     shift, and go to state 45
    EQL     shift, and go to state 46
    NEQ     shift, and go to state 47
    LOR     shift, and go to state 48
    LAND    shift, and go to state 49
    AS      shift, and go to state 50
    RSHIFT  shift, and go to state 51
    LSHIFT  shift, and go to state 52
    '>'     shift, and go to state 53
    '<'     shift, and go to state 54
    '+'     shift, and go to state 55
    '-'     shift, and go to state 56
    '*'     shift, and go to state 57
    '/'     shift, and go to state 58
    '%'     shift, and go to state 59
    ')'     shift, and go to state 122


State 118

   50 DeclarationStmt: LET MutType ID ':' • Type '=' Expr ';'
   51                | LET MutType ID ':' • Type ';'

    INT    shift, and go to state 12
    FLOAT  shift, and go to state 13
    BOOL   shift, and go to state 14
    '['    shift, and go to state 15
    '&'    shift, and go to state 16

    $default  reduce using rule 62 (Type)

    Type  go to state 123


State 119

   52 DeclarationStmt: LET MutType ID '=' • Expr ';'

    TRUE       shift, and go to state 23
    FALSE      shift, and go to state 24
    INT_LIT    shift, and go to state 25
    FLOAT_LIT  shift, and go to state 26
    ID         shift, and go to state 27
    '!'        shift, and go to state 28
    '-'        shift, and go to state 29
    '('        shift, and go to state 30
    '"'        shift, and go to state 31
    '['        shift, and go to state 32

    Expr  go to state 124


State 120

   55 IfStmt: IF Expr Block ELSE • Block

    '{'  shift, and go to state 34

    Block  go to state 125


State 121

   53 AssignmentStmt: ID AssignmentOperatorType Expr ';' •

    $default  reduce using rule 53 (AssignmentStmt)


State 122

   49 PrintStmt: PrintType '(' Expr ')' • ';'

    ';'  shift, and go to state 126


State 123

   50 DeclarationStmt: LET MutType ID ':' Type • '=' Expr ';'
   51                | LET MutType ID ':' Type • ';'

    ';'  shift, and go to state 127
    '='  shift, and go to state 128


State 124

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type
   52 DeclarationStmt: LET MutType ID '=' Expr • ';'

    GEQ     shift, and go to state 44
    LEQ     shift, and go to state 45
    EQL     shift, and go to state 46
    NEQ     shift, and go to state 47
    LOR     shift, and go to state 48
    LAND    shift, and go to state 49
    AS      shift, and go to state 50
    RSHIFT  shift, and go to state 51
    LSHIFT  shift, and go to state 52
    '>'     shift, and go to state 53
    '<'     shift, and go to state 54
    '+'     shift, and go to state 55
    '-'     shift, and go to state 56
    '*'     shift, and go to state 57
    '/'     shift, and go to state 58
    '%'     shift, and go to state 59
    ';'     shift, and go to state 129


State 125

   55 IfStmt: IF Expr Block ELSE Block •

    $default  reduce using rule 55 (IfStmt)


State 126

   49 PrintStmt: PrintType '(' Expr ')' ';' •

    $default  reduce using rule 49 (PrintStmt)


State 127

   51 DeclarationStmt: LET MutType ID ':' Type ';' •

    $default  reduce using rule 51 (DeclarationStmt)


State 128

   50 DeclarationStmt: LET MutType ID ':' Type '=' • Expr ';'

    TRUE       shift, and go to state 23
    FALSE      shift, and go to state 24
    INT_LIT    shift, and go to state 25
    FLOAT_LIT  shift, and go to state 26
    ID         shift, and go to state 27
    '!'        shift, and go to state 28
    '-'        shift, and go to state 29
    '('        shift, and go to state 30
    '"'        shift, and go to state 31
    '['        shift, and go to state 32

    Expr  go to state 130


State 129

   52 DeclarationStmt: LET MutType ID '=' Expr ';' •

    $default  reduce using rule 52 (DeclarationStmt)


State 130

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type
   50 DeclarationStmt: LET MutType ID ':' Type '=' Expr • ';'

    GEQ     shift, and go to state 44
    LEQ     shift, and go to state 45
    EQL     shift, and go to state 46
    NEQ     shift, and go to state 47
    LOR     shift, and go to state 48
    LAND    shift, and go to state 49
    AS      shift, and go to state 50
    RSHIFT  shift, and go to state 51
    LSHIFT  shift, and go to state 52
    '>'     shift, and go to state 53
    '<'     shift, and go to state 54
    '+'     shift, and go to state 55
    '-'     shift, and go to state 56
    '*'     shift, and go to state 57
    '/'     shift, and go to state 58
    '%'     shift, and go to state 59
    ';'     shift, and go to state 131


State 131

   50 DeclarationStmt: LET MutType ID ':' Type '=' Expr ';' •

    $default  reduce using rule 50 (DeclarationStmt)
