Terminals unused in grammar

    FOR
    LOOP
    RETURN
    BREAK
    IN
    DOTDOT


Grammar

    0 $accept: Program $end

    1 $@1: ε

    2 Program: $@1 GlobalStatementList

    3 GlobalStatementList: GlobalStatementList GlobalStatement
    4                    | GlobalStatement

    5 GlobalStatement: FunctionDeclStmt
    6                | NEWLINE

    7 $@2: ε

    8 FunctionDeclStmt: FUNC ID '(' FunctionArguments ')' ArrowType $@2 Block

    9 StmtList: StmtList Stmt
   10         | ε

   11 Stmt: PrintStmt
   12     | DeclarationStmt
   13     | AssignmentStmt
   14     | Block
   15     | IfStmt
   16     | WhileStmt

   17 $@3: ε

   18 Block: '{' $@3 StmtList '}'

   19 Expr: ID
   20     | INT_LIT
   21     | FLOAT_LIT
   22     | '"' STRING_LIT '"'
   23     | '"' '"'
   24     | TRUE
   25     | FALSE
   26     | '[' ArrayElements ']'
   27     | ID '[' INT_LIT ']'
   28     | '-' Expr
   29     | '!' Expr
   30     | '(' Expr ')'
   31     | Expr '*' Expr
   32     | Expr '/' Expr
   33     | Expr '%' Expr
   34     | Expr '+' Expr
   35     | Expr '-' Expr
   36     | Expr LSHIFT Expr
   37     | Expr RSHIFT Expr
   38     | Expr LAND Expr
   39     | Expr LOR Expr
   40     | Expr GEQ Expr
   41     | Expr LEQ Expr
   42     | Expr EQL Expr
   43     | Expr NEQ Expr
   44     | Expr '>' Expr
   45     | Expr '<' Expr
   46     | Expr AS Type

   47 ArrayElements: ArrayElements ',' Expr
   48              | Expr

   49 $@4: ε

   50 PrintStmt: PrintType $@4 '(' Expr ')' ';'

   51 DeclarationStmt: LET MutType ID ':' Type '=' Expr ';'
   52                | LET MutType ID ':' Type ';'
   53                | LET MutType ID '=' Expr ';'

   54 AssignmentStmt: ID '=' Expr ';'

   55 $@5: ε

   56 AssignmentStmt: ID $@5 AssignmentOperatorType Expr ';'

   57 IfStmt: IF IfCondition Block

   58 $@6: ε

   59 IfStmt: IF IfCondition Block ELSE $@6 Block

   60 IfCondition: Expr

   61 $@7: ε

   62 $@8: ε

   63 WhileStmt: WHILE $@7 Expr $@8 Block

   64 Type: INT
   65     | FLOAT
   66     | BOOL
   67     | '&' STR
   68     | '[' Type ';' Expr ']'
   69     | ε

   70 PrintType: PRINT
   71          | PRINTLN

   72 MutType: MUT
   73        | ε

   74 AssignmentOperatorType: ADD_ASSIGN
   75                       | SUB_ASSIGN
   76                       | MUL_ASSIGN
   77                       | DIV_ASSIGN
   78                       | REM_ASSIGN

   79 FunctionArguments: FunctionArguments ',' Type ID
   80                  | Type ID
   81                  | ε

   82 ArrowType: ARROW Type
   83          | ε


Terminals, with rules where they appear

    $end (0) 0
    '!' (33) 29
    '"' (34) 22 23
    '%' (37) 33
    '&' (38) 67
    '(' (40) 8 30 50
    ')' (41) 8 30 50
    '*' (42) 31
    '+' (43) 34
    ',' (44) 47 79
    '-' (45) 28 35
    '/' (47) 32
    ':' (58) 51 52
    ';' (59) 50 51 52 53 54 56 68
    '<' (60) 45
    '=' (61) 51 53 54
    '>' (62) 44
    '[' (91) 26 27 68
    ']' (93) 26 27 68
    '{' (123) 18
    '}' (125) 18
    error (256)
    LET (258) 51 52 53
    MUT (259) 72
    NEWLINE (260) 6
    INT (261) 64
    FLOAT (262) 65
    BOOL (263) 66
    STR (264) 67
    TRUE (265) 24
    FALSE (266) 25
    GEQ (267) 40
    LEQ (268) 41
    EQL (269) 42
    NEQ (270) 43
    LOR (271) 39
    LAND (272) 38
    ADD_ASSIGN (273) 74
    SUB_ASSIGN (274) 75
    MUL_ASSIGN (275) 76
    DIV_ASSIGN (276) 77
    REM_ASSIGN (277) 78
    IF (278) 57 59
    ELSE (279) 59
    FOR (280)
    WHILE (281) 63
    LOOP (282)
    PRINT (283) 70
    PRINTLN (284) 71
    FUNC (285) 8
    RETURN (286)
    BREAK (287)
    ARROW (288) 82
    AS (289) 46
    IN (290)
    DOTDOT (291)
    RSHIFT (292) 37
    LSHIFT (293) 36
    INT_LIT <i_val> (294) 20 27
    FLOAT_LIT <f_val> (295) 21
    STRING_LIT <s_val> (296) 22
    ID <s_val> (297) 8 19 27 51 52 53 54 56 79 80
    IFX (298)
    UMINUS (299)


Nonterminals, with rules where they appear

    $accept (65)
        on left: 0
    Program (66)
        on left: 2
        on right: 0
    $@1 (67)
        on left: 1
        on right: 2
    GlobalStatementList (68)
        on left: 3 4
        on right: 2 3
    GlobalStatement (69)
        on left: 5 6
        on right: 3 4
    FunctionDeclStmt (70)
        on left: 8
        on right: 5
    $@2 (71)
        on left: 7
        on right: 8
    StmtList (72)
        on left: 9 10
        on right: 9 18
    Stmt (73)
        on left: 11 12 13 14 15 16
        on right: 9
    Block (74)
        on left: 18
        on right: 8 14 57 59 63
    $@3 (75)
        on left: 17
        on right: 18
    Expr <s_val> (76)
        on left: 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46
        on right: 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 50 51 53 54 56 60 63 68
    ArrayElements <s_val> (77)
        on left: 47 48
        on right: 26 47
    PrintStmt (78)
        on left: 50
        on right: 11
    $@4 (79)
        on left: 49
        on right: 50
    DeclarationStmt (80)
        on left: 51 52 53
        on right: 12
    AssignmentStmt (81)
        on left: 54 56
        on right: 13
    $@5 (82)
        on left: 55
        on right: 56
    IfStmt (83)
        on left: 57 59
        on right: 15
    $@6 (84)
        on left: 58
        on right: 59
    IfCondition (85)
        on left: 60
        on right: 57 59
    WhileStmt (86)
        on left: 63
        on right: 16
    $@7 (87)
        on left: 61
        on right: 63
    $@8 (88)
        on left: 62
        on right: 63
    Type <s_val> (89)
        on left: 64 65 66 67 68 69
        on right: 46 51 52 68 79 80 82
    PrintType <s_val> (90)
        on left: 70 71
        on right: 50
    MutType <i_val> (91)
        on left: 72 73
        on right: 51 52 53
    AssignmentOperatorType <s_val> (92)
        on left: 74 75 76 77 78
        on right: 56
    FunctionArguments <s_val> (93)
        on left: 79 80 81
        on right: 8 79
    ArrowType <s_val> (94)
        on left: 82 83
        on right: 8


State 0

    0 $accept: • Program $end

    $default  reduce using rule 1 ($@1)

    Program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: Program • $end

    $end  shift, and go to state 3


State 2

    2 Program: $@1 • GlobalStatementList

    NEWLINE  shift, and go to state 4
    FUNC     shift, and go to state 5

    GlobalStatementList  go to state 6
    GlobalStatement      go to state 7
    FunctionDeclStmt     go to state 8


State 3

    0 $accept: Program $end •

    $default  accept


State 4

    6 GlobalStatement: NEWLINE •

    $default  reduce using rule 6 (GlobalStatement)


State 5

    8 FunctionDeclStmt: FUNC • ID '(' FunctionArguments ')' ArrowType $@2 Block

    ID  shift, and go to state 9


State 6

    2 Program: $@1 GlobalStatementList •
    3 GlobalStatementList: GlobalStatementList • GlobalStatement

    NEWLINE  shift, and go to state 4
    FUNC     shift, and go to state 5

    $default  reduce using rule 2 (Program)

    GlobalStatement   go to state 10
    FunctionDeclStmt  go to state 8


State 7

    4 GlobalStatementList: GlobalStatement •

    $default  reduce using rule 4 (GlobalStatementList)


State 8

    5 GlobalStatement: FunctionDeclStmt •

    $default  reduce using rule 5 (GlobalStatement)


State 9

    8 FunctionDeclStmt: FUNC ID • '(' FunctionArguments ')' ArrowType $@2 Block

    '('  shift, and go to state 11


State 10

    3 GlobalStatementList: GlobalStatementList GlobalStatement •

    $default  reduce using rule 3 (GlobalStatementList)


State 11

    8 FunctionDeclStmt: FUNC ID '(' • FunctionArguments ')' ArrowType $@2 Block

    INT    shift, and go to state 12
    FLOAT  shift, and go to state 13
    BOOL   shift, and go to state 14
    '['    shift, and go to state 15
    '&'    shift, and go to state 16

    ID        reduce using rule 69 (Type)
    $default  reduce using rule 81 (FunctionArguments)

    Type               go to state 17
    FunctionArguments  go to state 18


State 12

   64 Type: INT •

    $default  reduce using rule 64 (Type)


State 13

   65 Type: FLOAT •

    $default  reduce using rule 65 (Type)


State 14

   66 Type: BOOL •

    $default  reduce using rule 66 (Type)


State 15

   68 Type: '[' • Type ';' Expr ']'

    INT    shift, and go to state 12
    FLOAT  shift, and go to state 13
    BOOL   shift, and go to state 14
    '['    shift, and go to state 15
    '&'    shift, and go to state 16

    $default  reduce using rule 69 (Type)

    Type  go to state 19


State 16

   67 Type: '&' • STR

    STR  shift, and go to state 20


State 17

   80 FunctionArguments: Type • ID

    ID  shift, and go to state 21


State 18

    8 FunctionDeclStmt: FUNC ID '(' FunctionArguments • ')' ArrowType $@2 Block
   79 FunctionArguments: FunctionArguments • ',' Type ID

    ')'  shift, and go to state 22
    ','  shift, and go to state 23


State 19

   68 Type: '[' Type • ';' Expr ']'

    ';'  shift, and go to state 24


State 20

   67 Type: '&' STR •

    $default  reduce using rule 67 (Type)


State 21

   80 FunctionArguments: Type ID •

    $default  reduce using rule 80 (FunctionArguments)


State 22

    8 FunctionDeclStmt: FUNC ID '(' FunctionArguments ')' • ArrowType $@2 Block

    ARROW  shift, and go to state 25

    $default  reduce using rule 83 (ArrowType)

    ArrowType  go to state 26


State 23

   79 FunctionArguments: FunctionArguments ',' • Type ID

    INT    shift, and go to state 12
    FLOAT  shift, and go to state 13
    BOOL   shift, and go to state 14
    '['    shift, and go to state 15
    '&'    shift, and go to state 16

    $default  reduce using rule 69 (Type)

    Type  go to state 27


State 24

   68 Type: '[' Type ';' • Expr ']'

    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    INT_LIT    shift, and go to state 30
    FLOAT_LIT  shift, and go to state 31
    ID         shift, and go to state 32
    '!'        shift, and go to state 33
    '-'        shift, and go to state 34
    '('        shift, and go to state 35
    '"'        shift, and go to state 36
    '['        shift, and go to state 37

    Expr  go to state 38


State 25

   82 ArrowType: ARROW • Type

    INT    shift, and go to state 12
    FLOAT  shift, and go to state 13
    BOOL   shift, and go to state 14
    '['    shift, and go to state 15
    '&'    shift, and go to state 16

    $default  reduce using rule 69 (Type)

    Type  go to state 39


State 26

    8 FunctionDeclStmt: FUNC ID '(' FunctionArguments ')' ArrowType • $@2 Block

    $default  reduce using rule 7 ($@2)

    $@2  go to state 40


State 27

   79 FunctionArguments: FunctionArguments ',' Type • ID

    ID  shift, and go to state 41


State 28

   24 Expr: TRUE •

    $default  reduce using rule 24 (Expr)


State 29

   25 Expr: FALSE •

    $default  reduce using rule 25 (Expr)


State 30

   20 Expr: INT_LIT •

    $default  reduce using rule 20 (Expr)


State 31

   21 Expr: FLOAT_LIT •

    $default  reduce using rule 21 (Expr)


State 32

   19 Expr: ID •
   27     | ID • '[' INT_LIT ']'

    '['  shift, and go to state 42

    $default  reduce using rule 19 (Expr)


State 33

   29 Expr: '!' • Expr

    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    INT_LIT    shift, and go to state 30
    FLOAT_LIT  shift, and go to state 31
    ID         shift, and go to state 32
    '!'        shift, and go to state 33
    '-'        shift, and go to state 34
    '('        shift, and go to state 35
    '"'        shift, and go to state 36
    '['        shift, and go to state 37

    Expr  go to state 43


State 34

   28 Expr: '-' • Expr

    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    INT_LIT    shift, and go to state 30
    FLOAT_LIT  shift, and go to state 31
    ID         shift, and go to state 32
    '!'        shift, and go to state 33
    '-'        shift, and go to state 34
    '('        shift, and go to state 35
    '"'        shift, and go to state 36
    '['        shift, and go to state 37

    Expr  go to state 44


State 35

   30 Expr: '(' • Expr ')'

    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    INT_LIT    shift, and go to state 30
    FLOAT_LIT  shift, and go to state 31
    ID         shift, and go to state 32
    '!'        shift, and go to state 33
    '-'        shift, and go to state 34
    '('        shift, and go to state 35
    '"'        shift, and go to state 36
    '['        shift, and go to state 37

    Expr  go to state 45


State 36

   22 Expr: '"' • STRING_LIT '"'
   23     | '"' • '"'

    STRING_LIT  shift, and go to state 46
    '"'         shift, and go to state 47


State 37

   26 Expr: '[' • ArrayElements ']'

    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    INT_LIT    shift, and go to state 30
    FLOAT_LIT  shift, and go to state 31
    ID         shift, and go to state 32
    '!'        shift, and go to state 33
    '-'        shift, and go to state 34
    '('        shift, and go to state 35
    '"'        shift, and go to state 36
    '['        shift, and go to state 37

    Expr           go to state 48
    ArrayElements  go to state 49


State 38

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type
   68 Type: '[' Type ';' Expr • ']'

    GEQ     shift, and go to state 50
    LEQ     shift, and go to state 51
    EQL     shift, and go to state 52
    NEQ     shift, and go to state 53
    LOR     shift, and go to state 54
    LAND    shift, and go to state 55
    AS      shift, and go to state 56
    RSHIFT  shift, and go to state 57
    LSHIFT  shift, and go to state 58
    '>'     shift, and go to state 59
    '<'     shift, and go to state 60
    '+'     shift, and go to state 61
    '-'     shift, and go to state 62
    '*'     shift, and go to state 63
    '/'     shift, and go to state 64
    '%'     shift, and go to state 65
    ']'     shift, and go to state 66


State 39

   82 ArrowType: ARROW Type •

    $default  reduce using rule 82 (ArrowType)


State 40

    8 FunctionDeclStmt: FUNC ID '(' FunctionArguments ')' ArrowType $@2 • Block

    '{'  shift, and go to state 67

    Block  go to state 68


State 41

   79 FunctionArguments: FunctionArguments ',' Type ID •

    $default  reduce using rule 79 (FunctionArguments)


State 42

   27 Expr: ID '[' • INT_LIT ']'

    INT_LIT  shift, and go to state 69


State 43

   29 Expr: '!' Expr •
   31     | Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type

    GEQ     shift, and go to state 50
    LEQ     shift, and go to state 51
    EQL     shift, and go to state 52
    NEQ     shift, and go to state 53
    AS      shift, and go to state 56
    RSHIFT  shift, and go to state 57
    LSHIFT  shift, and go to state 58
    '>'     shift, and go to state 59
    '<'     shift, and go to state 60
    '+'     shift, and go to state 61
    '-'     shift, and go to state 62
    '*'     shift, and go to state 63
    '/'     shift, and go to state 64
    '%'     shift, and go to state 65

    $default  reduce using rule 29 (Expr)


State 44

   28 Expr: '-' Expr •
   31     | Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type

    AS  shift, and go to state 56

    $default  reduce using rule 28 (Expr)


State 45

   30 Expr: '(' Expr • ')'
   31     | Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type

    GEQ     shift, and go to state 50
    LEQ     shift, and go to state 51
    EQL     shift, and go to state 52
    NEQ     shift, and go to state 53
    LOR     shift, and go to state 54
    LAND    shift, and go to state 55
    AS      shift, and go to state 56
    RSHIFT  shift, and go to state 57
    LSHIFT  shift, and go to state 58
    '>'     shift, and go to state 59
    '<'     shift, and go to state 60
    '+'     shift, and go to state 61
    '-'     shift, and go to state 62
    '*'     shift, and go to state 63
    '/'     shift, and go to state 64
    '%'     shift, and go to state 65
    ')'     shift, and go to state 70


State 46

   22 Expr: '"' STRING_LIT • '"'

    '"'  shift, and go to state 71


State 47

   23 Expr: '"' '"' •

    $default  reduce using rule 23 (Expr)


State 48

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type
   48 ArrayElements: Expr •

    GEQ     shift, and go to state 50
    LEQ     shift, and go to state 51
    EQL     shift, and go to state 52
    NEQ     shift, and go to state 53
    LOR     shift, and go to state 54
    LAND    shift, and go to state 55
    AS      shift, and go to state 56
    RSHIFT  shift, and go to state 57
    LSHIFT  shift, and go to state 58
    '>'     shift, and go to state 59
    '<'     shift, and go to state 60
    '+'     shift, and go to state 61
    '-'     shift, and go to state 62
    '*'     shift, and go to state 63
    '/'     shift, and go to state 64
    '%'     shift, and go to state 65

    $default  reduce using rule 48 (ArrayElements)


State 49

   26 Expr: '[' ArrayElements • ']'
   47 ArrayElements: ArrayElements • ',' Expr

    ']'  shift, and go to state 72
    ','  shift, and go to state 73


State 50

   40 Expr: Expr GEQ • Expr

    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    INT_LIT    shift, and go to state 30
    FLOAT_LIT  shift, and go to state 31
    ID         shift, and go to state 32
    '!'        shift, and go to state 33
    '-'        shift, and go to state 34
    '('        shift, and go to state 35
    '"'        shift, and go to state 36
    '['        shift, and go to state 37

    Expr  go to state 74


State 51

   41 Expr: Expr LEQ • Expr

    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    INT_LIT    shift, and go to state 30
    FLOAT_LIT  shift, and go to state 31
    ID         shift, and go to state 32
    '!'        shift, and go to state 33
    '-'        shift, and go to state 34
    '('        shift, and go to state 35
    '"'        shift, and go to state 36
    '['        shift, and go to state 37

    Expr  go to state 75


State 52

   42 Expr: Expr EQL • Expr

    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    INT_LIT    shift, and go to state 30
    FLOAT_LIT  shift, and go to state 31
    ID         shift, and go to state 32
    '!'        shift, and go to state 33
    '-'        shift, and go to state 34
    '('        shift, and go to state 35
    '"'        shift, and go to state 36
    '['        shift, and go to state 37

    Expr  go to state 76


State 53

   43 Expr: Expr NEQ • Expr

    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    INT_LIT    shift, and go to state 30
    FLOAT_LIT  shift, and go to state 31
    ID         shift, and go to state 32
    '!'        shift, and go to state 33
    '-'        shift, and go to state 34
    '('        shift, and go to state 35
    '"'        shift, and go to state 36
    '['        shift, and go to state 37

    Expr  go to state 77


State 54

   39 Expr: Expr LOR • Expr

    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    INT_LIT    shift, and go to state 30
    FLOAT_LIT  shift, and go to state 31
    ID         shift, and go to state 32
    '!'        shift, and go to state 33
    '-'        shift, and go to state 34
    '('        shift, and go to state 35
    '"'        shift, and go to state 36
    '['        shift, and go to state 37

    Expr  go to state 78


State 55

   38 Expr: Expr LAND • Expr

    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    INT_LIT    shift, and go to state 30
    FLOAT_LIT  shift, and go to state 31
    ID         shift, and go to state 32
    '!'        shift, and go to state 33
    '-'        shift, and go to state 34
    '('        shift, and go to state 35
    '"'        shift, and go to state 36
    '['        shift, and go to state 37

    Expr  go to state 79


State 56

   46 Expr: Expr AS • Type

    INT    shift, and go to state 12
    FLOAT  shift, and go to state 13
    BOOL   shift, and go to state 14
    '['    shift, and go to state 15
    '&'    shift, and go to state 16

    $default  reduce using rule 69 (Type)

    Type  go to state 80


State 57

   37 Expr: Expr RSHIFT • Expr

    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    INT_LIT    shift, and go to state 30
    FLOAT_LIT  shift, and go to state 31
    ID         shift, and go to state 32
    '!'        shift, and go to state 33
    '-'        shift, and go to state 34
    '('        shift, and go to state 35
    '"'        shift, and go to state 36
    '['        shift, and go to state 37

    Expr  go to state 81


State 58

   36 Expr: Expr LSHIFT • Expr

    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    INT_LIT    shift, and go to state 30
    FLOAT_LIT  shift, and go to state 31
    ID         shift, and go to state 32
    '!'        shift, and go to state 33
    '-'        shift, and go to state 34
    '('        shift, and go to state 35
    '"'        shift, and go to state 36
    '['        shift, and go to state 37

    Expr  go to state 82


State 59

   44 Expr: Expr '>' • Expr

    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    INT_LIT    shift, and go to state 30
    FLOAT_LIT  shift, and go to state 31
    ID         shift, and go to state 32
    '!'        shift, and go to state 33
    '-'        shift, and go to state 34
    '('        shift, and go to state 35
    '"'        shift, and go to state 36
    '['        shift, and go to state 37

    Expr  go to state 83


State 60

   45 Expr: Expr '<' • Expr

    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    INT_LIT    shift, and go to state 30
    FLOAT_LIT  shift, and go to state 31
    ID         shift, and go to state 32
    '!'        shift, and go to state 33
    '-'        shift, and go to state 34
    '('        shift, and go to state 35
    '"'        shift, and go to state 36
    '['        shift, and go to state 37

    Expr  go to state 84


State 61

   34 Expr: Expr '+' • Expr

    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    INT_LIT    shift, and go to state 30
    FLOAT_LIT  shift, and go to state 31
    ID         shift, and go to state 32
    '!'        shift, and go to state 33
    '-'        shift, and go to state 34
    '('        shift, and go to state 35
    '"'        shift, and go to state 36
    '['        shift, and go to state 37

    Expr  go to state 85


State 62

   35 Expr: Expr '-' • Expr

    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    INT_LIT    shift, and go to state 30
    FLOAT_LIT  shift, and go to state 31
    ID         shift, and go to state 32
    '!'        shift, and go to state 33
    '-'        shift, and go to state 34
    '('        shift, and go to state 35
    '"'        shift, and go to state 36
    '['        shift, and go to state 37

    Expr  go to state 86


State 63

   31 Expr: Expr '*' • Expr

    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    INT_LIT    shift, and go to state 30
    FLOAT_LIT  shift, and go to state 31
    ID         shift, and go to state 32
    '!'        shift, and go to state 33
    '-'        shift, and go to state 34
    '('        shift, and go to state 35
    '"'        shift, and go to state 36
    '['        shift, and go to state 37

    Expr  go to state 87


State 64

   32 Expr: Expr '/' • Expr

    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    INT_LIT    shift, and go to state 30
    FLOAT_LIT  shift, and go to state 31
    ID         shift, and go to state 32
    '!'        shift, and go to state 33
    '-'        shift, and go to state 34
    '('        shift, and go to state 35
    '"'        shift, and go to state 36
    '['        shift, and go to state 37

    Expr  go to state 88


State 65

   33 Expr: Expr '%' • Expr

    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    INT_LIT    shift, and go to state 30
    FLOAT_LIT  shift, and go to state 31
    ID         shift, and go to state 32
    '!'        shift, and go to state 33
    '-'        shift, and go to state 34
    '('        shift, and go to state 35
    '"'        shift, and go to state 36
    '['        shift, and go to state 37

    Expr  go to state 89


State 66

   68 Type: '[' Type ';' Expr ']' •

    $default  reduce using rule 68 (Type)


State 67

   18 Block: '{' • $@3 StmtList '}'

    $default  reduce using rule 17 ($@3)

    $@3  go to state 90


State 68

    8 FunctionDeclStmt: FUNC ID '(' FunctionArguments ')' ArrowType $@2 Block •

    $default  reduce using rule 8 (FunctionDeclStmt)


State 69

   27 Expr: ID '[' INT_LIT • ']'

    ']'  shift, and go to state 91


State 70

   30 Expr: '(' Expr ')' •

    $default  reduce using rule 30 (Expr)


State 71

   22 Expr: '"' STRING_LIT '"' •

    $default  reduce using rule 22 (Expr)


State 72

   26 Expr: '[' ArrayElements ']' •

    $default  reduce using rule 26 (Expr)


State 73

   47 ArrayElements: ArrayElements ',' • Expr

    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    INT_LIT    shift, and go to state 30
    FLOAT_LIT  shift, and go to state 31
    ID         shift, and go to state 32
    '!'        shift, and go to state 33
    '-'        shift, and go to state 34
    '('        shift, and go to state 35
    '"'        shift, and go to state 36
    '['        shift, and go to state 37

    Expr  go to state 92


State 74

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   40     | Expr GEQ Expr •
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type

    AS      shift, and go to state 56
    RSHIFT  shift, and go to state 57
    LSHIFT  shift, and go to state 58
    '+'     shift, and go to state 61
    '-'     shift, and go to state 62
    '*'     shift, and go to state 63
    '/'     shift, and go to state 64
    '%'     shift, and go to state 65

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    EQL  error (nonassociative)
    NEQ  error (nonassociative)
    '>'  error (nonassociative)
    '<'  error (nonassociative)

    $default  reduce using rule 40 (Expr)


State 75

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   41     | Expr LEQ Expr •
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type

    AS      shift, and go to state 56
    RSHIFT  shift, and go to state 57
    LSHIFT  shift, and go to state 58
    '+'     shift, and go to state 61
    '-'     shift, and go to state 62
    '*'     shift, and go to state 63
    '/'     shift, and go to state 64
    '%'     shift, and go to state 65

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    EQL  error (nonassociative)
    NEQ  error (nonassociative)
    '>'  error (nonassociative)
    '<'  error (nonassociative)

    $default  reduce using rule 41 (Expr)


State 76

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   42     | Expr EQL Expr •
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type

    AS      shift, and go to state 56
    RSHIFT  shift, and go to state 57
    LSHIFT  shift, and go to state 58
    '+'     shift, and go to state 61
    '-'     shift, and go to state 62
    '*'     shift, and go to state 63
    '/'     shift, and go to state 64
    '%'     shift, and go to state 65

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    EQL  error (nonassociative)
    NEQ  error (nonassociative)
    '>'  error (nonassociative)
    '<'  error (nonassociative)

    $default  reduce using rule 42 (Expr)


State 77

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   43     | Expr NEQ Expr •
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type

    AS      shift, and go to state 56
    RSHIFT  shift, and go to state 57
    LSHIFT  shift, and go to state 58
    '+'     shift, and go to state 61
    '-'     shift, and go to state 62
    '*'     shift, and go to state 63
    '/'     shift, and go to state 64
    '%'     shift, and go to state 65

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    EQL  error (nonassociative)
    NEQ  error (nonassociative)
    '>'  error (nonassociative)
    '<'  error (nonassociative)

    $default  reduce using rule 43 (Expr)


State 78

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   39     | Expr LOR Expr •
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type

    GEQ     shift, and go to state 50
    LEQ     shift, and go to state 51
    EQL     shift, and go to state 52
    NEQ     shift, and go to state 53
    LAND    shift, and go to state 55
    AS      shift, and go to state 56
    RSHIFT  shift, and go to state 57
    LSHIFT  shift, and go to state 58
    '>'     shift, and go to state 59
    '<'     shift, and go to state 60
    '+'     shift, and go to state 61
    '-'     shift, and go to state 62
    '*'     shift, and go to state 63
    '/'     shift, and go to state 64
    '%'     shift, and go to state 65

    $default  reduce using rule 39 (Expr)


State 79

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   38     | Expr LAND Expr •
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type

    GEQ     shift, and go to state 50
    LEQ     shift, and go to state 51
    EQL     shift, and go to state 52
    NEQ     shift, and go to state 53
    AS      shift, and go to state 56
    RSHIFT  shift, and go to state 57
    LSHIFT  shift, and go to state 58
    '>'     shift, and go to state 59
    '<'     shift, and go to state 60
    '+'     shift, and go to state 61
    '-'     shift, and go to state 62
    '*'     shift, and go to state 63
    '/'     shift, and go to state 64
    '%'     shift, and go to state 65

    $default  reduce using rule 38 (Expr)


State 80

   46 Expr: Expr AS Type •

    $default  reduce using rule 46 (Expr)


State 81

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   37     | Expr RSHIFT Expr •
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type

    AS   shift, and go to state 56
    '+'  shift, and go to state 61
    '-'  shift, and go to state 62
    '*'  shift, and go to state 63
    '/'  shift, and go to state 64
    '%'  shift, and go to state 65

    $default  reduce using rule 37 (Expr)


State 82

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   36     | Expr LSHIFT Expr •
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type

    AS   shift, and go to state 56
    '+'  shift, and go to state 61
    '-'  shift, and go to state 62
    '*'  shift, and go to state 63
    '/'  shift, and go to state 64
    '%'  shift, and go to state 65

    $default  reduce using rule 36 (Expr)


State 83

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   44     | Expr '>' Expr •
   45     | Expr • '<' Expr
   46     | Expr • AS Type

    AS      shift, and go to state 56
    RSHIFT  shift, and go to state 57
    LSHIFT  shift, and go to state 58
    '+'     shift, and go to state 61
    '-'     shift, and go to state 62
    '*'     shift, and go to state 63
    '/'     shift, and go to state 64
    '%'     shift, and go to state 65

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    EQL  error (nonassociative)
    NEQ  error (nonassociative)
    '>'  error (nonassociative)
    '<'  error (nonassociative)

    $default  reduce using rule 44 (Expr)


State 84

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   45     | Expr '<' Expr •
   46     | Expr • AS Type

    AS      shift, and go to state 56
    RSHIFT  shift, and go to state 57
    LSHIFT  shift, and go to state 58
    '+'     shift, and go to state 61
    '-'     shift, and go to state 62
    '*'     shift, and go to state 63
    '/'     shift, and go to state 64
    '%'     shift, and go to state 65

    GEQ  error (nonassociative)
    LEQ  error (nonassociative)
    EQL  error (nonassociative)
    NEQ  error (nonassociative)
    '>'  error (nonassociative)
    '<'  error (nonassociative)

    $default  reduce using rule 45 (Expr)


State 85

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   34     | Expr '+' Expr •
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type

    AS   shift, and go to state 56
    '*'  shift, and go to state 63
    '/'  shift, and go to state 64
    '%'  shift, and go to state 65

    $default  reduce using rule 34 (Expr)


State 86

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   35     | Expr '-' Expr •
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type

    AS   shift, and go to state 56
    '*'  shift, and go to state 63
    '/'  shift, and go to state 64
    '%'  shift, and go to state 65

    $default  reduce using rule 35 (Expr)


State 87

   31 Expr: Expr • '*' Expr
   31     | Expr '*' Expr •
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type

    AS  shift, and go to state 56

    $default  reduce using rule 31 (Expr)


State 88

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   32     | Expr '/' Expr •
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type

    AS  shift, and go to state 56

    $default  reduce using rule 32 (Expr)


State 89

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   33     | Expr '%' Expr •
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type

    AS  shift, and go to state 56

    $default  reduce using rule 33 (Expr)


State 90

   18 Block: '{' $@3 • StmtList '}'

    $default  reduce using rule 10 (StmtList)

    StmtList  go to state 93


State 91

   27 Expr: ID '[' INT_LIT ']' •

    $default  reduce using rule 27 (Expr)


State 92

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type
   47 ArrayElements: ArrayElements ',' Expr •

    GEQ     shift, and go to state 50
    LEQ     shift, and go to state 51
    EQL     shift, and go to state 52
    NEQ     shift, and go to state 53
    LOR     shift, and go to state 54
    LAND    shift, and go to state 55
    AS      shift, and go to state 56
    RSHIFT  shift, and go to state 57
    LSHIFT  shift, and go to state 58
    '>'     shift, and go to state 59
    '<'     shift, and go to state 60
    '+'     shift, and go to state 61
    '-'     shift, and go to state 62
    '*'     shift, and go to state 63
    '/'     shift, and go to state 64
    '%'     shift, and go to state 65

    $default  reduce using rule 47 (ArrayElements)


State 93

    9 StmtList: StmtList • Stmt
   18 Block: '{' $@3 StmtList • '}'

    LET      shift, and go to state 94
    IF       shift, and go to state 95
    WHILE    shift, and go to state 96
    PRINT    shift, and go to state 97
    PRINTLN  shift, and go to state 98
    ID       shift, and go to state 99
    '{'      shift, and go to state 67
    '}'      shift, and go to state 100

    Stmt             go to state 101
    Block            go to state 102
    PrintStmt        go to state 103
    DeclarationStmt  go to state 104
    AssignmentStmt   go to state 105
    IfStmt           go to state 106
    WhileStmt        go to state 107
    PrintType        go to state 108


State 94

   51 DeclarationStmt: LET • MutType ID ':' Type '=' Expr ';'
   52                | LET • MutType ID ':' Type ';'
   53                | LET • MutType ID '=' Expr ';'

    MUT  shift, and go to state 109

    $default  reduce using rule 73 (MutType)

    MutType  go to state 110


State 95

   57 IfStmt: IF • IfCondition Block
   59       | IF • IfCondition Block ELSE $@6 Block

    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    INT_LIT    shift, and go to state 30
    FLOAT_LIT  shift, and go to state 31
    ID         shift, and go to state 32
    '!'        shift, and go to state 33
    '-'        shift, and go to state 34
    '('        shift, and go to state 35
    '"'        shift, and go to state 36
    '['        shift, and go to state 37

    Expr         go to state 111
    IfCondition  go to state 112


State 96

   63 WhileStmt: WHILE • $@7 Expr $@8 Block

    $default  reduce using rule 61 ($@7)

    $@7  go to state 113


State 97

   70 PrintType: PRINT •

    $default  reduce using rule 70 (PrintType)


State 98

   71 PrintType: PRINTLN •

    $default  reduce using rule 71 (PrintType)


State 99

   54 AssignmentStmt: ID • '=' Expr ';'
   56               | ID • $@5 AssignmentOperatorType Expr ';'

    '='  shift, and go to state 114

    $default  reduce using rule 55 ($@5)

    $@5  go to state 115


State 100

   18 Block: '{' $@3 StmtList '}' •

    $default  reduce using rule 18 (Block)


State 101

    9 StmtList: StmtList Stmt •

    $default  reduce using rule 9 (StmtList)


State 102

   14 Stmt: Block •

    $default  reduce using rule 14 (Stmt)


State 103

   11 Stmt: PrintStmt •

    $default  reduce using rule 11 (Stmt)


State 104

   12 Stmt: DeclarationStmt •

    $default  reduce using rule 12 (Stmt)


State 105

   13 Stmt: AssignmentStmt •

    $default  reduce using rule 13 (Stmt)


State 106

   15 Stmt: IfStmt •

    $default  reduce using rule 15 (Stmt)


State 107

   16 Stmt: WhileStmt •

    $default  reduce using rule 16 (Stmt)


State 108

   50 PrintStmt: PrintType • $@4 '(' Expr ')' ';'

    $default  reduce using rule 49 ($@4)

    $@4  go to state 116


State 109

   72 MutType: MUT •

    $default  reduce using rule 72 (MutType)


State 110

   51 DeclarationStmt: LET MutType • ID ':' Type '=' Expr ';'
   52                | LET MutType • ID ':' Type ';'
   53                | LET MutType • ID '=' Expr ';'

    ID  shift, and go to state 117


State 111

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type
   60 IfCondition: Expr •

    GEQ     shift, and go to state 50
    LEQ     shift, and go to state 51
    EQL     shift, and go to state 52
    NEQ     shift, and go to state 53
    LOR     shift, and go to state 54
    LAND    shift, and go to state 55
    AS      shift, and go to state 56
    RSHIFT  shift, and go to state 57
    LSHIFT  shift, and go to state 58
    '>'     shift, and go to state 59
    '<'     shift, and go to state 60
    '+'     shift, and go to state 61
    '-'     shift, and go to state 62
    '*'     shift, and go to state 63
    '/'     shift, and go to state 64
    '%'     shift, and go to state 65

    $default  reduce using rule 60 (IfCondition)


State 112

   57 IfStmt: IF IfCondition • Block
   59       | IF IfCondition • Block ELSE $@6 Block

    '{'  shift, and go to state 67

    Block  go to state 118


State 113

   63 WhileStmt: WHILE $@7 • Expr $@8 Block

    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    INT_LIT    shift, and go to state 30
    FLOAT_LIT  shift, and go to state 31
    ID         shift, and go to state 32
    '!'        shift, and go to state 33
    '-'        shift, and go to state 34
    '('        shift, and go to state 35
    '"'        shift, and go to state 36
    '['        shift, and go to state 37

    Expr  go to state 119


State 114

   54 AssignmentStmt: ID '=' • Expr ';'

    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    INT_LIT    shift, and go to state 30
    FLOAT_LIT  shift, and go to state 31
    ID         shift, and go to state 32
    '!'        shift, and go to state 33
    '-'        shift, and go to state 34
    '('        shift, and go to state 35
    '"'        shift, and go to state 36
    '['        shift, and go to state 37

    Expr  go to state 120


State 115

   56 AssignmentStmt: ID $@5 • AssignmentOperatorType Expr ';'

    ADD_ASSIGN  shift, and go to state 121
    SUB_ASSIGN  shift, and go to state 122
    MUL_ASSIGN  shift, and go to state 123
    DIV_ASSIGN  shift, and go to state 124
    REM_ASSIGN  shift, and go to state 125

    AssignmentOperatorType  go to state 126


State 116

   50 PrintStmt: PrintType $@4 • '(' Expr ')' ';'

    '('  shift, and go to state 127


State 117

   51 DeclarationStmt: LET MutType ID • ':' Type '=' Expr ';'
   52                | LET MutType ID • ':' Type ';'
   53                | LET MutType ID • '=' Expr ';'

    ':'  shift, and go to state 128
    '='  shift, and go to state 129


State 118

   57 IfStmt: IF IfCondition Block •
   59       | IF IfCondition Block • ELSE $@6 Block

    ELSE  shift, and go to state 130

    $default  reduce using rule 57 (IfStmt)


State 119

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type
   63 WhileStmt: WHILE $@7 Expr • $@8 Block

    GEQ     shift, and go to state 50
    LEQ     shift, and go to state 51
    EQL     shift, and go to state 52
    NEQ     shift, and go to state 53
    LOR     shift, and go to state 54
    LAND    shift, and go to state 55
    AS      shift, and go to state 56
    RSHIFT  shift, and go to state 57
    LSHIFT  shift, and go to state 58
    '>'     shift, and go to state 59
    '<'     shift, and go to state 60
    '+'     shift, and go to state 61
    '-'     shift, and go to state 62
    '*'     shift, and go to state 63
    '/'     shift, and go to state 64
    '%'     shift, and go to state 65

    $default  reduce using rule 62 ($@8)

    $@8  go to state 131


State 120

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type
   54 AssignmentStmt: ID '=' Expr • ';'

    GEQ     shift, and go to state 50
    LEQ     shift, and go to state 51
    EQL     shift, and go to state 52
    NEQ     shift, and go to state 53
    LOR     shift, and go to state 54
    LAND    shift, and go to state 55
    AS      shift, and go to state 56
    RSHIFT  shift, and go to state 57
    LSHIFT  shift, and go to state 58
    '>'     shift, and go to state 59
    '<'     shift, and go to state 60
    '+'     shift, and go to state 61
    '-'     shift, and go to state 62
    '*'     shift, and go to state 63
    '/'     shift, and go to state 64
    '%'     shift, and go to state 65
    ';'     shift, and go to state 132


State 121

   74 AssignmentOperatorType: ADD_ASSIGN •

    $default  reduce using rule 74 (AssignmentOperatorType)


State 122

   75 AssignmentOperatorType: SUB_ASSIGN •

    $default  reduce using rule 75 (AssignmentOperatorType)


State 123

   76 AssignmentOperatorType: MUL_ASSIGN •

    $default  reduce using rule 76 (AssignmentOperatorType)


State 124

   77 AssignmentOperatorType: DIV_ASSIGN •

    $default  reduce using rule 77 (AssignmentOperatorType)


State 125

   78 AssignmentOperatorType: REM_ASSIGN •

    $default  reduce using rule 78 (AssignmentOperatorType)


State 126

   56 AssignmentStmt: ID $@5 AssignmentOperatorType • Expr ';'

    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    INT_LIT    shift, and go to state 30
    FLOAT_LIT  shift, and go to state 31
    ID         shift, and go to state 32
    '!'        shift, and go to state 33
    '-'        shift, and go to state 34
    '('        shift, and go to state 35
    '"'        shift, and go to state 36
    '['        shift, and go to state 37

    Expr  go to state 133


State 127

   50 PrintStmt: PrintType $@4 '(' • Expr ')' ';'

    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    INT_LIT    shift, and go to state 30
    FLOAT_LIT  shift, and go to state 31
    ID         shift, and go to state 32
    '!'        shift, and go to state 33
    '-'        shift, and go to state 34
    '('        shift, and go to state 35
    '"'        shift, and go to state 36
    '['        shift, and go to state 37

    Expr  go to state 134


State 128

   51 DeclarationStmt: LET MutType ID ':' • Type '=' Expr ';'
   52                | LET MutType ID ':' • Type ';'

    INT    shift, and go to state 12
    FLOAT  shift, and go to state 13
    BOOL   shift, and go to state 14
    '['    shift, and go to state 15
    '&'    shift, and go to state 16

    $default  reduce using rule 69 (Type)

    Type  go to state 135


State 129

   53 DeclarationStmt: LET MutType ID '=' • Expr ';'

    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    INT_LIT    shift, and go to state 30
    FLOAT_LIT  shift, and go to state 31
    ID         shift, and go to state 32
    '!'        shift, and go to state 33
    '-'        shift, and go to state 34
    '('        shift, and go to state 35
    '"'        shift, and go to state 36
    '['        shift, and go to state 37

    Expr  go to state 136


State 130

   59 IfStmt: IF IfCondition Block ELSE • $@6 Block

    $default  reduce using rule 58 ($@6)

    $@6  go to state 137


State 131

   63 WhileStmt: WHILE $@7 Expr $@8 • Block

    '{'  shift, and go to state 67

    Block  go to state 138


State 132

   54 AssignmentStmt: ID '=' Expr ';' •

    $default  reduce using rule 54 (AssignmentStmt)


State 133

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type
   56 AssignmentStmt: ID $@5 AssignmentOperatorType Expr • ';'

    GEQ     shift, and go to state 50
    LEQ     shift, and go to state 51
    EQL     shift, and go to state 52
    NEQ     shift, and go to state 53
    LOR     shift, and go to state 54
    LAND    shift, and go to state 55
    AS      shift, and go to state 56
    RSHIFT  shift, and go to state 57
    LSHIFT  shift, and go to state 58
    '>'     shift, and go to state 59
    '<'     shift, and go to state 60
    '+'     shift, and go to state 61
    '-'     shift, and go to state 62
    '*'     shift, and go to state 63
    '/'     shift, and go to state 64
    '%'     shift, and go to state 65
    ';'     shift, and go to state 139


State 134

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type
   50 PrintStmt: PrintType $@4 '(' Expr • ')' ';'

    GEQ     shift, and go to state 50
    LEQ     shift, and go to state 51
    EQL     shift, and go to state 52
    NEQ     shift, and go to state 53
    LOR     shift, and go to state 54
    LAND    shift, and go to state 55
    AS      shift, and go to state 56
    RSHIFT  shift, and go to state 57
    LSHIFT  shift, and go to state 58
    '>'     shift, and go to state 59
    '<'     shift, and go to state 60
    '+'     shift, and go to state 61
    '-'     shift, and go to state 62
    '*'     shift, and go to state 63
    '/'     shift, and go to state 64
    '%'     shift, and go to state 65
    ')'     shift, and go to state 140


State 135

   51 DeclarationStmt: LET MutType ID ':' Type • '=' Expr ';'
   52                | LET MutType ID ':' Type • ';'

    ';'  shift, and go to state 141
    '='  shift, and go to state 142


State 136

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type
   53 DeclarationStmt: LET MutType ID '=' Expr • ';'

    GEQ     shift, and go to state 50
    LEQ     shift, and go to state 51
    EQL     shift, and go to state 52
    NEQ     shift, and go to state 53
    LOR     shift, and go to state 54
    LAND    shift, and go to state 55
    AS      shift, and go to state 56
    RSHIFT  shift, and go to state 57
    LSHIFT  shift, and go to state 58
    '>'     shift, and go to state 59
    '<'     shift, and go to state 60
    '+'     shift, and go to state 61
    '-'     shift, and go to state 62
    '*'     shift, and go to state 63
    '/'     shift, and go to state 64
    '%'     shift, and go to state 65
    ';'     shift, and go to state 143


State 137

   59 IfStmt: IF IfCondition Block ELSE $@6 • Block

    '{'  shift, and go to state 67

    Block  go to state 144


State 138

   63 WhileStmt: WHILE $@7 Expr $@8 Block •

    $default  reduce using rule 63 (WhileStmt)


State 139

   56 AssignmentStmt: ID $@5 AssignmentOperatorType Expr ';' •

    $default  reduce using rule 56 (AssignmentStmt)


State 140

   50 PrintStmt: PrintType $@4 '(' Expr ')' • ';'

    ';'  shift, and go to state 145


State 141

   52 DeclarationStmt: LET MutType ID ':' Type ';' •

    $default  reduce using rule 52 (DeclarationStmt)


State 142

   51 DeclarationStmt: LET MutType ID ':' Type '=' • Expr ';'

    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    INT_LIT    shift, and go to state 30
    FLOAT_LIT  shift, and go to state 31
    ID         shift, and go to state 32
    '!'        shift, and go to state 33
    '-'        shift, and go to state 34
    '('        shift, and go to state 35
    '"'        shift, and go to state 36
    '['        shift, and go to state 37

    Expr  go to state 146


State 143

   53 DeclarationStmt: LET MutType ID '=' Expr ';' •

    $default  reduce using rule 53 (DeclarationStmt)


State 144

   59 IfStmt: IF IfCondition Block ELSE $@6 Block •

    $default  reduce using rule 59 (IfStmt)


State 145

   50 PrintStmt: PrintType $@4 '(' Expr ')' ';' •

    $default  reduce using rule 50 (PrintStmt)


State 146

   31 Expr: Expr • '*' Expr
   32     | Expr • '/' Expr
   33     | Expr • '%' Expr
   34     | Expr • '+' Expr
   35     | Expr • '-' Expr
   36     | Expr • LSHIFT Expr
   37     | Expr • RSHIFT Expr
   38     | Expr • LAND Expr
   39     | Expr • LOR Expr
   40     | Expr • GEQ Expr
   41     | Expr • LEQ Expr
   42     | Expr • EQL Expr
   43     | Expr • NEQ Expr
   44     | Expr • '>' Expr
   45     | Expr • '<' Expr
   46     | Expr • AS Type
   51 DeclarationStmt: LET MutType ID ':' Type '=' Expr • ';'

    GEQ     shift, and go to state 50
    LEQ     shift, and go to state 51
    EQL     shift, and go to state 52
    NEQ     shift, and go to state 53
    LOR     shift, and go to state 54
    LAND    shift, and go to state 55
    AS      shift, and go to state 56
    RSHIFT  shift, and go to state 57
    LSHIFT  shift, and go to state 58
    '>'     shift, and go to state 59
    '<'     shift, and go to state 60
    '+'     shift, and go to state 61
    '-'     shift, and go to state 62
    '*'     shift, and go to state 63
    '/'     shift, and go to state 64
    '%'     shift, and go to state 65
    ';'     shift, and go to state 147


State 147

   51 DeclarationStmt: LET MutType ID ':' Type '=' Expr ';' •

    $default  reduce using rule 51 (DeclarationStmt)
