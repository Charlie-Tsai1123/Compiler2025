Terminals unused in grammar

    LET
    MUT
    GEQ
    LEQ
    EQL
    NEQ
    LOR
    LAND
    ADD_ASSIGN
    SUB_ASSIGN
    MUL_ASSIGN
    DIV_ASSIGN
    REM_ASSIGN
    IF
    ELSE
    FOR
    WHILE
    LOOP
    RETURN
    BREAK
    AS
    IN
    DOTDOT
    RSHIFT
    LSHIFT
    IFX
    '!'
    '>'
    '<'
    '+'
    '-'
    '*'
    '/'
    '%'
    UMINUS


Grammar

    0 $accept: Program $end

    1 $@1: ε

    2 Program: $@1 GlobalStatementList

    3 GlobalStatementList: GlobalStatementList GlobalStatement
    4                    | GlobalStatement

    5 GlobalStatement: FunctionDeclStmt
    6                | NEWLINE

    7 $@2: ε

    8 FunctionDeclStmt: FUNC ID '(' FunctionArguments ')' ArrowType $@2 Block

    9 StmtList: StmtList Stmt
   10         | ε

   11 Stmt: PrintStmt

   12 $@3: ε

   13 Block: '{' $@3 StmtList '}'

   14 Expr: ID
   15     | INT_LIT
   16     | FLOAT_LIT
   17     | '"' STRING_LIT '"'
   18     | '"' '"'
   19     | TRUE
   20     | FALSE

   21 $@4: ε

   22 PrintStmt: PrintType $@4 '(' Expr ')' ';'

   23 Type: INT
   24     | FLOAT
   25     | BOOL
   26     | '&' STR
   27     | '[' Type ';' Expr ']'
   28     | ε

   29 PrintType: PRINT
   30          | PRINTLN

   31 FunctionArguments: FunctionArguments ',' Type ID
   32                  | Type ID
   33                  | ε

   34 ArrowType: ARROW Type
   35          | ε


Terminals, with rules where they appear

    $end (0) 0
    '!' (33)
    '"' (34) 17 18
    '%' (37)
    '&' (38) 26
    '(' (40) 8 22
    ')' (41) 8 22
    '*' (42)
    '+' (43)
    ',' (44) 31
    '-' (45)
    '/' (47)
    ';' (59) 22 27
    '<' (60)
    '>' (62)
    '[' (91) 27
    ']' (93) 27
    '{' (123) 13
    '}' (125) 13
    error (256)
    LET (258)
    MUT (259)
    NEWLINE (260) 6
    INT (261) 23
    FLOAT (262) 24
    BOOL (263) 25
    STR (264) 26
    TRUE (265) 19
    FALSE (266) 20
    GEQ (267)
    LEQ (268)
    EQL (269)
    NEQ (270)
    LOR (271)
    LAND (272)
    ADD_ASSIGN (273)
    SUB_ASSIGN (274)
    MUL_ASSIGN (275)
    DIV_ASSIGN (276)
    REM_ASSIGN (277)
    IF (278)
    ELSE (279)
    FOR (280)
    WHILE (281)
    LOOP (282)
    PRINT (283) 29
    PRINTLN (284) 30
    FUNC (285) 8
    RETURN (286)
    BREAK (287)
    ARROW (288) 34
    AS (289)
    IN (290)
    DOTDOT (291)
    RSHIFT (292)
    LSHIFT (293)
    INT_LIT <i_val> (294) 15
    FLOAT_LIT <f_val> (295) 16
    STRING_LIT <s_val> (296) 17
    ID <s_val> (297) 8 14 31 32
    IFX (298)
    UMINUS (299)


Nonterminals, with rules where they appear

    $accept (63)
        on left: 0
    Program (64)
        on left: 2
        on right: 0
    $@1 (65)
        on left: 1
        on right: 2
    GlobalStatementList (66)
        on left: 3 4
        on right: 2 3
    GlobalStatement (67)
        on left: 5 6
        on right: 3 4
    FunctionDeclStmt (68)
        on left: 8
        on right: 5
    $@2 (69)
        on left: 7
        on right: 8
    StmtList (70)
        on left: 9 10
        on right: 9 13
    Stmt (71)
        on left: 11
        on right: 9
    Block (72)
        on left: 13
        on right: 8
    $@3 (73)
        on left: 12
        on right: 13
    Expr <s_val> (74)
        on left: 14 15 16 17 18 19 20
        on right: 22 27
    PrintStmt (75)
        on left: 22
        on right: 11
    $@4 (76)
        on left: 21
        on right: 22
    Type <s_val> (77)
        on left: 23 24 25 26 27 28
        on right: 27 31 32 34
    PrintType <s_val> (78)
        on left: 29 30
        on right: 22
    FunctionArguments <s_val> (79)
        on left: 31 32 33
        on right: 8 31
    ArrowType <s_val> (80)
        on left: 34 35
        on right: 8


State 0

    0 $accept: • Program $end

    $default  reduce using rule 1 ($@1)

    Program  go to state 1
    $@1      go to state 2


State 1

    0 $accept: Program • $end

    $end  shift, and go to state 3


State 2

    2 Program: $@1 • GlobalStatementList

    NEWLINE  shift, and go to state 4
    FUNC     shift, and go to state 5

    GlobalStatementList  go to state 6
    GlobalStatement      go to state 7
    FunctionDeclStmt     go to state 8


State 3

    0 $accept: Program $end •

    $default  accept


State 4

    6 GlobalStatement: NEWLINE •

    $default  reduce using rule 6 (GlobalStatement)


State 5

    8 FunctionDeclStmt: FUNC • ID '(' FunctionArguments ')' ArrowType $@2 Block

    ID  shift, and go to state 9


State 6

    2 Program: $@1 GlobalStatementList •
    3 GlobalStatementList: GlobalStatementList • GlobalStatement

    NEWLINE  shift, and go to state 4
    FUNC     shift, and go to state 5

    $default  reduce using rule 2 (Program)

    GlobalStatement   go to state 10
    FunctionDeclStmt  go to state 8


State 7

    4 GlobalStatementList: GlobalStatement •

    $default  reduce using rule 4 (GlobalStatementList)


State 8

    5 GlobalStatement: FunctionDeclStmt •

    $default  reduce using rule 5 (GlobalStatement)


State 9

    8 FunctionDeclStmt: FUNC ID • '(' FunctionArguments ')' ArrowType $@2 Block

    '('  shift, and go to state 11


State 10

    3 GlobalStatementList: GlobalStatementList GlobalStatement •

    $default  reduce using rule 3 (GlobalStatementList)


State 11

    8 FunctionDeclStmt: FUNC ID '(' • FunctionArguments ')' ArrowType $@2 Block

    INT    shift, and go to state 12
    FLOAT  shift, and go to state 13
    BOOL   shift, and go to state 14
    '&'    shift, and go to state 15
    '['    shift, and go to state 16

    ID        reduce using rule 28 (Type)
    $default  reduce using rule 33 (FunctionArguments)

    Type               go to state 17
    FunctionArguments  go to state 18


State 12

   23 Type: INT •

    $default  reduce using rule 23 (Type)


State 13

   24 Type: FLOAT •

    $default  reduce using rule 24 (Type)


State 14

   25 Type: BOOL •

    $default  reduce using rule 25 (Type)


State 15

   26 Type: '&' • STR

    STR  shift, and go to state 19


State 16

   27 Type: '[' • Type ';' Expr ']'

    INT    shift, and go to state 12
    FLOAT  shift, and go to state 13
    BOOL   shift, and go to state 14
    '&'    shift, and go to state 15
    '['    shift, and go to state 16

    $default  reduce using rule 28 (Type)

    Type  go to state 20


State 17

   32 FunctionArguments: Type • ID

    ID  shift, and go to state 21


State 18

    8 FunctionDeclStmt: FUNC ID '(' FunctionArguments • ')' ArrowType $@2 Block
   31 FunctionArguments: FunctionArguments • ',' Type ID

    ')'  shift, and go to state 22
    ','  shift, and go to state 23


State 19

   26 Type: '&' STR •

    $default  reduce using rule 26 (Type)


State 20

   27 Type: '[' Type • ';' Expr ']'

    ';'  shift, and go to state 24


State 21

   32 FunctionArguments: Type ID •

    $default  reduce using rule 32 (FunctionArguments)


State 22

    8 FunctionDeclStmt: FUNC ID '(' FunctionArguments ')' • ArrowType $@2 Block

    ARROW  shift, and go to state 25

    $default  reduce using rule 35 (ArrowType)

    ArrowType  go to state 26


State 23

   31 FunctionArguments: FunctionArguments ',' • Type ID

    INT    shift, and go to state 12
    FLOAT  shift, and go to state 13
    BOOL   shift, and go to state 14
    '&'    shift, and go to state 15
    '['    shift, and go to state 16

    $default  reduce using rule 28 (Type)

    Type  go to state 27


State 24

   27 Type: '[' Type ';' • Expr ']'

    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    INT_LIT    shift, and go to state 30
    FLOAT_LIT  shift, and go to state 31
    ID         shift, and go to state 32
    '"'        shift, and go to state 33

    Expr  go to state 34


State 25

   34 ArrowType: ARROW • Type

    INT    shift, and go to state 12
    FLOAT  shift, and go to state 13
    BOOL   shift, and go to state 14
    '&'    shift, and go to state 15
    '['    shift, and go to state 16

    $default  reduce using rule 28 (Type)

    Type  go to state 35


State 26

    8 FunctionDeclStmt: FUNC ID '(' FunctionArguments ')' ArrowType • $@2 Block

    $default  reduce using rule 7 ($@2)

    $@2  go to state 36


State 27

   31 FunctionArguments: FunctionArguments ',' Type • ID

    ID  shift, and go to state 37


State 28

   19 Expr: TRUE •

    $default  reduce using rule 19 (Expr)


State 29

   20 Expr: FALSE •

    $default  reduce using rule 20 (Expr)


State 30

   15 Expr: INT_LIT •

    $default  reduce using rule 15 (Expr)


State 31

   16 Expr: FLOAT_LIT •

    $default  reduce using rule 16 (Expr)


State 32

   14 Expr: ID •

    $default  reduce using rule 14 (Expr)


State 33

   17 Expr: '"' • STRING_LIT '"'
   18     | '"' • '"'

    STRING_LIT  shift, and go to state 38
    '"'         shift, and go to state 39


State 34

   27 Type: '[' Type ';' Expr • ']'

    ']'  shift, and go to state 40


State 35

   34 ArrowType: ARROW Type •

    $default  reduce using rule 34 (ArrowType)


State 36

    8 FunctionDeclStmt: FUNC ID '(' FunctionArguments ')' ArrowType $@2 • Block

    '{'  shift, and go to state 41

    Block  go to state 42


State 37

   31 FunctionArguments: FunctionArguments ',' Type ID •

    $default  reduce using rule 31 (FunctionArguments)


State 38

   17 Expr: '"' STRING_LIT • '"'

    '"'  shift, and go to state 43


State 39

   18 Expr: '"' '"' •

    $default  reduce using rule 18 (Expr)


State 40

   27 Type: '[' Type ';' Expr ']' •

    $default  reduce using rule 27 (Type)


State 41

   13 Block: '{' • $@3 StmtList '}'

    $default  reduce using rule 12 ($@3)

    $@3  go to state 44


State 42

    8 FunctionDeclStmt: FUNC ID '(' FunctionArguments ')' ArrowType $@2 Block •

    $default  reduce using rule 8 (FunctionDeclStmt)


State 43

   17 Expr: '"' STRING_LIT '"' •

    $default  reduce using rule 17 (Expr)


State 44

   13 Block: '{' $@3 • StmtList '}'

    $default  reduce using rule 10 (StmtList)

    StmtList  go to state 45


State 45

    9 StmtList: StmtList • Stmt
   13 Block: '{' $@3 StmtList • '}'

    PRINT    shift, and go to state 46
    PRINTLN  shift, and go to state 47
    '}'      shift, and go to state 48

    Stmt       go to state 49
    PrintStmt  go to state 50
    PrintType  go to state 51


State 46

   29 PrintType: PRINT •

    $default  reduce using rule 29 (PrintType)


State 47

   30 PrintType: PRINTLN •

    $default  reduce using rule 30 (PrintType)


State 48

   13 Block: '{' $@3 StmtList '}' •

    $default  reduce using rule 13 (Block)


State 49

    9 StmtList: StmtList Stmt •

    $default  reduce using rule 9 (StmtList)


State 50

   11 Stmt: PrintStmt •

    $default  reduce using rule 11 (Stmt)


State 51

   22 PrintStmt: PrintType • $@4 '(' Expr ')' ';'

    $default  reduce using rule 21 ($@4)

    $@4  go to state 52


State 52

   22 PrintStmt: PrintType $@4 • '(' Expr ')' ';'

    '('  shift, and go to state 53


State 53

   22 PrintStmt: PrintType $@4 '(' • Expr ')' ';'

    TRUE       shift, and go to state 28
    FALSE      shift, and go to state 29
    INT_LIT    shift, and go to state 30
    FLOAT_LIT  shift, and go to state 31
    ID         shift, and go to state 32
    '"'        shift, and go to state 33

    Expr  go to state 54


State 54

   22 PrintStmt: PrintType $@4 '(' Expr • ')' ';'

    ')'  shift, and go to state 55


State 55

   22 PrintStmt: PrintType $@4 '(' Expr ')' • ';'

    ';'  shift, and go to state 56


State 56

   22 PrintStmt: PrintType $@4 '(' Expr ')' ';' •

    $default  reduce using rule 22 (PrintStmt)
